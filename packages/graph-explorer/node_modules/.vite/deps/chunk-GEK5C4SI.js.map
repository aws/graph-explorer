{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/clsx@1.2.1/node_modules/clsx/dist/clsx.m.js", "../../../../../node_modules/.pnpm/@react-aria+ssr@3.3.0_react@17.0.2/node_modules/@react-aria/ssr/dist/packages/@react-aria/ssr/src/index.ts", "../../../../../node_modules/.pnpm/@react-aria+ssr@3.3.0_react@17.0.2/node_modules/@react-aria/ssr/dist/packages/@react-aria/ssr/src/SSRProvider.tsx", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/index.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useId.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useLayoutEffect.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/chain.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/mergeProps.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/mergeRefs.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/filterDOMProps.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/focusWithoutScrolling.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/getOffset.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/runAfterTransition.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useDrag1D.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useGlobalListeners.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useLabels.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useObjectRef.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useUpdateEffect.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useResizeObserver.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useSyncRef.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/getScrollParent.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useViewportSize.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useDescription.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/platform.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useEvent.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useValueEffect.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/scrollIntoView.ts", "../../../../../node_modules/.pnpm/@react-aria+utils@3.14.0_react@17.0.2/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/isVirtualEvent.ts", "../../../../../node_modules/.pnpm/@react-aria+interactions@3.12.0_react@17.0.2/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/index.ts", "../../../../../node_modules/.pnpm/@react-aria+interactions@3.12.0_react@17.0.2/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/Pressable.tsx", "../../../../../node_modules/.pnpm/@react-aria+interactions@3.12.0_react@17.0.2/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/usePress.ts", "../../../../../node_modules/.pnpm/@react-aria+interactions@3.12.0_react@17.0.2/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/textSelection.ts", "../../../../../node_modules/.pnpm/@react-aria+interactions@3.12.0_react@17.0.2/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/context.ts", "../../../../../node_modules/.pnpm/@react-aria+interactions@3.12.0_react@17.0.2/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/PressResponder.tsx", "../../../../../node_modules/.pnpm/@react-aria+interactions@3.12.0_react@17.0.2/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useFocus.ts", "../../../../../node_modules/.pnpm/@react-aria+interactions@3.12.0_react@17.0.2/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/utils.ts", "../../../../../node_modules/.pnpm/@react-aria+interactions@3.12.0_react@17.0.2/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useFocusVisible.ts", "../../../../../node_modules/.pnpm/@react-aria+interactions@3.12.0_react@17.0.2/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useFocusWithin.ts", "../../../../../node_modules/.pnpm/@react-aria+interactions@3.12.0_react@17.0.2/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useHover.ts", "../../../../../node_modules/.pnpm/@react-aria+interactions@3.12.0_react@17.0.2/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useInteractOutside.ts", "../../../../../node_modules/.pnpm/@react-aria+interactions@3.12.0_react@17.0.2/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useKeyboard.ts", "../../../../../node_modules/.pnpm/@react-aria+interactions@3.12.0_react@17.0.2/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/createEventHandler.ts", "../../../../../node_modules/.pnpm/@react-aria+interactions@3.12.0_react@17.0.2/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useMove.ts", "../../../../../node_modules/.pnpm/@react-aria+interactions@3.12.0_react@17.0.2/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useScrollWheel.ts", "../../../../../node_modules/.pnpm/@react-aria+interactions@3.12.0_react@17.0.2/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useLongPress.ts"],
  "sourcesContent": ["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport {SSRProvider, useSSRSafeId, useIsSSR} from './SSRProvider';\nexport type {SSRProviderProps} from './SSRProvider';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// We must avoid a circular dependency with @react-aria/utils, and this useLayoutEffect is\n// guarded by a check that it only runs on the client side.\n// eslint-disable-next-line rulesdir/useLayoutEffectRule\nimport React, {ReactNode, useContext, useLayoutEffect, useMemo, useState} from 'react';\n\n// To support SSR, the auto incrementing id counter is stored in a context. This allows\n// it to be reset on every request to ensure the client and server are consistent.\n// There is also a prefix string that is used to support async loading components\n// Each async boundary must be wrapped in an SSR provider, which appends to the prefix\n// and resets the current id counter. This ensures that async loaded components have\n// consistent ids regardless of the loading order.\ninterface SSRContextValue {\n  prefix: string,\n  current: number\n}\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst defaultContext: SSRContextValue = {\n  prefix: String(Math.round(Math.random() * 10000000000)),\n  current: 0\n};\n\nconst SSRContext = React.createContext<SSRContextValue>(defaultContext);\n\nexport interface SSRProviderProps {\n  /** Your application here. */\n  children: ReactNode\n}\n\n/**\n * When using SSR with React Aria, applications must be wrapped in an SSRProvider.\n * This ensures that auto generated ids are consistent between the client and server.\n */\nexport function SSRProvider(props: SSRProviderProps): JSX.Element {\n  let cur = useContext(SSRContext);\n  let value: SSRContextValue = useMemo(() => ({\n    // If this is the first SSRProvider, start with an empty string prefix, otherwise\n    // append and increment the counter.\n    prefix: cur === defaultContext ? '' : `${cur.prefix}-${++cur.current}`,\n    current: 0\n  }), [cur]);\n\n  return (\n    <SSRContext.Provider value={value}>\n      {props.children}\n    </SSRContext.Provider>\n  );\n}\n\nlet canUseDOM = Boolean(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\n/** @private */\nexport function useSSRSafeId(defaultId?: string): string {\n  let ctx = useContext(SSRContext);\n\n  // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n  // provide a warning to hint to the developer to add one.\n  if (ctx === defaultContext && !canUseDOM) {\n    console.warn('When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.');\n  }\n\n  return useMemo(() => defaultId || `react-aria${ctx.prefix}-${++ctx.current}`, [defaultId]);\n}\n\n/**\n * Returns whether the component is currently being server side rendered or\n * hydrated on the client. Can be used to delay browser-specific rendering\n * until after hydration.\n */\nexport function useIsSSR(): boolean {\n  let cur = useContext(SSRContext);\n  let isInSSRContext = cur !== defaultContext;\n  let [isSSR, setIsSSR] = useState(isInSSRContext);\n\n  // If on the client, and the component was initially server rendered,\n  // then schedule a layout effect to update the component after hydration.\n  if (typeof window !== 'undefined' && isInSSRContext) {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(() => {\n      setIsSSR(false);\n    }, []);\n  }\n\n  return isSSR;\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport {useId, mergeIds, useSlotId} from './useId';\nexport {chain} from './chain';\nexport {mergeProps} from './mergeProps';\nexport {mergeRefs} from './mergeRefs';\nexport {filterDOMProps} from './filterDOMProps';\nexport {focusWithoutScrolling} from './focusWithoutScrolling';\nexport {getOffset} from './getOffset';\nexport {runAfterTransition} from './runAfterTransition';\nexport {useDrag1D} from './useDrag1D';\nexport {useGlobalListeners} from './useGlobalListeners';\nexport {useLabels} from './useLabels';\nexport {useObjectRef} from './useObjectRef';\nexport {useUpdateEffect} from './useUpdateEffect';\nexport {useLayoutEffect} from './useLayoutEffect';\nexport {useResizeObserver} from './useResizeObserver';\nexport {useSyncRef} from './useSyncRef';\nexport {getScrollParent} from './getScrollParent';\nexport {useViewportSize} from './useViewportSize';\nexport {useDescription} from './useDescription';\nexport {isMac, isIPhone, isIPad, isIOS, isAppleDevice, isWebKit, isChrome, isAndroid} from './platform';\nexport {useEvent} from './useEvent';\nexport {useValueEffect} from './useValueEffect';\nexport {scrollIntoView} from './scrollIntoView';\nexport {clamp, snapValueToStep} from '@react-stately/utils';\nexport {isVirtualClick, isVirtualPointerEvent} from './isVirtualEvent';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCallback, useEffect, useRef, useState} from 'react';\nimport {useLayoutEffect} from './useLayoutEffect';\nimport {useSSRSafeId} from '@react-aria/ssr';\nimport {useValueEffect} from './';\n\nlet idsUpdaterMap: Map<string, (v: string) => void> = new Map();\n\n/**\n * If a default is not provided, generate an id.\n * @param defaultId - Default component id.\n */\nexport function useId(defaultId?: string): string {\n  let [value, setValue] = useState(defaultId);\n  let nextId = useRef(null);\n\n  let res = useSSRSafeId(value);\n\n  let updateValue = useCallback((val) => {\n    nextId.current = val;\n  }, []);\n\n  idsUpdaterMap.set(res, updateValue);\n\n  useLayoutEffect(() => {\n    let r = res;\n    return () => {\n      idsUpdaterMap.delete(r);\n    };\n  }, [res]);\n\n  // This cannot cause an infinite loop because the ref is updated first.\n  // eslint-disable-next-line\n  useEffect(() => {\n    let newId = nextId.current;\n    if (newId) {\n      nextId.current = null;\n      setValue(newId);\n    }\n  });\n\n  return res;\n}\n\n/**\n * Merges two ids.\n * Different ids will trigger a side-effect and re-render components hooked up with `useId`.\n */\nexport function mergeIds(idA: string, idB: string): string {\n  if (idA === idB) {\n    return idA;\n  }\n\n  let setIdA = idsUpdaterMap.get(idA);\n  if (setIdA) {\n    setIdA(idB);\n    return idB;\n  }\n\n  let setIdB = idsUpdaterMap.get(idB);\n  if (setIdB) {\n    setIdB(idA);\n    return idA;\n  }\n\n  return idB;\n}\n\n/**\n * Used to generate an id, and after render, check if that id is rendered so we know\n * if we can use it in places such as labelledby.\n * @param depArray - When to recalculate if the id is in the DOM.\n */\nexport function useSlotId(depArray: ReadonlyArray<any> = []): string {\n  let id = useId();\n  let [resolvedId, setResolvedId] = useValueEffect(id);\n  let updateId = useCallback(() => {\n    setResolvedId(function *() {\n      yield id;\n\n      yield document.getElementById(id) ? id : undefined;\n    });\n  }, [id, setResolvedId]);\n\n  useLayoutEffect(updateId, [id, updateId, ...depArray]);\n\n  return resolvedId;\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React from 'react';\n\n// During SSR, React emits a warning when calling useLayoutEffect.\n// Since neither useLayoutEffect nor useEffect run on the server,\n// we can suppress this by replace it with a noop on the server.\nexport const useLayoutEffect = typeof window !== 'undefined'\n  ? React.useLayoutEffect\n  : () => {};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/**\n * Calls all functions in the order they were chained with the same arguments.\n */\nexport function chain(...callbacks: any[]): (...args: any[]) => void {\n  return (...args: any[]) => {\n    for (let callback of callbacks) {\n      if (typeof callback === 'function') {\n        callback(...args);\n      }\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {chain} from './chain';\nimport clsx from 'clsx';\nimport {mergeIds} from './useId';\n\ninterface Props {\n  [key: string]: any\n}\n\n// taken from: https://stackoverflow.com/questions/51603250/typescript-3-parameter-list-intersection-type/51604379#51604379\ntype TupleTypes<T> = { [P in keyof T]: T[P] } extends { [key: number]: infer V } ? V : never;\n// eslint-disable-next-line no-undef, @typescript-eslint/no-unused-vars\ntype UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends ((k: infer I) => void) ? I : never;\n\n/**\n * Merges multiple props objects together. Event handlers are chained,\n * classNames are combined, and ids are deduplicated - different ids\n * will trigger a side-effect and re-render components hooked up with `useId`.\n * For all other props, the last prop object overrides all previous ones.\n * @param args - Multiple sets of props to merge together.\n */\nexport function mergeProps<T extends Props[]>(...args: T): UnionToIntersection<TupleTypes<T>> {\n  // Start with a base clone of the first argument. This is a lot faster than starting\n  // with an empty object and adding properties as we go.\n  let result: Props = {...args[0]};\n  for (let i = 1; i < args.length; i++) {\n    let props = args[i];\n    for (let key in props) {\n      let a = result[key];\n      let b = props[key];\n\n      // Chain events\n      if (\n        typeof a === 'function' &&\n        typeof b === 'function' &&\n        // This is a lot faster than a regex.\n        key[0] === 'o' &&\n        key[1] === 'n' &&\n        key.charCodeAt(2) >= /* 'A' */ 65 &&\n        key.charCodeAt(2) <= /* 'Z' */ 90\n      ) {\n        result[key] = chain(a, b);\n\n        // Merge classnames, sometimes classNames are empty string which eval to false, so we just need to do a type check\n      } else if (\n        (key === 'className' || key === 'UNSAFE_className') &&\n        typeof a === 'string' &&\n        typeof b === 'string'\n      ) {\n        result[key] = clsx(a, b);\n      } else if (key === 'id' && a && b) {\n        result.id = mergeIds(a, b);\n        // Override others\n      } else {\n        result[key] = b !== undefined ? b : a;\n      }\n    }\n  }\n\n  return result as UnionToIntersection<TupleTypes<T>>;\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ForwardedRef} from 'react';\n\n/**\n * Merges multiple refs into one. Works with either callback or object refs.\n */\nexport function mergeRefs<T>(...refs: ForwardedRef<T>[]): ForwardedRef<T> {\n  return (value: T) => {\n    for (let ref of refs) {\n      if (typeof ref === 'function') {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMProps} from '@react-types/shared';\n\nconst DOMPropNames = new Set([\n  'id'\n]);\n\nconst labelablePropNames = new Set([\n  'aria-label',\n  'aria-labelledby',\n  'aria-describedby',\n  'aria-details'\n]);\n\ninterface Options {\n  /**\n   * If labelling associated aria properties should be included in the filter.\n   */\n  labelable?: boolean,\n  /**\n   * A Set of other property names that should be included in the filter.\n   */\n  propNames?: Set<string>\n}\n\nconst propRe = /^(data-.*)$/;\n\n/**\n * Filters out all props that aren't valid DOM props or defined via override prop obj.\n * @param props - The component props to be filtered.\n * @param opts - Props to override.\n */\nexport function filterDOMProps(props: DOMProps & AriaLabelingProps, opts: Options = {}): DOMProps & AriaLabelingProps {\n  let {labelable, propNames} = opts;\n  let filteredProps = {};\n\n  for (const prop in props) {\n    if (\n      Object.prototype.hasOwnProperty.call(props, prop) && (\n        DOMPropNames.has(prop) ||\n        (labelable && labelablePropNames.has(prop)) ||\n        propNames?.has(prop) ||\n        propRe.test(prop)\n      )\n    ) {\n      filteredProps[prop] = props[prop];\n    }\n  }\n\n  return filteredProps;\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\n\n// This is a polyfill for element.focus({preventScroll: true});\n// Currently necessary for Safari and old Edge:\n// https://caniuse.com/#feat=mdn-api_htmlelement_focus_preventscroll_option\n// See https://bugs.webkit.org/show_bug.cgi?id=178583\n//\n\n// Original licensing for the following methods can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/calvellido/focus-options-polyfill\n\ninterface ScrollableElement {\n  element: HTMLElement,\n  scrollTop: number,\n  scrollLeft: number\n}\n\nexport function focusWithoutScrolling(element: FocusableElement) {\n  if (supportsPreventScroll()) {\n    element.focus({preventScroll: true});\n  } else {\n    let scrollableElements = getScrollableElements(element);\n    element.focus();\n    restoreScrollPosition(scrollableElements);\n  }\n}\n\nlet supportsPreventScrollCached: boolean = null;\nfunction supportsPreventScroll() {\n  if (supportsPreventScrollCached == null) {\n    supportsPreventScrollCached = false;\n    try {\n      var focusElem = document.createElement('div');\n      focusElem.focus({\n        get preventScroll() {\n          supportsPreventScrollCached = true;\n          return true;\n        }\n      });\n    } catch (e) {\n      // Ignore\n    }\n  }\n\n  return supportsPreventScrollCached;\n}\n\nfunction getScrollableElements(element: FocusableElement): ScrollableElement[] {\n  var parent = element.parentNode;\n  var scrollableElements: ScrollableElement[] = [];\n  var rootScrollingElement = document.scrollingElement || document.documentElement;\n\n  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {\n    if (\n      parent.offsetHeight < parent.scrollHeight ||\n      parent.offsetWidth < parent.scrollWidth\n    ) {\n      scrollableElements.push({\n        element: parent,\n        scrollTop: parent.scrollTop,\n        scrollLeft: parent.scrollLeft\n      });\n    }\n    parent = parent.parentNode;\n  }\n\n  if (rootScrollingElement instanceof HTMLElement) {\n    scrollableElements.push({\n      element: rootScrollingElement,\n      scrollTop: rootScrollingElement.scrollTop,\n      scrollLeft: rootScrollingElement.scrollLeft\n    });\n  }\n\n  return scrollableElements;\n}\n\nfunction restoreScrollPosition(scrollableElements: ScrollableElement[]) {\n  for (let {element, scrollTop, scrollLeft} of scrollableElements) {\n    element.scrollTop = scrollTop;\n    element.scrollLeft = scrollLeft;\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport function getOffset(element, reverse, orientation = 'horizontal') {\n  let rect = element.getBoundingClientRect();\n  if (reverse) {\n    return orientation === 'horizontal' ? rect.right : rect.bottom;\n  }\n  return orientation === 'horizontal' ? rect.left : rect.top;\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// We store a global list of elements that are currently transitioning,\n// mapped to a set of CSS properties that are transitioning for that element.\n// This is necessary rather than a simple count of transitions because of browser\n// bugs, e.g. Chrome sometimes fires both transitionend and transitioncancel rather\n// than one or the other. So we need to track what's actually transitioning so that\n// we can ignore these duplicate events.\nlet transitionsByElement = new Map<EventTarget, Set<string>>();\n\n// A list of callbacks to call once there are no transitioning elements.\nlet transitionCallbacks = new Set<() => void>();\n\nfunction setupGlobalEvents() {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  let onTransitionStart = (e: TransitionEvent) => {\n    // Add the transitioning property to the list for this element.\n    let transitions = transitionsByElement.get(e.target);\n    if (!transitions) {\n      transitions = new Set();\n      transitionsByElement.set(e.target, transitions);\n\n      // The transitioncancel event must be registered on the element itself, rather than as a global\n      // event. This enables us to handle when the node is deleted from the document while it is transitioning.\n      // In that case, the cancel event would have nowhere to bubble to so we need to handle it directly.\n      e.target.addEventListener('transitioncancel', onTransitionEnd);\n    }\n\n    transitions.add(e.propertyName);\n  };\n\n  let onTransitionEnd = (e: TransitionEvent) => {\n    // Remove property from list of transitioning properties.\n    let properties = transitionsByElement.get(e.target);\n    if (!properties) {\n      return;\n    }\n\n    properties.delete(e.propertyName);\n\n    // If empty, remove transitioncancel event, and remove the element from the list of transitioning elements.\n    if (properties.size === 0) {\n      e.target.removeEventListener('transitioncancel', onTransitionEnd);\n      transitionsByElement.delete(e.target);\n    }\n\n    // If no transitioning elements, call all of the queued callbacks.\n    if (transitionsByElement.size === 0) {\n      for (let cb of transitionCallbacks) {\n        cb();\n      }\n\n      transitionCallbacks.clear();\n    }\n  };\n\n  document.body.addEventListener('transitionrun', onTransitionStart);\n  document.body.addEventListener('transitionend', onTransitionEnd);\n}\n\nif (typeof document !== 'undefined') {\n  if (document.readyState !== 'loading') {\n    setupGlobalEvents();\n  } else {\n    document.addEventListener('DOMContentLoaded', setupGlobalEvents);\n  }\n}\n\nexport function runAfterTransition(fn: () => void) {\n  // Wait one frame to see if an animation starts, e.g. a transition on mount.\n  requestAnimationFrame(() => {\n    // If no transitions are running, call the function immediately.\n    // Otherwise, add it to a list of callbacks to run at the end of the animation.\n    if (transitionsByElement.size === 0) {\n      fn();\n    } else {\n      transitionCallbacks.add(fn);\n    }\n  });\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {getOffset} from './getOffset';\nimport {Orientation} from '@react-types/shared';\nimport React, {HTMLAttributes, MutableRefObject, useRef} from 'react';\n\ninterface UseDrag1DProps {\n  containerRef: MutableRefObject<HTMLElement>,\n  reverse?: boolean,\n  orientation?: Orientation,\n  onHover?: (hovered: boolean) => void,\n  onDrag?: (dragging: boolean) => void,\n  onPositionChange?: (position: number) => void,\n  onIncrement?: () => void,\n  onDecrement?: () => void,\n  onIncrementToMax?: () => void,\n  onDecrementToMin?: () => void,\n  onCollapseToggle?: () => void\n}\n\n// Keep track of elements that we are currently handling dragging for via useDrag1D.\n// If there's an ancestor and a descendant both using useDrag1D(), and the user starts\n// dragging the descendant, we don't want useDrag1D events to fire for the ancestor.\nconst draggingElements: HTMLElement[] = [];\n\n// created for splitview, this should be reusable for things like sliders/dials\n// It also handles keyboard events on the target allowing for increment/decrement by a given stepsize as well as minifying/maximizing and toggling between minified and previous size\n// It can also take a 'reverse' param to say if we should measure from the right/bottom instead of the top/left\n// It can also handle either a vertical or horizontal movement, but not both at the same time\n\nexport function useDrag1D(props: UseDrag1DProps): HTMLAttributes<HTMLElement> {\n  console.warn('useDrag1D is deprecated, please use `useMove` instead https://react-spectrum.adobe.com/react-aria/useMove.html');\n  let {containerRef, reverse, orientation, onHover, onDrag, onPositionChange, onIncrement, onDecrement, onIncrementToMax, onDecrementToMin, onCollapseToggle} = props;\n  let getPosition = (e) => orientation === 'horizontal' ? e.clientX : e.clientY;\n  let getNextOffset = (e: MouseEvent) => {\n    let containerOffset = getOffset(containerRef.current, reverse, orientation);\n    let mouseOffset = getPosition(e);\n    let nextOffset = reverse ? containerOffset - mouseOffset : mouseOffset - containerOffset;\n    return nextOffset;\n  };\n  let dragging = useRef(false);\n  let prevPosition = useRef(0);\n\n  // Keep track of the current handlers in a ref so that the events can access them.\n  let handlers = useRef({onPositionChange, onDrag});\n  handlers.current.onDrag = onDrag;\n  handlers.current.onPositionChange = onPositionChange;\n\n  let onMouseDragged = (e: MouseEvent) => {\n    e.preventDefault();\n    let nextOffset = getNextOffset(e);\n    if (!dragging.current) {\n      dragging.current = true;\n      if (handlers.current.onDrag) {\n        handlers.current.onDrag(true);\n      }\n      if (handlers.current.onPositionChange) {\n        handlers.current.onPositionChange(nextOffset);\n      }\n    }\n    if (prevPosition.current === nextOffset) {\n      return;\n    }\n    prevPosition.current = nextOffset;\n    if (onPositionChange) {\n      onPositionChange(nextOffset);\n    }\n  };\n\n  let onMouseUp = (e: MouseEvent) => {\n    const target = e.target as HTMLElement;\n    dragging.current = false;\n    let nextOffset = getNextOffset(e);\n    if (handlers.current.onDrag) {\n      handlers.current.onDrag(false);\n    }\n    if (handlers.current.onPositionChange) {\n      handlers.current.onPositionChange(nextOffset);\n    }\n\n    draggingElements.splice(draggingElements.indexOf(target), 1);\n    window.removeEventListener('mouseup', onMouseUp, false);\n    window.removeEventListener('mousemove', onMouseDragged, false);\n  };\n\n  let onMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    const target = e.currentTarget;\n    // If we're already handling dragging on a descendant with useDrag1D, then\n    // we don't want to handle the drag motion on this target as well.\n    if (draggingElements.some(elt => target.contains(elt))) {\n      return;\n    }\n    draggingElements.push(target);\n    window.addEventListener('mousemove', onMouseDragged, false);\n    window.addEventListener('mouseup', onMouseUp, false);\n  };\n\n  let onMouseEnter = () => {\n    if (onHover) {\n      onHover(true);\n    }\n  };\n\n  let onMouseOut = () => {\n    if (onHover) {\n      onHover(false);\n    }\n  };\n\n  let onKeyDown = (e) => {\n    switch (e.key) {\n      case 'Left':\n      case 'ArrowLeft':\n        if (orientation === 'horizontal') {\n          e.preventDefault();\n          if (onDecrement && !reverse) {\n            onDecrement();\n          } else if (onIncrement && reverse) {\n            onIncrement();\n          }\n        }\n        break;\n      case 'Up':\n      case 'ArrowUp':\n        if (orientation === 'vertical') {\n          e.preventDefault();\n          if (onDecrement && !reverse) {\n            onDecrement();\n          } else if (onIncrement && reverse) {\n            onIncrement();\n          }\n        }\n        break;\n      case 'Right':\n      case 'ArrowRight':\n        if (orientation === 'horizontal') {\n          e.preventDefault();\n          if (onIncrement && !reverse) {\n            onIncrement();\n          } else if (onDecrement && reverse) {\n            onDecrement();\n          }\n        }\n        break;\n      case 'Down':\n      case 'ArrowDown':\n        if (orientation === 'vertical') {\n          e.preventDefault();\n          if (onIncrement && !reverse) {\n            onIncrement();\n          } else if (onDecrement && reverse) {\n            onDecrement();\n          }\n        }\n        break;\n      case 'Home':\n        e.preventDefault();\n        if (onDecrementToMin) {\n          onDecrementToMin();\n        }\n        break;\n      case 'End':\n        e.preventDefault();\n        if (onIncrementToMax) {\n          onIncrementToMax();\n        }\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (onCollapseToggle) {\n          onCollapseToggle();\n        }\n        break;\n    }\n  };\n\n  return {onMouseDown, onMouseEnter, onMouseOut, onKeyDown};\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCallback, useEffect, useRef} from 'react';\n\ninterface GlobalListeners {\n  addGlobalListener<K extends keyof DocumentEventMap>(el: EventTarget, type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void,\n  addGlobalListener(el: EventTarget, type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void,\n  removeGlobalListener<K extends keyof DocumentEventMap>(el: EventTarget, type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void,\n  removeGlobalListener(el: EventTarget, type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void,\n  removeAllGlobalListeners(): void\n}\n\nexport function useGlobalListeners(): GlobalListeners {\n  let globalListeners = useRef(new Map());\n  let addGlobalListener = useCallback((eventTarget, type, listener, options) => {\n    // Make sure we remove the listener after it is called with the `once` option.\n    let fn = options?.once ? (...args) => {\n      globalListeners.current.delete(listener);\n      listener(...args);\n    } : listener;\n    globalListeners.current.set(listener, {type, eventTarget, fn, options});\n    eventTarget.addEventListener(type, listener, options);\n  }, []);\n  let removeGlobalListener = useCallback((eventTarget, type, listener, options) => {\n    let fn = globalListeners.current.get(listener)?.fn || listener;\n    eventTarget.removeEventListener(type, fn, options);\n    globalListeners.current.delete(listener);\n  }, []);\n  let removeAllGlobalListeners = useCallback(() => {\n    globalListeners.current.forEach((value, key) => {\n      removeGlobalListener(value.eventTarget, value.type, key, value.options);\n    });\n  }, [removeGlobalListener]);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return removeAllGlobalListeners;\n  }, [removeAllGlobalListeners]);\n\n  return {addGlobalListener, removeGlobalListener, removeAllGlobalListeners};\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMProps} from '@react-types/shared';\nimport {useId} from './useId';\n\n/**\n * Merges aria-label and aria-labelledby into aria-labelledby when both exist.\n * @param props - Aria label props.\n * @param defaultLabel - Default value for aria-label when not present.\n */\nexport function useLabels(props: DOMProps & AriaLabelingProps, defaultLabel?: string): DOMProps & AriaLabelingProps {\n  let {\n    id,\n    'aria-label': label,\n    'aria-labelledby': labelledBy\n  } = props;\n\n  // If there is both an aria-label and aria-labelledby,\n  // combine them by pointing to the element itself.\n  id = useId(id);\n  if (labelledBy && label) {\n    let ids = new Set([...labelledBy.trim().split(/\\s+/), id]);\n    labelledBy = [...ids].join(' ');\n  } else if (labelledBy) {\n    labelledBy = labelledBy.trim().split(/\\s+/).join(' ');\n  }\n\n  // If no labels are provided, use the default\n  if (!label && !labelledBy && defaultLabel) {\n    label = defaultLabel;\n  }\n\n  return {\n    id,\n    'aria-label': label,\n    'aria-labelledby': labelledBy\n  };\n}\n", "/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {MutableRefObject, useRef} from 'react';\nimport {useLayoutEffect} from './';\n\n/**\n * Offers an object ref for a given callback ref or an object ref. Especially\n * helfpul when passing forwarded refs (created using `React.forwardRef`) to\n * React Aria Hooks.\n *\n * @param forwardedRef The original ref intended to be used.\n * @returns An object ref that updates the given ref.\n * @see https://reactjs.org/docs/forwarding-refs.html\n */\nexport function useObjectRef<T>(forwardedRef?: ((instance: T | null) => void) | MutableRefObject<T | null> | null): MutableRefObject<T> {\n  const objRef = useRef<T>();\n\n  /**\n   * We're using `useLayoutEffect` here instead of `useEffect` because we want\n   * to make sure that the `ref` value is up to date before other places in the\n   * the execution cycle try to read it.\n   */\n  useLayoutEffect(() => {\n    if (!forwardedRef) {\n      return;\n    }\n\n    if (typeof forwardedRef === 'function') {\n      forwardedRef(objRef.current);\n    } else {\n      forwardedRef.current = objRef.current;\n    }\n  }, [forwardedRef]);\n\n  return objRef;\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {EffectCallback, useEffect, useRef} from 'react';\n\n// Like useEffect, but only called for updates after the initial render.\nexport function useUpdateEffect(effect: EffectCallback, dependencies: any[]) {\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      effect();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n}\n", "import {RefObject, useEffect} from 'react';\n\nfunction hasResizeObserver() {\n  return typeof window.ResizeObserver !== 'undefined';\n}\n\ntype useResizeObserverOptionsType<T> = {\n  ref: RefObject<T | undefined> | undefined,\n  onResize: () => void\n}\n\nexport function useResizeObserver<T extends Element>(options: useResizeObserverOptionsType<T>) {\n  const {ref, onResize} = options;\n\n  useEffect(() => {\n    let element = ref?.current;\n    if (!element) {\n      return;\n    }\n\n    if (!hasResizeObserver()) {\n      window.addEventListener('resize', onResize, false);\n      return () => {\n        window.removeEventListener('resize', onResize, false);\n      };\n    } else {\n\n      const resizeObserverInstance = new window.ResizeObserver((entries) => {\n        if (!entries.length) {\n          return;\n        }\n\n        onResize();\n      });\n      resizeObserverInstance.observe(element);\n\n      return () => {\n        if (element) {\n          resizeObserverInstance.unobserve(element);\n        }\n      };\n    }\n\n  }, [onResize, ref]);\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {MutableRefObject, RefObject} from 'react';\nimport {useLayoutEffect} from './';\n\ninterface ContextValue<T> {\n  ref?: MutableRefObject<T>\n}\n\n// Syncs ref from context with ref passed to hook\nexport function useSyncRef<T>(context: ContextValue<T>, ref: RefObject<T>) {\n  useLayoutEffect(() => {\n    if (context && context.ref && ref) {\n      context.ref.current = ref.current;\n      return () => {\n        context.ref.current = null;\n      };\n    }\n  }, [context, ref]);\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport function getScrollParent(node: Element): Element {\n  while (node && !isScrollable(node)) {\n    node = node.parentElement;\n  }\n\n  return node || document.scrollingElement || document.documentElement;\n}\n\nfunction isScrollable(node: Element): boolean {\n  let style = window.getComputedStyle(node);\n  return /(auto|scroll)/.test(style.overflow + style.overflowX + style.overflowY);\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useEffect, useState} from 'react';\n\ninterface ViewportSize {\n  width: number,\n  height: number\n}\n\n// @ts-ignore\nlet visualViewport = typeof window !== 'undefined' && window.visualViewport;\n\nexport function useViewportSize(): ViewportSize {\n  let [size, setSize] = useState(() => getViewportSize());\n\n  useEffect(() => {\n    // Use visualViewport api to track available height even on iOS virtual keyboard opening\n    let onResize = () => {\n      setSize(size => {\n        let newSize = getViewportSize();\n        if (newSize.width === size.width && newSize.height === size.height) {\n          return size;\n        }\n        return newSize;\n      });\n    };\n\n    if (!visualViewport) {\n      window.addEventListener('resize', onResize);\n    } else {\n      visualViewport.addEventListener('resize', onResize);\n    }\n\n    return () => {\n      if (!visualViewport) {\n        window.removeEventListener('resize', onResize);\n      } else {\n        visualViewport.removeEventListener('resize', onResize);\n      }\n    };\n  }, []);\n\n  return size;\n}\n\nfunction getViewportSize(): ViewportSize {\n  return {\n    width: visualViewport?.width || window.innerWidth,\n    height: visualViewport?.height || window.innerHeight\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps} from '@react-types/shared';\nimport {useLayoutEffect} from './useLayoutEffect';\nimport {useState} from 'react';\n\nlet descriptionId = 0;\nconst descriptionNodes = new Map<string, {refCount: number, element: Element}>();\n\nexport function useDescription(description: string): AriaLabelingProps {\n  let [id, setId] = useState(undefined);\n\n  useLayoutEffect(() => {\n    if (!description) {\n      return;\n    }\n\n    let desc = descriptionNodes.get(description);\n    if (!desc) {\n      let id = `react-aria-description-${descriptionId++}`;\n      setId(id);\n\n      let node = document.createElement('div');\n      node.id = id;\n      node.style.display = 'none';\n      node.textContent = description;\n      document.body.appendChild(node);\n      desc = {refCount: 0, element: node};\n      descriptionNodes.set(description, desc);\n    } else {\n      setId(desc.element.id);\n    }\n\n    desc.refCount++;\n    return () => {\n      if (--desc.refCount === 0) {\n        desc.element.remove();\n        descriptionNodes.delete(description);\n      }\n    };\n  }, [description]);\n\n  return {\n    'aria-describedby': description ? id : undefined\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction testUserAgent(re: RegExp) {\n  if (typeof window === 'undefined' || window.navigator == null) {\n    return false;\n  }\n  return (\n    window.navigator['userAgentData']?.brands.some((brand: {brand: string, version: string}) => re.test(brand.brand))\n  ) ||\n  re.test(window.navigator.userAgent);\n}\n\nfunction testPlatform(re: RegExp) {\n  return typeof window !== 'undefined' && window.navigator != null\n    ? re.test(window.navigator['userAgentData']?.platform || window.navigator.platform)\n    : false;\n}\n\nexport function isMac() {\n  return testPlatform(/^Mac/i);\n}\n\nexport function isIPhone() {\n  return testPlatform(/^iPhone/i);\n}\n\nexport function isIPad() {\n  return testPlatform(/^iPad/i) ||\n    // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\n    (isMac() && navigator.maxTouchPoints > 1);\n}\n\nexport function isIOS() {\n  return isIPhone() || isIPad();\n}\n\nexport function isAppleDevice() {\n  return isMac() || isIOS();\n}\n\nexport function isWebKit() {\n  return testUserAgent(/AppleWebKit/i) && !isChrome();\n}\n\nexport function isChrome() {\n  return testUserAgent(/Chrome/i);\n}\n\nexport function isAndroid() {\n  return testUserAgent(/Android/i);\n}\n", "/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, useEffect, useRef} from 'react';\n\nexport function useEvent<K extends keyof GlobalEventHandlersEventMap>(\n  ref: RefObject<EventTarget>,\n  event: K,\n  handler: (this: Document, ev: GlobalEventHandlersEventMap[K]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  let handlerRef = useRef(handler);\n  handlerRef.current = handler;\n\n  let isDisabled = handler == null;\n\n  useEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    let element = ref.current;\n    let handler = (e: GlobalEventHandlersEventMap[K]) => handlerRef.current.call(this, e);\n\n    element.addEventListener(event, handler, options);\n    return () => {\n      element.removeEventListener(event, handler, options);\n    };\n  }, [ref, event, options, isDisabled]);\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Dispatch, useCallback, useRef, useState} from 'react';\nimport {useLayoutEffect} from './';\n\ntype SetValueAction<S> = (prev: S) => Generator<any, void, unknown>;\n\n// This hook works like `useState`, but when setting the value, you pass a generator function\n// that can yield multiple values. Each yielded value updates the state and waits for the next\n// layout effect, then continues the generator. This allows sequential updates to state to be\n// written linearly.\nexport function useValueEffect<S>(defaultValue: S | (() => S)): [S, Dispatch<SetValueAction<S>>] {\n  let [value, setValue] = useState(defaultValue);\n  let valueRef = useRef(value);\n  let effect = useRef(null);\n\n  valueRef.current = value;\n\n  // Store the function in a ref so we can always access the current version\n  // which has the proper `value` in scope.\n  let nextRef = useRef(null);\n  nextRef.current = () => {\n    // Run the generator to the next yield.\n    let newValue = effect.current.next();\n\n    // If the generator is done, reset the effect.\n    if (newValue.done) {\n      effect.current = null;\n      return;\n    }\n\n    // If the value is the same as the current value,\n    // then continue to the next yield. Otherwise,\n    // set the value in state and wait for the next layout effect.\n    if (value === newValue.value) {\n      nextRef.current();\n    } else {\n      setValue(newValue.value);\n    }\n  };\n\n  useLayoutEffect(() => {\n    // If there is an effect currently running, continue to the next yield.\n    if (effect.current) {\n      nextRef.current();\n    }\n  });\n\n  let queue = useCallback(fn => {\n    effect.current = fn(valueRef.current);\n    nextRef.current();\n  }, [effect, nextRef]);\n\n  return [value, queue];\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/**\n * Scrolls `scrollView` so that `element` is visible.\n * Similar to `element.scrollIntoView({block: 'nearest'})` (not supported in Edge),\n * but doesn't affect parents above `scrollView`.\n */\nexport function scrollIntoView(scrollView: HTMLElement, element: HTMLElement) {\n  let offsetX = relativeOffset(scrollView, element, 'left');\n  let offsetY = relativeOffset(scrollView, element, 'top');\n  let width = element.offsetWidth;\n  let height = element.offsetHeight;\n  let x = scrollView.scrollLeft;\n  let y = scrollView.scrollTop;\n  let maxX = x + scrollView.offsetWidth;\n  let maxY = y + scrollView.offsetHeight;\n\n  if (offsetX <= x) {\n    x = offsetX;\n  } else if (offsetX + width > maxX) {\n    x += offsetX + width - maxX;\n  }\n  if (offsetY <= y) {\n    y = offsetY;\n  } else if (offsetY + height > maxY) {\n    y += offsetY + height - maxY;\n  }\n\n  scrollView.scrollLeft = x;\n  scrollView.scrollTop = y;\n}\n\n/**\n * Computes the offset left or top from child to ancestor by accumulating\n * offsetLeft or offsetTop through intervening offsetParents.\n */\nfunction relativeOffset(ancestor: HTMLElement, child: HTMLElement, axis: 'left'|'top') {\n  const prop = axis === 'left' ? 'offsetLeft' : 'offsetTop';\n  let sum = 0;\n  while (child.offsetParent) {\n    sum += child[prop];\n    if (child.offsetParent === ancestor) {\n      // Stop once we have found the ancestor we are interested in.\n      break;\n    } else if (child.offsetParent.contains(ancestor)) {\n      // If the ancestor is not `position:relative`, then we stop at\n      // _its_ offset parent, and we subtract off _its_ offset, so that\n      // we end up with the proper offset from child to ancestor.\n      sum -= ancestor[prop];\n      break;\n    }\n    child = child.offsetParent as HTMLElement;\n  }\n  return sum;\n}\n", "/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isAndroid} from './platform';\n\n// Original licensing for the following method can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/blob/3c713d513195a53788b3f8bb4b70279d68b15bcc/packages/react-interactions/events/src/dom/shared/index.js#L74-L87\n\n// Keyboards, Assistive Technologies, and element.click() all produce a \"virtual\"\n// click event. This is a method of inferring such clicks. Every browser except\n// IE 11 only sets a zero value of \"detail\" for click events that are \"virtual\".\n// However, IE 11 uses a zero value for all click events. For IE 11 we rely on\n// the quirk that it produces click events that are of type PointerEvent, and\n// where only the \"virtual\" click lacks a pointerType field.\n\nexport function isVirtualClick(event: MouseEvent | PointerEvent): boolean {\n  // JAWS/NVDA with Firefox.\n  if ((event as any).mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n\n  // Android TalkBack's detail value varies depending on the event listener providing the event so we have specific logic here instead\n  // If pointerType is defined, event is from a click listener. For events from mousedown listener, detail === 0 is a sufficient check\n  // to detect TalkBack virtual clicks.\n  if (isAndroid() && (event as PointerEvent).pointerType) {\n    return event.type === 'click' && event.buttons === 1;\n  }\n\n  return event.detail === 0 && !(event as PointerEvent).pointerType;\n}\n\nexport function isVirtualPointerEvent(event: PointerEvent) {\n  // If the pointer size is zero, then we assume it's from a screen reader.\n  // Android TalkBack double tap will sometimes return a event with width and height of 1\n  // and pointerType === 'mouse' so we need to check for a specific combination of event attributes.\n  // Cannot use \"event.pressure === 0\" as the sole check due to Safari pointer events always returning pressure === 0\n  // instead of .5, see https://bugs.webkit.org/show_bug.cgi?id=206216. event.pointerType === 'mouse' is to distingush\n  // Talkback double tap from Windows Firefox touch screen press\n  return (\n    (event.width === 0 && event.height === 0) ||\n    (event.width === 1 &&\n      event.height === 1 &&\n      event.pressure === 0 &&\n      event.detail === 0 &&\n      event.pointerType === 'mouse'\n    )\n  );\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {Pressable} from './Pressable';\nexport {PressResponder} from './PressResponder';\nexport {useFocus} from './useFocus';\nexport {\n  isFocusVisible,\n  getInteractionModality,\n  setInteractionModality,\n  useInteractionModality,\n  useFocusVisible,\n  useFocusVisibleListener\n} from './useFocusVisible';\nexport {useFocusWithin} from './useFocusWithin';\nexport {useHover} from './useHover';\nexport {useInteractOutside} from './useInteractOutside';\nexport {useKeyboard} from './useKeyboard';\nexport {useMove} from './useMove';\nexport {usePress} from './usePress';\nexport {useScrollWheel} from './useScrollWheel';\nexport {useLongPress} from './useLongPress';\n\nexport type {FocusProps, FocusResult} from './useFocus';\nexport type {FocusVisibleHandler, FocusVisibleResult, Modality} from './useFocusVisible';\nexport type {FocusWithinProps, FocusWithinResult} from './useFocusWithin';\nexport type {HoverProps, HoverResult} from './useHover';\nexport type {InteractOutsideProps} from './useInteractOutside';\nexport type {KeyboardProps, KeyboardResult} from './useKeyboard';\nexport type {PressProps, PressHookProps, PressResult} from './usePress';\nexport type {MoveEvents} from '@react-types/shared';\nexport type {MoveResult} from './useMove';\nexport type {LongPressProps, LongPressResult} from './useLongPress';\nexport type {ScrollWheelProps} from './useScrollWheel';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport {PressProps, usePress} from './usePress';\nimport React, {ReactElement, RefObject, useRef} from 'react';\n\ninterface PressableProps extends PressProps {\n  children: ReactElement<DOMAttributes, string>\n}\n\nexport const Pressable = React.forwardRef(({children, ...props}: PressableProps, ref: RefObject<Element>) => {\n  let newRef = useRef();\n  ref = ref ?? newRef;\n  let {pressProps} = usePress({...props, ref});\n  let child = React.Children.only(children);\n  return React.cloneElement(\n    child,\n    // @ts-ignore\n    {ref, ...mergeProps(child.props, pressProps)}\n  );\n});\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {disableTextSelection, restoreTextSelection} from './textSelection';\nimport {DOMAttributes, FocusableElement, PointerType, PressEvents} from '@react-types/shared';\nimport {focusWithoutScrolling, isVirtualClick, isVirtualPointerEvent, mergeProps, useGlobalListeners, useSyncRef} from '@react-aria/utils';\nimport {PressResponderContext} from './context';\nimport {RefObject, useContext, useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface PressProps extends PressEvents {\n  /** Whether the target is in a controlled press state (e.g. an overlay it triggers is open). */\n  isPressed?: boolean,\n  /** Whether the press events should be disabled. */\n  isDisabled?: boolean,\n  /** Whether the target should not receive focus on press. */\n  preventFocusOnPress?: boolean,\n  /**\n   * Whether press events should be canceled when the pointer leaves the target while pressed.\n   * By default, this is `false`, which means if the pointer returns back over the target while\n   * still pressed, onPressStart will be fired again. If set to `true`, the press is canceled\n   * when the pointer leaves the target and onPressStart will not be fired if the pointer returns.\n   */\n  shouldCancelOnPointerExit?: boolean,\n  /** Whether text selection should be enabled on the pressable element. */\n  allowTextSelectionOnPress?: boolean\n}\n\nexport interface PressHookProps extends PressProps {\n  /** A ref to the target element. */\n  ref?: RefObject<Element>\n}\n\ninterface PressState {\n  isPressed: boolean,\n  ignoreEmulatedMouseEvents: boolean,\n  ignoreClickAfterPress: boolean,\n  didFirePressStart: boolean,\n  activePointerId: any,\n  target: FocusableElement | null,\n  isOverTarget: boolean,\n  pointerType: PointerType,\n  userSelect?: string\n}\n\ninterface EventBase {\n  currentTarget: EventTarget,\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean,\n  altKey: boolean\n}\n\nexport interface PressResult {\n  /** Whether the target is currently pressed. */\n  isPressed: boolean,\n  /** Props to spread on the target element. */\n  pressProps: DOMAttributes\n}\n\nfunction usePressResponderContext(props: PressHookProps): PressHookProps {\n  // Consume context from <PressResponder> and merge with props.\n  let context = useContext(PressResponderContext);\n  if (context) {\n    let {register, ...contextProps} = context;\n    props = mergeProps(contextProps, props) as PressHookProps;\n    register();\n  }\n  useSyncRef(context, props.ref);\n\n  return props;\n}\n\n/**\n * Handles press interactions across mouse, touch, keyboard, and screen readers.\n * It normalizes behavior across browsers and platforms, and handles many nuances\n * of dealing with pointer and keyboard events.\n */\nexport function usePress(props: PressHookProps): PressResult {\n  let {\n    onPress,\n    onPressChange,\n    onPressStart,\n    onPressEnd,\n    onPressUp,\n    isDisabled,\n    isPressed: isPressedProp,\n    preventFocusOnPress,\n    shouldCancelOnPointerExit,\n    allowTextSelectionOnPress,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref: _, // Removing `ref` from `domProps` because TypeScript is dumb\n    ...domProps\n  } = usePressResponderContext(props);\n  let propsRef = useRef<PressHookProps>(null);\n  propsRef.current = {onPress, onPressChange, onPressStart, onPressEnd, onPressUp, isDisabled, shouldCancelOnPointerExit};\n\n  let [isPressed, setPressed] = useState(false);\n  let ref = useRef<PressState>({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    didFirePressStart: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false,\n    pointerType: null\n  });\n\n  let {addGlobalListener, removeAllGlobalListeners} = useGlobalListeners();\n\n  let pressProps = useMemo(() => {\n    let state = ref.current;\n    let triggerPressStart = (originalEvent: EventBase, pointerType: PointerType) => {\n      let {onPressStart, onPressChange, isDisabled} = propsRef.current;\n      if (isDisabled || state.didFirePressStart) {\n        return;\n      }\n\n      if (onPressStart) {\n        onPressStart({\n          type: 'pressstart',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(true);\n      }\n\n      state.didFirePressStart = true;\n      setPressed(true);\n    };\n\n    let triggerPressEnd = (originalEvent: EventBase, pointerType: PointerType, wasPressed = true) => {\n      let {onPressEnd, onPressChange, onPress, isDisabled} = propsRef.current;\n      if (!state.didFirePressStart) {\n        return;\n      }\n\n      state.ignoreClickAfterPress = true;\n      state.didFirePressStart = false;\n\n      if (onPressEnd) {\n        onPressEnd({\n          type: 'pressend',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(false);\n      }\n\n      setPressed(false);\n\n      if (onPress && wasPressed && !isDisabled) {\n        onPress({\n          type: 'press',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    let triggerPressUp = (originalEvent: EventBase, pointerType: PointerType) => {\n      let {onPressUp, isDisabled} = propsRef.current;\n      if (isDisabled) {\n        return;\n      }\n\n      if (onPressUp) {\n        onPressUp({\n          type: 'pressup',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    let cancel = (e: EventBase) => {\n      if (state.isPressed) {\n        if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n        state.isPressed = false;\n        state.isOverTarget = false;\n        state.activePointerId = null;\n        state.pointerType = null;\n        removeAllGlobalListeners();\n        if (!allowTextSelectionOnPress) {\n          restoreTextSelection(state.target);\n        }\n      }\n    };\n\n    let pressProps: DOMAttributes = {\n      onKeyDown(e) {\n        if (isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && e.currentTarget.contains(e.target as Element)) {\n          if (shouldPreventDefaultKeyboard(e.target as Element, e.key)) {\n            e.preventDefault();\n          }\n          e.stopPropagation();\n\n          // If the event is repeating, it may have started on a different element\n          // after which focus moved to the current element. Ignore these events and\n          // only handle the first key down event.\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget;\n            state.isPressed = true;\n            triggerPressStart(e, 'keyboard');\n\n            // Focus may move before the key up event, so register the event on the document\n            // instead of the same element where the key down event occurred.\n            addGlobalListener(document, 'keyup', onKeyUp, false);\n          }\n        } else if (e.key === 'Enter' && isHTMLAnchorLink(e.currentTarget)) {\n          // If the target is a link, we won't have handled this above because we want the default\n          // browser behavior to open the link when pressing Enter. But we still need to prevent\n          // default so that elements above do not also handle it (e.g. table row).\n          e.stopPropagation();\n        }\n      },\n      onKeyUp(e) {\n        if (isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && !e.repeat && e.currentTarget.contains(e.target as Element)) {\n          triggerPressUp(createEvent(state.target, e), 'keyboard');\n        }\n      },\n      onClick(e) {\n        if (e && !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (e && e.button === 0) {\n          e.stopPropagation();\n          if (isDisabled) {\n            e.preventDefault();\n          }\n\n          // If triggered from a screen reader or by using element.click(),\n          // trigger as if it were a keyboard click.\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === 'virtual' || isVirtualClick(e.nativeEvent))) {\n            // Ensure the element receives focus (VoiceOver on iOS does not do this)\n            if (!isDisabled && !preventFocusOnPress) {\n              focusWithoutScrolling(e.currentTarget);\n            }\n\n            triggerPressStart(e, 'virtual');\n            triggerPressUp(e, 'virtual');\n            triggerPressEnd(e, 'virtual');\n          }\n\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n        }\n      }\n    };\n\n    let onKeyUp = (e: KeyboardEvent) => {\n      if (state.isPressed && isValidKeyboardEvent(e, state.target)) {\n        if (shouldPreventDefaultKeyboard(e.target as Element, e.key)) {\n          e.preventDefault();\n        }\n        e.stopPropagation();\n\n        state.isPressed = false;\n        let target = e.target as Element;\n        triggerPressEnd(createEvent(state.target, e), 'keyboard', state.target.contains(target));\n        removeAllGlobalListeners();\n\n        // If the target is a link, trigger the click method to open the URL,\n        // but defer triggering pressEnd until onClick event handler.\n        if (state.target instanceof HTMLElement && state.target.contains(target) && (isHTMLAnchorLink(state.target) || state.target.getAttribute('role') === 'link')) {\n          state.target.click();\n        }\n      }\n    };\n\n    if (typeof PointerEvent !== 'undefined') {\n      pressProps.onPointerDown = (e) => {\n        // Only handle left clicks, and ignore events that bubbled through portals.\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // iOS safari fires pointer events from VoiceOver with incorrect coordinates/target.\n        // Ignore and let the onClick handler take care of it instead.\n        // https://bugs.webkit.org/show_bug.cgi?id=222627\n        // https://bugs.webkit.org/show_bug.cgi?id=223202\n        if (isVirtualPointerEvent(e.nativeEvent)) {\n          state.pointerType = 'virtual';\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on pointer down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.currentTarget as Element)) {\n          e.preventDefault();\n        }\n\n        state.pointerType = e.pointerType;\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n\n          if (!isDisabled && !preventFocusOnPress) {\n            focusWithoutScrolling(e.currentTarget);\n          }\n\n          if (!allowTextSelectionOnPress) {\n            disableTextSelection(state.target);\n          }\n\n          triggerPressStart(e, state.pointerType);\n\n          addGlobalListener(document, 'pointermove', onPointerMove, false);\n          addGlobalListener(document, 'pointerup', onPointerUp, false);\n          addGlobalListener(document, 'pointercancel', onPointerCancel, false);\n        }\n      };\n\n      pressProps.onMouseDown = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (e.button === 0) {\n          // Chrome and Firefox on touch Windows devices require mouse down events\n          // to be canceled in addition to pointer events, or an extra asynchronous\n          // focus event will be fired.\n          if (shouldPreventDefault(e.currentTarget as Element)) {\n            e.preventDefault();\n          }\n\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onPointerUp = (e) => {\n        // iOS fires pointerup with zero width and height, so check the pointerType recorded during pointerdown.\n        if (!e.currentTarget.contains(e.target as Element) || state.pointerType === 'virtual') {\n          return;\n        }\n\n        // Only handle left clicks\n        // Safari on iOS sometimes fires pointerup events, even\n        // when the touch isn't over the target, so double check.\n        if (e.button === 0 && isOverTarget(e, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType || e.pointerType);\n        }\n      };\n\n      // Safari on iOS < 13.2 does not implement pointerenter/pointerleave events correctly.\n      // Use pointer move events instead to implement our own hit testing.\n      // See https://bugs.webkit.org/show_bug.cgi?id=199803\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId !== state.activePointerId) {\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(createEvent(state.target, e), state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {\n          if (isOverTarget(e, state.target)) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType);\n          } else if (state.isOverTarget) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          }\n\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          state.pointerType = null;\n          removeAllGlobalListeners();\n          if (!allowTextSelectionOnPress) {\n            restoreTextSelection(state.target);\n          }\n        }\n      };\n\n      let onPointerCancel = (e: PointerEvent) => {\n        cancel(e);\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // Safari does not call onPointerCancel when a drag starts, whereas Chrome and Firefox do.\n        cancel(e);\n      };\n    } else {\n      pressProps.onMouseDown = (e) => {\n        // Only handle left clicks\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on mouse down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.currentTarget)) {\n          e.preventDefault();\n        }\n\n        e.stopPropagation();\n        if (state.ignoreEmulatedMouseEvents) {\n          return;\n        }\n\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n        state.pointerType = isVirtualClick(e.nativeEvent) ? 'virtual' : 'mouse';\n\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        triggerPressStart(e, state.pointerType);\n\n        addGlobalListener(document, 'mouseup', onMouseUp, false);\n      };\n\n      pressProps.onMouseEnter = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = true;\n          triggerPressStart(e, state.pointerType);\n        }\n      };\n\n      pressProps.onMouseLeave = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      pressProps.onMouseUp = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) {\n          triggerPressUp(e, state.pointerType);\n        }\n      };\n\n      let onMouseUp = (e: MouseEvent) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        state.isPressed = false;\n        removeAllGlobalListeners();\n\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n\n        state.isOverTarget = false;\n      };\n\n      pressProps.onTouchStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        let touch = getTouchFromEvent(e.nativeEvent);\n        if (!touch) {\n          return;\n        }\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n        state.pointerType = 'touch';\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent default\n        // on the emulated mouse event and handle focusing the pressable element ourselves.\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        if (!allowTextSelectionOnPress) {\n          disableTextSelection(state.target);\n        }\n\n        triggerPressStart(e, state.pointerType);\n\n        addGlobalListener(window, 'scroll', onScroll, true);\n      };\n\n      pressProps.onTouchMove = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(e, state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      pressProps.onTouchEnd = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType);\n          triggerPressEnd(e, state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(e, state.pointerType, false);\n        }\n\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        if (!allowTextSelectionOnPress) {\n          restoreTextSelection(state.target);\n        }\n        removeAllGlobalListeners();\n      };\n\n      pressProps.onTouchCancel = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed) {\n          cancel(e);\n        }\n      };\n\n      let onScroll = (e: Event) => {\n        if (state.isPressed && (e.target as Element).contains(state.target)) {\n          cancel({\n            currentTarget: state.target,\n            shiftKey: false,\n            ctrlKey: false,\n            metaKey: false,\n            altKey: false\n          });\n        }\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        cancel(e);\n      };\n    }\n\n    return pressProps;\n  }, [addGlobalListener, isDisabled, preventFocusOnPress, removeAllGlobalListeners, allowTextSelectionOnPress]);\n\n  // Remove user-select: none in case component unmounts immediately after pressStart\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      if (!allowTextSelectionOnPress) {\n        restoreTextSelection(ref.current.target);\n      }\n    };\n  }, [allowTextSelectionOnPress]);\n\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: mergeProps(domProps, pressProps)\n  };\n}\n\nfunction isHTMLAnchorLink(target: Element): boolean {\n  return target.tagName === 'A' && target.hasAttribute('href');\n}\n\nfunction isValidKeyboardEvent(event: KeyboardEvent, currentTarget: Element): boolean {\n  const {key, code} = event;\n  const element = currentTarget as HTMLElement;\n  const role = element.getAttribute('role');\n  // Accessibility for keyboards. Space and Enter only.\n  // \"Spacebar\" is for IE 11\n  return (\n    (key === 'Enter' || key === ' ' || key === 'Spacebar' || code === 'Space') &&\n    !((element instanceof HTMLInputElement && !isValidInputKey(element, key)) ||\n      element instanceof HTMLTextAreaElement ||\n      element.isContentEditable) &&\n    // A link with a valid href should be handled natively,\n    // unless it also has role='button' and was triggered using Space.\n    (!isHTMLAnchorLink(element) || (role === 'button' && key !== 'Enter')) &&\n    // An element with role='link' should only trigger with Enter key\n    !(role === 'link' && key !== 'Enter')\n  );\n}\n\nfunction getTouchFromEvent(event: TouchEvent): Touch | null {\n  const {targetTouches} = event;\n  if (targetTouches.length > 0) {\n    return targetTouches[0];\n  }\n  return null;\n}\n\nfunction getTouchById(\n  event: TouchEvent,\n  pointerId: null | number\n): null | Touch {\n  const changedTouches = event.changedTouches;\n  for (let i = 0; i < changedTouches.length; i++) {\n    const touch = changedTouches[i];\n    if (touch.identifier === pointerId) {\n      return touch;\n    }\n  }\n  return null;\n}\n\nfunction createEvent(target: FocusableElement, e: EventBase): EventBase {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey,\n    altKey: e.altKey\n  };\n}\n\ninterface Rect {\n  top: number,\n  right: number,\n  bottom: number,\n  left: number\n}\n\ninterface EventPoint {\n  clientX: number,\n  clientY: number,\n  width?: number,\n  height?: number,\n  radiusX?: number,\n  radiusY?: number\n}\n\nfunction getPointClientRect(point: EventPoint): Rect {\n  let offsetX = (point.width / 2) || point.radiusX || 0;\n  let offsetY = (point.height / 2) || point.radiusY || 0;\n\n  return {\n    top: point.clientY - offsetY,\n    right: point.clientX + offsetX,\n    bottom: point.clientY + offsetY,\n    left: point.clientX - offsetX\n  };\n}\n\nfunction areRectanglesOverlapping(a: Rect, b: Rect) {\n  // check if they cannot overlap on x axis\n  if (a.left > b.right || b.left > a.right) {\n    return false;\n  }\n  // check if they cannot overlap on y axis\n  if (a.top > b.bottom || b.top > a.bottom) {\n    return false;\n  }\n  return true;\n}\n\nfunction isOverTarget(point: EventPoint, target: Element) {\n  let rect = target.getBoundingClientRect();\n  let pointRect = getPointClientRect(point);\n  return areRectanglesOverlapping(rect, pointRect);\n}\n\nfunction shouldPreventDefault(target: Element) {\n  // We cannot prevent default if the target is a draggable element.\n  return !(target instanceof HTMLElement) || !target.draggable;\n}\n\nfunction shouldPreventDefaultKeyboard(target: Element, key: string) {\n  if (target instanceof HTMLInputElement) {\n    return !isValidInputKey(target, key);\n  }\n\n  if (target instanceof HTMLButtonElement) {\n    return target.type !== 'submit';\n  }\n\n  return true;\n}\n\nconst nonTextInputTypes = new Set([\n  'checkbox',\n  'radio',\n  'range',\n  'color',\n  'file',\n  'image',\n  'button',\n  'submit',\n  'reset'\n]);\n\nfunction isValidInputKey(target: HTMLInputElement, key: string) {\n  // Only space should toggle checkboxes and radios, not enter.\n  return target.type === 'checkbox' || target.type === 'radio'\n    ? key === ' '\n    : nonTextInputTypes.has(target.type);\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isIOS, runAfterTransition} from '@react-aria/utils';\n\n// Safari on iOS starts selecting text on long press. The only way to avoid this, it seems,\n// is to add user-select: none to the entire page. Adding it to the pressable element prevents\n// that element from being selected, but nearby elements may still receive selection. We add\n// user-select: none on touch start, and remove it again on touch end to prevent this.\n// This must be implemented using global state to avoid race conditions between multiple elements.\n\n// There are three possible states due to the delay before removing user-select: none after\n// pointer up. The 'default' state always transitions to the 'disabled' state, which transitions\n// to 'restoring'. The 'restoring' state can either transition back to 'disabled' or 'default'.\n\n// For non-iOS devices, we apply user-select: none to the pressed element instead to avoid possible\n// performance issues that arise from applying and removing user-select: none to the entire page\n// (see https://github.com/adobe/react-spectrum/issues/1609).\ntype State = 'default' | 'disabled' | 'restoring';\n\n// Note that state only matters here for iOS. Non-iOS gets user-select: none applied to the target element\n// rather than at the document level so we just need to apply/remove user-select: none for each pressed element individually\nlet state: State = 'default';\nlet savedUserSelect = '';\nlet modifiedElementMap = new WeakMap<Element, string>();\n\nexport function disableTextSelection(target?: Element) {\n  if (isIOS()) {\n    if (state === 'default') {\n      savedUserSelect = document.documentElement.style.webkitUserSelect;\n      document.documentElement.style.webkitUserSelect = 'none';\n    }\n\n    state = 'disabled';\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    // If not iOS, store the target's original user-select and change to user-select: none\n    // Ignore state since it doesn't apply for non iOS\n    modifiedElementMap.set(target, target.style.userSelect);\n    target.style.userSelect = 'none';\n  }\n}\n\nexport function restoreTextSelection(target?: Element) {\n  if (isIOS()) {\n    // If the state is already default, there's nothing to do.\n    // If it is restoring, then there's no need to queue a second restore.\n    if (state !== 'disabled') {\n      return;\n    }\n\n    state = 'restoring';\n\n    // There appears to be a delay on iOS where selection still might occur\n    // after pointer up, so wait a bit before removing user-select.\n    setTimeout(() => {\n      // Wait for any CSS transitions to complete so we don't recompute style\n      // for the whole page in the middle of the animation and cause jank.\n      runAfterTransition(() => {\n        // Avoid race conditions\n        if (state === 'restoring') {\n          if (document.documentElement.style.webkitUserSelect === 'none') {\n            document.documentElement.style.webkitUserSelect = savedUserSelect || '';\n          }\n\n          savedUserSelect = '';\n          state = 'default';\n        }\n      });\n    }, 300);\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    // If not iOS, restore the target's original user-select if any\n    // Ignore state since it doesn't apply for non iOS\n    if (target && modifiedElementMap.has(target)) {\n      let targetOldUserSelect = modifiedElementMap.get(target);\n\n      if (target.style.userSelect === 'none') {\n        target.style.userSelect = targetOldUserSelect;\n      }\n\n      if (target.getAttribute('style') === '') {\n        target.removeAttribute('style');\n      }\n      modifiedElementMap.delete(target);\n    }\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {PressProps} from './usePress';\nimport React, {MutableRefObject} from 'react';\n\ninterface IPressResponderContext extends PressProps {\n  register(): void,\n  ref?: MutableRefObject<FocusableElement>\n}\n\nexport const PressResponderContext = React.createContext<IPressResponderContext>(null);\nPressResponderContext.displayName = 'PressResponderContext';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {mergeProps, useSyncRef} from '@react-aria/utils';\nimport {PressProps} from './usePress';\nimport {PressResponderContext} from './context';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\n\ninterface PressResponderProps extends PressProps {\n  children: ReactNode\n}\n\nexport const PressResponder = React.forwardRef(({children, ...props}: PressResponderProps, ref: RefObject<FocusableElement>) => {\n  let isRegistered = useRef(false);\n  let prevContext = useContext(PressResponderContext);\n  let context = mergeProps(prevContext || {}, {\n    ...props,\n    ref: ref || prevContext?.ref,\n    register() {\n      isRegistered.current = true;\n      if (prevContext) {\n        prevContext.register();\n      }\n    }\n  });\n\n  useSyncRef(prevContext, ref);\n\n  useEffect(() => {\n    if (!isRegistered.current) {\n      console.warn(\n        'A PressResponder was rendered without a pressable child. ' +\n        'Either call the usePress hook, or wrap your DOM node with <Pressable> component.'\n      );\n    }\n  }, []);\n\n  return (\n    <PressResponderContext.Provider value={context}>\n      {children}\n    </PressResponderContext.Provider>\n  );\n});\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes, FocusEvents} from '@react-types/shared';\nimport {FocusEvent, useCallback} from 'react';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusProps extends FocusEvents {\n  /** Whether the focus events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface FocusResult {\n  /** Props to spread onto the target element. */\n  focusProps: DOMAttributes\n}\n\n/**\n * Handles focus events for the immediate target.\n * Focus events on child elements will be ignored.\n */\nexport function useFocus(props: FocusProps): FocusResult {\n  let {\n    isDisabled,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    onFocusChange\n  } = props;\n\n  const onBlur: FocusProps['onBlur'] = useCallback((e: FocusEvent) => {\n    if (e.target === e.currentTarget) {\n      if (onBlurProp) {\n        onBlurProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(false);\n      }\n\n      return true;\n    }\n  }, [onBlurProp, onFocusChange]);\n\n\n  const onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n\n  const onFocus: FocusProps['onFocus'] = useCallback((e: FocusEvent) => {\n    if (e.target === e.currentTarget) {\n      if (onFocusProp) {\n        onFocusProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(true);\n      }\n\n      onSyntheticFocus(e);\n    }\n  }, [onFocusChange, onFocusProp, onSyntheticFocus]);\n\n  return {\n    focusProps: {\n      onFocus: (!isDisabled && (onFocusProp || onFocusChange || onBlurProp)) ? onFocus : undefined,\n      onBlur: (!isDisabled && (onBlurProp || onFocusChange)) ? onBlur : null\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusEvent as ReactFocusEvent, useCallback, useRef} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\nexport class SyntheticFocusEvent implements ReactFocusEvent {\n  nativeEvent: FocusEvent;\n  target: Element;\n  currentTarget: Element;\n  relatedTarget: Element;\n  bubbles: boolean;\n  cancelable: boolean;\n  defaultPrevented: boolean;\n  eventPhase: number;\n  isTrusted: boolean;\n  timeStamp: number;\n  type: string;\n\n  constructor(type: string, nativeEvent: FocusEvent) {\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEvent.target as Element;\n    this.currentTarget = nativeEvent.currentTarget as Element;\n    this.relatedTarget = nativeEvent.relatedTarget as Element;\n    this.bubbles = nativeEvent.bubbles;\n    this.cancelable = nativeEvent.cancelable;\n    this.defaultPrevented = nativeEvent.defaultPrevented;\n    this.eventPhase = nativeEvent.eventPhase;\n    this.isTrusted = nativeEvent.isTrusted;\n    this.timeStamp = nativeEvent.timeStamp;\n    this.type = type;\n  }\n\n  isDefaultPrevented(): boolean {\n    return this.nativeEvent.defaultPrevented;\n  }\n\n  preventDefault(): void {\n    this.defaultPrevented = true;\n    this.nativeEvent.preventDefault();\n  }\n\n  stopPropagation(): void {\n    this.nativeEvent.stopPropagation();\n    this.isPropagationStopped = () => true;\n  }\n\n  isPropagationStopped(): boolean {\n    return false;\n  }\n\n  persist() {}\n}\n\nexport function useSyntheticBlurEvent(onBlur: (e: ReactFocusEvent) => void) {\n  let stateRef = useRef({\n    isFocused: false,\n    onBlur,\n    observer: null as MutationObserver\n  });\n  stateRef.current.onBlur = onBlur;\n\n  // Clean up MutationObserver on unmount. See below.\n  // eslint-disable-next-line arrow-body-style\n  useLayoutEffect(() => {\n    const state = stateRef.current;\n    return () => {\n      if (state.observer) {\n        state.observer.disconnect();\n        state.observer = null;\n      }\n    };\n  }, []);\n\n  // This function is called during a React onFocus event.\n  return useCallback((e: ReactFocusEvent) => {\n    // React does not fire onBlur when an element is disabled. https://github.com/facebook/react/issues/9142\n    // Most browsers fire a native focusout event in this case, except for Firefox. In that case, we use a\n    // MutationObserver to watch for the disabled attribute, and dispatch these events ourselves.\n    // For browsers that do, focusout fires before the MutationObserver, so onBlur should not fire twice.\n    if (\n      e.target instanceof HTMLButtonElement ||\n      e.target instanceof HTMLInputElement ||\n      e.target instanceof HTMLTextAreaElement ||\n      e.target instanceof HTMLSelectElement\n    ) {\n      stateRef.current.isFocused = true;\n\n      let target = e.target;\n      let onBlurHandler = (e: FocusEvent) => {\n        stateRef.current.isFocused = false;\n\n        if (target.disabled) {\n          // For backward compatibility, dispatch a (fake) React synthetic event.\n          stateRef.current.onBlur?.(new SyntheticFocusEvent('blur', e));\n        }\n\n        // We no longer need the MutationObserver once the target is blurred.\n        if (stateRef.current.observer) {\n          stateRef.current.observer.disconnect();\n          stateRef.current.observer = null;\n        }\n      };\n\n      target.addEventListener('focusout', onBlurHandler, {once: true});\n\n      stateRef.current.observer = new MutationObserver(() => {\n        if (stateRef.current.isFocused && target.disabled) {\n          stateRef.current.observer.disconnect();\n          target.dispatchEvent(new FocusEvent('blur'));\n          target.dispatchEvent(new FocusEvent('focusout', {bubbles: true}));\n        }\n      });\n\n      stateRef.current.observer.observe(target, {attributes: true, attributeFilter: ['disabled']});\n    }\n  }, []);\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {isMac, isVirtualClick} from '@react-aria/utils';\nimport {useEffect, useState} from 'react';\n\nexport type Modality = 'keyboard' | 'pointer' | 'virtual';\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent;\ntype Handler = (modality: Modality, e: HandlerEvent) => void;\nexport type FocusVisibleHandler = (isFocusVisible: boolean) => void;\ninterface FocusVisibleProps {\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusVisibleResult {\n  /** Whether keyboard focus is visible globally. */\n  isFocusVisible: boolean\n}\n\nlet currentModality = null;\nlet changeHandlers = new Set<Handler>();\nlet hasSetupGlobalListeners = false;\nlet hasEventBeforeFocus = false;\nlet hasBlurredWindowRecently = false;\n\n// Only Tab or Esc keys will make focus visible on text input elements\nconst FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\n\nfunction triggerChangeHandlers(modality: Modality, e: HandlerEvent) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\n\n/**\n * Helper function to determine if a KeyboardEvent is unmodified and could make keyboard focus styles visible.\n */\nfunction isValidKey(e: KeyboardEvent) {\n  // Control and Shift keys trigger when navigating back to the tab with keyboard.\n  return !(e.metaKey || (!isMac() && e.altKey) || e.ctrlKey || e.key === 'Control' || e.key === 'Shift' || e.key === 'Meta');\n}\n\n\nfunction handleKeyboardEvent(e: KeyboardEvent) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = 'keyboard';\n    triggerChangeHandlers('keyboard', e);\n  }\n}\n\nfunction handlePointerEvent(e: PointerEvent | MouseEvent) {\n  currentModality = 'pointer';\n  if (e.type === 'mousedown' || e.type === 'pointerdown') {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers('pointer', e);\n  }\n}\n\nfunction handleClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = 'virtual';\n  }\n}\n\nfunction handleFocusEvent(e: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (e.target === window || e.target === document) {\n    return;\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to virtual modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    currentModality = 'virtual';\n    triggerChangeHandlers('virtual', e);\n  }\n\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\n\nfunction handleWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\n\n/**\n * Setup global event listeners to control when keyboard focus style should be visible.\n */\nfunction setupGlobalFocusEvents() {\n  if (typeof window === 'undefined' || hasSetupGlobalListeners) {\n    return;\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  let focus = HTMLElement.prototype.focus;\n  HTMLElement.prototype.focus = function () {\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n\n  document.addEventListener('keydown', handleKeyboardEvent, true);\n  document.addEventListener('keyup', handleKeyboardEvent, true);\n  document.addEventListener('click', handleClickEvent, true);\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener('focus', handleFocusEvent, true);\n  window.addEventListener('blur', handleWindowBlur, false);\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerdown', handlePointerEvent, true);\n    document.addEventListener('pointermove', handlePointerEvent, true);\n    document.addEventListener('pointerup', handlePointerEvent, true);\n  } else {\n    document.addEventListener('mousedown', handlePointerEvent, true);\n    document.addEventListener('mousemove', handlePointerEvent, true);\n    document.addEventListener('mouseup', handlePointerEvent, true);\n  }\n\n  hasSetupGlobalListeners = true;\n}\n\nif (typeof document !== 'undefined') {\n  if (document.readyState !== 'loading') {\n    setupGlobalFocusEvents();\n  } else {\n    document.addEventListener('DOMContentLoaded', setupGlobalFocusEvents);\n  }\n}\n\n/**\n * If true, keyboard focus is visible.\n */\nexport function isFocusVisible(): boolean {\n  return currentModality !== 'pointer';\n}\n\nexport function getInteractionModality(): Modality {\n  return currentModality;\n}\n\nexport function setInteractionModality(modality: Modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\n\n/**\n * Keeps state of the current modality.\n */\nexport function useInteractionModality(): Modality {\n  setupGlobalFocusEvents();\n\n  let [modality, setModality] = useState(currentModality);\n  useEffect(() => {\n    let handler = () => {\n      setModality(currentModality);\n    };\n\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, []);\n\n  return modality;\n}\n\n/**\n * If this is attached to text input component, return if the event is a focus event (Tab/Escape keys pressed) so that\n * focus visible style can be properly set.\n */\nfunction isKeyboardFocusEvent(isTextInput: boolean, modality: Modality, e: HandlerEvent) {\n  return !(isTextInput && modality === 'keyboard' && e instanceof KeyboardEvent && !FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\n\n/**\n * Manages focus visible state for the page, and subscribes individual components for updates.\n */\nexport function useFocusVisible(props: FocusVisibleProps = {}): FocusVisibleResult {\n  let {isTextInput, autoFocus} = props;\n  let [isFocusVisibleState, setFocusVisible] = useState(autoFocus || isFocusVisible());\n  useFocusVisibleListener((isFocusVisible) => {\n    setFocusVisible(isFocusVisible);\n  }, [isTextInput], {isTextInput});\n\n  return {isFocusVisible: isFocusVisibleState};\n}\n\n/**\n * Listens for trigger change and reports if focus is visible (i.e., modality is not pointer).\n */\nexport function useFocusVisibleListener(fn: FocusVisibleHandler, deps: ReadonlyArray<any>, opts?: {isTextInput?: boolean}): void {\n  setupGlobalFocusEvents();\n\n  useEffect(() => {\n    let handler = (modality: Modality, e: HandlerEvent) => {\n      if (!isKeyboardFocusEvent(opts?.isTextInput, modality, e)) {\n        return;\n      }\n      fn(isFocusVisible());\n    };\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, deps);\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {FocusEvent, useCallback, useRef} from 'react';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusWithinProps {\n  /** Whether the focus within events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when the target element or a descendant receives focus. */\n  onFocusWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the target element and all descendants lose focus. */\n  onBlurWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the the focus within state changes. */\n  onFocusWithinChange?: (isFocusWithin: boolean) => void\n}\n\nexport interface FocusWithinResult {\n  /** Props to spread onto the target element. */\n  focusWithinProps: DOMAttributes\n}\n\n/**\n * Handles focus events for the target and its descendants.\n */\nexport function useFocusWithin(props: FocusWithinProps): FocusWithinResult {\n  let {\n    isDisabled,\n    onBlurWithin,\n    onFocusWithin,\n    onFocusWithinChange\n  } = props;\n  let state = useRef({\n    isFocusWithin: false\n  });\n\n  let onBlur = useCallback((e: FocusEvent) => {\n    // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n    // when moving focus inside the element. Only trigger if the currentTarget doesn't\n    // include the relatedTarget (where focus is moving).\n    if (state.current.isFocusWithin && !(e.currentTarget as Element).contains(e.relatedTarget as Element)) {\n      state.current.isFocusWithin = false;\n\n      if (onBlurWithin) {\n        onBlurWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(false);\n      }\n    }\n  }, [onBlurWithin, onFocusWithinChange, state]);\n\n  let onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n  let onFocus = useCallback((e: FocusEvent) => {\n    if (!state.current.isFocusWithin) {\n      if (onFocusWithin) {\n        onFocusWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(true);\n      }\n\n      state.current.isFocusWithin = true;\n      onSyntheticFocus(e);\n    }\n  }, [onFocusWithin, onFocusWithinChange, onSyntheticFocus]);\n\n  if (isDisabled) {\n    return {\n      focusWithinProps: {\n        onFocus: null,\n        onBlur: null\n      }\n    };\n  }\n\n  return {\n    focusWithinProps: {\n      onFocus,\n      onBlur\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {HoverEvents} from '@react-types/shared';\nimport {useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface HoverProps extends HoverEvents {\n  /** Whether the hover events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface HoverResult {\n  /** Props to spread on the target element. */\n  hoverProps: DOMAttributes,\n  isHovered: boolean\n}\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nlet globalIgnoreEmulatedMouseEvents = false;\nlet hoverCount = 0;\n\nfunction setGlobalIgnoreEmulatedMouseEvents() {\n  globalIgnoreEmulatedMouseEvents = true;\n\n  // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n  // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n  // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n  // the distant future because a user previously touched the element.\n  setTimeout(() => {\n    globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\n\nfunction handleGlobalPointerEvent(e) {\n  if (e.pointerType === 'touch') {\n    setGlobalIgnoreEmulatedMouseEvents();\n  }\n}\n\nfunction setupGlobalTouchEvents() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerup', handleGlobalPointerEvent);\n  } else {\n    document.addEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n  }\n\n  hoverCount++;\n  return () => {\n    hoverCount--;\n    if (hoverCount > 0) {\n      return;\n    }\n\n    if (typeof PointerEvent !== 'undefined') {\n      document.removeEventListener('pointerup', handleGlobalPointerEvent);\n    } else {\n      document.removeEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n    }\n  };\n}\n\n/**\n * Handles pointer hover interactions for an element. Normalizes behavior\n * across browsers and platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useHover(props: HoverProps): HoverResult {\n  let {\n    onHoverStart,\n    onHoverChange,\n    onHoverEnd,\n    isDisabled\n  } = props;\n\n  let [isHovered, setHovered] = useState(false);\n  let state = useRef({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: '',\n    target: null\n  }).current;\n\n  useEffect(setupGlobalTouchEvents, []);\n\n  let {hoverProps, triggerHoverEnd} = useMemo(() => {\n    let triggerHoverStart = (event, pointerType) => {\n      state.pointerType = pointerType;\n      if (isDisabled || pointerType === 'touch' || state.isHovered || !event.currentTarget.contains(event.target)) {\n        return;\n      }\n\n      state.isHovered = true;\n      let target = event.currentTarget;\n      state.target = target;\n\n      if (onHoverStart) {\n        onHoverStart({\n          type: 'hoverstart',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(true);\n      }\n\n      setHovered(true);\n    };\n\n    let triggerHoverEnd = (event, pointerType) => {\n      state.pointerType = '';\n      state.target = null;\n\n      if (pointerType === 'touch' || !state.isHovered) {\n        return;\n      }\n\n      state.isHovered = false;\n      let target = event.currentTarget;\n      if (onHoverEnd) {\n        onHoverEnd({\n          type: 'hoverend',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(false);\n      }\n\n      setHovered(false);\n    };\n\n    let hoverProps: DOMAttributes = {};\n\n    if (typeof PointerEvent !== 'undefined') {\n      hoverProps.onPointerEnter = (e) => {\n        if (globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') {\n          return;\n        }\n\n        triggerHoverStart(e, e.pointerType);\n      };\n\n      hoverProps.onPointerLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, e.pointerType);\n        }\n      };\n    } else {\n      hoverProps.onTouchStart = () => {\n        state.ignoreEmulatedMouseEvents = true;\n      };\n\n      hoverProps.onMouseEnter = (e) => {\n        if (!state.ignoreEmulatedMouseEvents && !globalIgnoreEmulatedMouseEvents) {\n          triggerHoverStart(e, 'mouse');\n        }\n\n        state.ignoreEmulatedMouseEvents = false;\n      };\n\n      hoverProps.onMouseLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, 'mouse');\n        }\n      };\n    }\n    return {hoverProps, triggerHoverEnd};\n  }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]);\n\n  useEffect(() => {\n    // Call the triggerHoverEnd as soon as isDisabled changes to true\n    // Safe to call triggerHoverEnd, it will early return if we aren't currently hovering\n    if (isDisabled) {\n      triggerHoverEnd({currentTarget: state.target}, state.pointerType);\n    }\n  }, [isDisabled]);\n\n  return {\n    hoverProps,\n    isHovered\n  };\n}\n\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {RefObject, SyntheticEvent, useEffect, useRef} from 'react';\n\nexport interface InteractOutsideProps {\n  ref: RefObject<Element>,\n  onInteractOutside?: (e: SyntheticEvent) => void,\n  onInteractOutsideStart?: (e: SyntheticEvent) => void,\n  /** Whether the interact outside events should be disabled. */\n  isDisabled?: boolean\n}\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useInteractOutside(props: InteractOutsideProps) {\n  let {ref, onInteractOutside, isDisabled, onInteractOutsideStart} = props;\n  let stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n    onInteractOutside,\n    onInteractOutsideStart\n  });\n  let state = stateRef.current;\n  state.onInteractOutside = onInteractOutside;\n  state.onInteractOutsideStart = onInteractOutsideStart;\n\n  useEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    let onPointerDown = (e) => {\n      if (isValidEvent(e, ref) && state.onInteractOutside) {\n        if (state.onInteractOutsideStart) {\n          state.onInteractOutsideStart(e);\n        }\n        state.isPointerDown = true;\n      }\n    };\n\n    // Use pointer events if available. Otherwise, fall back to mouse and touch events.\n    if (typeof PointerEvent !== 'undefined') {\n      let onPointerUp = (e) => {\n        if (state.isPointerDown && state.onInteractOutside && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n\n      // changing these to capture phase fixed combobox\n      document.addEventListener('pointerdown', onPointerDown, true);\n      document.addEventListener('pointerup', onPointerUp, true);\n\n      return () => {\n        document.removeEventListener('pointerdown', onPointerDown, true);\n        document.removeEventListener('pointerup', onPointerUp, true);\n      };\n    } else {\n      let onMouseUp = (e) => {\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n        } else if (state.isPointerDown && state.onInteractOutside && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n\n      let onTouchEnd = (e) => {\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.onInteractOutside && state.isPointerDown && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n\n      document.addEventListener('mousedown', onPointerDown, true);\n      document.addEventListener('mouseup', onMouseUp, true);\n      document.addEventListener('touchstart', onPointerDown, true);\n      document.addEventListener('touchend', onTouchEnd, true);\n\n      return () => {\n        document.removeEventListener('mousedown', onPointerDown, true);\n        document.removeEventListener('mouseup', onMouseUp, true);\n        document.removeEventListener('touchstart', onPointerDown, true);\n        document.removeEventListener('touchend', onTouchEnd, true);\n      };\n    }\n  }, [ref, state, isDisabled]);\n}\n\nfunction isValidEvent(event, ref) {\n  if (event.button > 0) {\n    return false;\n  }\n\n  // if the event target is no longer in the document\n  if (event.target) {\n    const ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) {\n      return false;\n    }\n  }\n\n  return ref.current && !ref.current.contains(event.target);\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {createEventHandler} from './createEventHandler';\nimport {DOMAttributes, KeyboardEvents} from '@react-types/shared';\n\nexport interface KeyboardProps extends KeyboardEvents {\n  /** Whether the keyboard events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface KeyboardResult {\n  /** Props to spread onto the target element. */\n  keyboardProps: DOMAttributes\n}\n\n/**\n * Handles keyboard interactions for a focusable element.\n */\nexport function useKeyboard(props: KeyboardProps): KeyboardResult {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: createEventHandler(props.onKeyDown),\n      onKeyUp: createEventHandler(props.onKeyUp)\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BaseEvent} from '@react-types/shared';\nimport {SyntheticEvent} from 'react';\n\n/**\n * This function wraps a React event handler to make stopPropagation the default, and support continuePropagation instead.\n */\nexport function createEventHandler<T extends SyntheticEvent>(handler: (e: BaseEvent<T>) => void): (e: T) => void {\n  if (!handler) {\n    return;\n  }\n\n  let shouldStopPropagation = true;\n  return (e: T) => {\n    let event: BaseEvent<T> = {\n      ...e,\n      preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation() {\n        console.error('stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.');\n      },\n      continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    };\n\n    handler(event);\n\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {disableTextSelection, restoreTextSelection}  from './textSelection';\nimport {DOMAttributes, MoveEvents, PointerType} from '@react-types/shared';\nimport React, {useMemo, useRef} from 'react';\nimport {useGlobalListeners} from '@react-aria/utils';\n\nexport interface MoveResult {\n  /** Props to spread on the target element. */\n  moveProps: DOMAttributes\n}\n\ninterface EventBase {\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean,\n  altKey: boolean\n}\n\n/**\n * Handles move interactions across mouse, touch, and keyboard, including dragging with\n * the mouse or touch, and using the arrow keys. Normalizes behavior across browsers and\n * platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useMove(props: MoveEvents): MoveResult {\n  let {onMoveStart, onMove, onMoveEnd} = props;\n\n  let state = useRef<{\n    didMove: boolean,\n    lastPosition: {pageX: number, pageY: number} | null,\n    id: number | null\n  }>({didMove: false, lastPosition: null, id: null});\n\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let moveProps = useMemo(() => {\n    let moveProps: DOMAttributes = {};\n\n    let start = () => {\n      disableTextSelection();\n      state.current.didMove = false;\n    };\n    let move = (originalEvent: EventBase, pointerType: PointerType, deltaX: number, deltaY: number) => {\n      if (deltaX === 0 && deltaY === 0) {\n        return;\n      }\n\n      if (!state.current.didMove) {\n        state.current.didMove = true;\n        onMoveStart?.({\n          type: 'movestart',\n          pointerType,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n      onMove({\n        type: 'move',\n        pointerType,\n        deltaX: deltaX,\n        deltaY: deltaY,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n    let end = (originalEvent: EventBase, pointerType: PointerType) => {\n      restoreTextSelection();\n      if (state.current.didMove) {\n        onMoveEnd?.({\n          type: 'moveend',\n          pointerType,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    if (typeof PointerEvent === 'undefined') {\n      let onMouseMove = (e: MouseEvent) => {\n        if (e.button === 0) {\n          move(e, 'mouse', e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n      let onMouseUp = (e: MouseEvent) => {\n        if (e.button === 0) {\n          end(e, 'mouse');\n          removeGlobalListener(window, 'mousemove', onMouseMove, false);\n          removeGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = (e: React.MouseEvent) => {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          addGlobalListener(window, 'mousemove', onMouseMove, false);\n          addGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n\n      let onTouchMove = (e: TouchEvent) => {\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          let {pageX, pageY} = e.changedTouches[touch];\n          move(e, 'touch', pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX, pageY};\n        }\n      };\n      let onTouchEnd = (e: TouchEvent) => {\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          end(e, 'touch');\n          state.current.id = null;\n          removeGlobalListener(window, 'touchmove', onTouchMove);\n          removeGlobalListener(window, 'touchend', onTouchEnd);\n          removeGlobalListener(window, 'touchcancel', onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = (e: React.TouchEvent) => {\n        if (e.changedTouches.length === 0 || state.current.id != null) {\n          return;\n        }\n\n        let {pageX, pageY, identifier} = e.changedTouches[0];\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {pageX, pageY};\n        state.current.id = identifier;\n        addGlobalListener(window, 'touchmove', onTouchMove, false);\n        addGlobalListener(window, 'touchend', onTouchEnd, false);\n        addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n      };\n    } else {\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          let pointerType = (e.pointerType || 'mouse') as PointerType;\n\n          // Problems with PointerEvent#movementX/movementY:\n          // 1. it is always 0 on macOS Safari.\n          // 2. On Chrome Android, it's scaled by devicePixelRatio, but not on Chrome macOS\n          move(e, pointerType, e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          let pointerType = (e.pointerType || 'mouse') as PointerType;\n          end(e, pointerType);\n          state.current.id = null;\n          removeGlobalListener(window, 'pointermove', onPointerMove, false);\n          removeGlobalListener(window, 'pointerup', onPointerUp, false);\n          removeGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n\n      moveProps.onPointerDown = (e: React.PointerEvent) => {\n        if (e.button === 0 && state.current.id == null) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          state.current.id = e.pointerId;\n          addGlobalListener(window, 'pointermove', onPointerMove, false);\n          addGlobalListener(window, 'pointerup', onPointerUp, false);\n          addGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n    }\n\n    let triggerKeyboardMove = (e: EventBase, deltaX: number, deltaY: number) => {\n      start();\n      move(e, 'keyboard', deltaX, deltaY);\n      end(e, 'keyboard');\n    };\n\n    moveProps.onKeyDown = (e) => {\n      switch (e.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, -1, 0);\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 1, 0);\n          break;\n        case 'Up':\n        case 'ArrowUp':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, -1);\n          break;\n        case 'Down':\n        case 'ArrowDown':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, 1);\n          break;\n      }\n    };\n\n    return moveProps;\n  }, [state, onMoveStart, onMove, onMoveEnd, addGlobalListener, removeGlobalListener]);\n\n  return {moveProps};\n}\n", "/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, useCallback} from 'react';\nimport {ScrollEvents} from '@react-types/shared';\nimport {useEvent} from '@react-aria/utils';\n\nexport interface ScrollWheelProps extends ScrollEvents {\n  /** Whether the scroll listener should be disabled. */\n  isDisabled?: boolean\n}\n\n// scroll wheel needs to be added not passively so it's cancelable, small helper hook to remember that\nexport function useScrollWheel(props: ScrollWheelProps, ref: RefObject<HTMLElement>): void {\n  let {onScroll, isDisabled} = props;\n  let onScrollHandler = useCallback((e) => {\n    // If the ctrlKey is pressed, this is a zoom event, do nothing.\n    if (e.ctrlKey) {\n      return;\n    }\n\n    // stop scrolling the page\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (onScroll) {\n      onScroll({deltaX: e.deltaX, deltaY: e.deltaY});\n    }\n  }, [onScroll]);\n\n  useEvent(ref, 'wheel', isDisabled ? null : onScrollHandler);\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, LongPressEvent} from '@react-types/shared';\nimport {mergeProps, useDescription, useGlobalListeners} from '@react-aria/utils';\nimport {usePress} from './usePress';\nimport {useRef} from 'react';\n\nexport interface LongPressProps {\n  /** Whether long press events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when a long press interaction starts. */\n  onLongPressStart?: (e: LongPressEvent) => void,\n  /**\n   * Handler that is called when a long press interaction ends, either\n   * over the target or when the pointer leaves the target.\n   */\n  onLongPressEnd?: (e: LongPressEvent) => void,\n  /**\n   * Handler that is called when the threshold time is met while\n   * the press is over the target.\n   */\n  onLongPress?: (e: LongPressEvent) => void,\n  /**\n   * The amount of time in milliseconds to wait before triggering a long press.\n   * @default 500ms\n   */\n  threshold?: number,\n  /**\n   * A description for assistive techology users indicating that a long press\n   * action is available, e.g. \"Long press to open menu\".\n   */\n  accessibilityDescription?: string\n}\n\nexport interface LongPressResult {\n  /** Props to spread on the target element. */\n  longPressProps: DOMAttributes\n}\n\nconst DEFAULT_THRESHOLD = 500;\n\n/**\n * Handles long press interactions across mouse and touch devices. Supports a customizable time threshold,\n * accessibility description, and normalizes behavior across browsers and devices.\n */\nexport function useLongPress(props: LongPressProps): LongPressResult {\n  let {\n    isDisabled,\n    onLongPressStart,\n    onLongPressEnd,\n    onLongPress,\n    threshold = DEFAULT_THRESHOLD,\n    accessibilityDescription\n  } = props;\n\n  const timeRef = useRef(null);\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let {pressProps} = usePress({\n    isDisabled,\n    onPressStart(e) {\n      if (e.pointerType === 'mouse' || e.pointerType === 'touch') {\n        if (onLongPressStart) {\n          onLongPressStart({\n            ...e,\n            type: 'longpressstart'\n          });\n        }\n\n        timeRef.current = setTimeout(() => {\n          // Prevent other usePress handlers from also handling this event.\n          e.target.dispatchEvent(new PointerEvent('pointercancel', {bubbles: true}));\n          if (onLongPress) {\n            onLongPress({\n              ...e,\n              type: 'longpress'\n            });\n          }\n          timeRef.current = null;\n        }, threshold);\n\n        // Prevent context menu, which may be opened on long press on touch devices\n        if (e.pointerType === 'touch') {\n          let onContextMenu = e => {\n            e.preventDefault();\n          };\n\n          addGlobalListener(e.target, 'contextmenu', onContextMenu, {once: true});\n          addGlobalListener(window, 'pointerup', () => {\n            // If no contextmenu event is fired quickly after pointerup, remove the handler\n            // so future context menu events outside a long press are not prevented.\n            setTimeout(() => {\n              removeGlobalListener(e.target, 'contextmenu', onContextMenu);\n            }, 30);\n          }, {once: true});\n        }\n      }\n    },\n    onPressEnd(e) {\n      if (timeRef.current) {\n        clearTimeout(timeRef.current);\n      }\n\n      if (onLongPressEnd && (e.pointerType === 'mouse' || e.pointerType === 'touch')) {\n        onLongPressEnd({\n          ...e,\n          type: 'longpressend'\n        });\n      }\n    }\n  });\n\n  let descriptionProps = useDescription(onLongPress && !isDisabled ? accessibilityDescription : null);\n\n  return {\n    longPressProps: mergeProps(pressProps, descriptionProps)\n  };\n}\n"],
  "mappings": "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",
  "names": ["$89yE2$react", "$89yE2$useContext", "$89yE2$useMemo", "$89yE2$useState", "$89yE2$useLayoutEffect", "$12uGp$react", "$12uGp$useState", "$12uGp$useRef", "$12uGp$useCallback", "r", "$12uGp$useEffect", "$12uGp$useRef", "$12uGp$useCallback", "$12uGp$useEffect", "$12uGp$useState", "$12uGp$useRef", "$12uGp$useEffect", "$12uGp$useCallback", "$bx7SL$react", "$bx7SL$useContext", "$bx7SL$useRef", "$bx7SL$useState", "$bx7SL$useMemo", "$bx7SL$useEffect", "$bx7SL$useCallback", "$bx7SL$useEffect", "$bx7SL$useRef", "$bx7SL$useCallback", "$bx7SL$useState", "$bx7SL$useMemo", "$bx7SL$useRef"]
}
