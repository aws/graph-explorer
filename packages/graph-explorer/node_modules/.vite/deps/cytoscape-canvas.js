import {
  __commonJS
} from "./chunk-S5KM4IGW.js";

// ../../node_modules/.pnpm/cytoscape-canvas@3.0.1/node_modules/cytoscape-canvas/dist/cytoscape-canvas.js
var require_cytoscape_canvas = __commonJS({
  "../../node_modules/.pnpm/cytoscape-canvas@3.0.1/node_modules/cytoscape-canvas/dist/cytoscape-canvas.js"(exports, module) {
    (function() {
      var register = function register2(cytoscape2) {
        if (!cytoscape2) {
          return;
        }
        var cyCanvas = function cyCanvas2(args) {
          var cy = this;
          var container = cy.container();
          var canvas = document.createElement("canvas");
          container.appendChild(canvas);
          var defaults = {
            zIndex: 1,
            pixelRatio: "auto"
          };
          var options = Object.assign({}, defaults, args);
          if (options.pixelRatio === "auto") {
            options.pixelRatio = window.devicePixelRatio || 1;
          }
          function resize() {
            var width = container.offsetWidth;
            var height = container.offsetHeight;
            var canvasWidth = width * options.pixelRatio;
            var canvasHeight = height * options.pixelRatio;
            canvas.width = canvasWidth;
            canvas.height = canvasHeight;
            canvas.style.width = width + "px";
            canvas.style.height = height + "px";
            cy.trigger("cyCanvas.resize");
          }
          cy.on("resize", function() {
            resize();
          });
          canvas.setAttribute("style", "position:absolute; top:0; left:0; z-index:" + options.zIndex + ";");
          resize();
          return {
            getCanvas: function getCanvas() {
              return canvas;
            },
            clear: function clear(ctx) {
              var width = cy.width();
              var height = cy.height();
              ctx.save();
              ctx.setTransform(1, 0, 0, 1, 0, 0);
              ctx.clearRect(0, 0, width * options.pixelRatio, height * options.pixelRatio);
              ctx.restore();
            },
            resetTransform: function resetTransform(ctx) {
              ctx.setTransform(1, 0, 0, 1, 0, 0);
            },
            setTransform: function setTransform(ctx) {
              var pan = cy.pan();
              var zoom = cy.zoom();
              ctx.setTransform(1, 0, 0, 1, 0, 0);
              ctx.translate(pan.x * options.pixelRatio, pan.y * options.pixelRatio);
              ctx.scale(zoom * options.pixelRatio, zoom * options.pixelRatio);
            }
          };
        };
        cytoscape2("core", "cyCanvas", cyCanvas);
      };
      if (typeof module !== "undefined" && module.exports) {
        module.exports = function(cytoscape2) {
          register(cytoscape2);
        };
      }
      if (typeof define !== "undefined" && define.amd) {
        define("cytoscape-canvas", function() {
          return register;
        });
      }
      if (typeof cytoscape !== "undefined") {
        register(cytoscape);
      }
    })();
  }
});
export default require_cytoscape_canvas();
//# sourceMappingURL=cytoscape-canvas.js.map
