{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/publicUtils.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/utils.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/makeDefaultPluginHooks.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/hooks/useColumnVisibility.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/hooks/useTable.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/plugin-hooks/useExpanded.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/filterTypes.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/plugin-hooks/useFilters.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/plugin-hooks/useGlobalFilter.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/aggregations.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/plugin-hooks/useGroupBy.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/sortTypes.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/plugin-hooks/useSortBy.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/plugin-hooks/usePagination.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/plugin-hooks/_UNSTABLE_usePivotColumns.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/plugin-hooks/useRowSelect.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/plugin-hooks/useRowState.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/plugin-hooks/useColumnOrder.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/plugin-hooks/useResizeColumns.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/plugin-hooks/useAbsoluteLayout.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/plugin-hooks/useBlockLayout.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/plugin-hooks/useFlexLayout.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/src/plugin-hooks/useGridLayout.js", "../../../../../node_modules/.pnpm/react-table@7.8.0_react@17.0.2/node_modules/react-table/index.js"],
  "sourcesContent": ["import React from 'react'\n\nlet renderErr = 'Renderer Error \u261D\uFE0F'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook \u261D\uFE0F just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook \u261D\uFE0F just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n", "import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n", "const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n", "import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n", "import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action \uD83D\uDC46')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n", "import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { rowsById } = instance\n\n    const isAllRowsExpanded =\n      Object.keys(rowsById).length === Object.keys(state.expanded).length\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n", "export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n", "import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n", "import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n", "export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n", "import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows.map((row) => ({ ...row, depth }))\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n", "const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n", "import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n", "import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n", "/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n", "import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (row) {\n        if (!row.isGrouped) {\n          if (shouldExist) {\n            newSelectedRowIds[id] = true\n          } else {\n            delete newSelectedRowIds[id]\n          }\n        }\n\n        if (selectSubRows && getSubRows(row)) {\n          return getSubRows(row).forEach(row => handleRowById(row.id))\n        }\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n", "import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n", "import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n", "import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    let raf\n    let mostRecentClientX\n\n    const dispatchEnd = () => {\n      window.cancelAnimationFrame(raf)\n      raf = null\n      dispatch({ type: actions.columnDoneResizing })\n    }\n    const dispatchMove = () => {\n      window.cancelAnimationFrame(raf)\n      raf = null\n      dispatch({ type: actions.columnResizing, clientX: mostRecentClientX })\n    }\n\n    const scheduleDispatchMoveOnNextAnimationFrame = clientXPos => {\n      mostRecentClientX = clientXPos\n      if (!raf) {\n        raf = window.requestAnimationFrame(dispatchMove)\n      }\n    }\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => scheduleDispatchMoveOnNextAnimationFrame(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          scheduleDispatchMoveOnNextAnimationFrame(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n", "const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n", "const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n", "export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n", "import { actions } from '../publicUtils'\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getRowProps.push(getRowProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => {\n  const gridTemplateColumns = instance.visibleColumns.map(column => {\n    if (instance.state.gridLayout.columnWidths[column.id])\n      return `${instance.state.gridLayout.columnWidths[column.id]}px`\n    // When resizing, lock the width of all unset columns\n    // instead of using user-provided width or defaultColumn width,\n    // which could potentially be 'auto' or 'fr' units that don't scale linearly\n    if (instance.state.columnResizing?.isResizingColumn)\n      return `${instance.state.gridLayout.startWidths[column.id]}px`\n    if (typeof column.width === 'number') return `${column.width}px`\n    return column.width\n  })\n  return [\n    props,\n    {\n      style: {\n        display: `grid`,\n        gridTemplateColumns: gridTemplateColumns.join(` `),\n      },\n    },\n  ]\n}\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky`, //enables a scroll wrapper to be placed around the table and have sticky headers\n      gridColumn: `span ${column.totalVisibleHeaderCount}`,\n    },\n  },\n]\n\nconst getRowProps = (props, { row }) => {\n  if (row.isExpanded) {\n    return [\n      props,\n      {\n        style: {\n          gridColumn: `1 / ${row.cells.length + 1}`,\n        },\n      },\n    ]\n  }\n  return [props, {}]\n}\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      gridLayout: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      gridLayout: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { columnId, headerIdWidths } = action\n    const columnWidth = getElementWidth(columnId)\n\n    if (columnWidth !== undefined) {\n      const startWidths = instance.visibleColumns.reduce(\n        (acc, column) => ({\n          ...acc,\n          [column.id]: getElementWidth(column.id),\n        }),\n        {}\n      )\n      const minWidths = instance.visibleColumns.reduce(\n        (acc, column) => ({\n          ...acc,\n          [column.id]: column.minWidth,\n        }),\n        {}\n      )\n      const maxWidths = instance.visibleColumns.reduce(\n        (acc, column) => ({\n          ...acc,\n          [column.id]: column.maxWidth,\n        }),\n        {}\n      )\n\n      const headerIdGridWidths = headerIdWidths.map(([headerId]) => [\n        headerId,\n        getElementWidth(headerId),\n      ])\n\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          startWidths,\n          minWidths,\n          maxWidths,\n          headerIdGridWidths,\n          columnWidth,\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX } = state.columnResizing\n    const {\n      columnWidth,\n      minWidths,\n      maxWidths,\n      headerIdGridWidths = [],\n    } = state.gridLayout\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdGridWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.min(\n        Math.max(\n          minWidths[headerId],\n          headerWidth + headerWidth * percentageDeltaX\n        ),\n        maxWidths[headerId]\n      )\n    })\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: {\n          ...state.gridLayout.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        startWidths: {},\n        minWidths: {},\n        maxWidths: {},\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}\n", "if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n"],
  "mappings": "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",
  "names": ["renderErr", "actions", "init", "defaultRenderer", "value", "emptyRenderer", "defaultColumn", "Cell", "width", "minWidth", "maxWidth", "Number", "MAX_SAFE_INTEGER", "mergeProps", "propList", "reduce", "props", "next", "style", "className", "rest", "handlePropGetter", "prevProps", "userProps", "meta", "Array", "isArray", "makePropGetter", "hooks", "prev", "reduceHooks", "initial", "allowUndefined", "nextValue", "console", "info", "Error", "loopHooks", "context", "forEach", "hook", "ensurePluginOrder", "plugins", "befores", "pluginName", "afters", "pluginIndex", "findIndex", "plugin", "before", "beforeIndex", "functionalUpdate", "updater", "old", "useGetLatest", "obj", "ref", "React", "useRef", "current", "useCallback", "safeUseLayoutEffect", "document", "useLayoutEffect", "useEffect", "useMountedLayoutEffect", "fn", "deps", "mountedRef", "useAsyncDebounce", "defaultFn", "defaultWait", "debounceRef", "getDefaultFn", "getDefaultWait", "args", "promise", "Promise", "resolve", "reject", "timeout", "clearTimeout", "setTimeout", "makeRenderer", "instance", "column", "type", "Comp", "flexRender", "isReactComponent", "component", "isClassComponent", "isExoticComponent", "proto", "Object", "getPrototypeOf", "prototype", "$$typeof", "includes", "description", "linkColumnStructure", "columns", "parent", "depth", "map", "assignColumnAccessor", "flattenColumns", "flattenBy", "id", "accessor", "Header", "accessorPath", "split", "row", "getBy", "error", "assign", "decorateColumn", "userDefaultColumn", "Footer", "originalWidth", "makeHeaderGroups", "allColumns", "additionalHeaderProperties", "headerGroups", "scanColumns", "uid", "getUID", "_loop", "headerGroup", "headers", "parentColumns", "hasParents", "some", "d", "latestParentColumn", "reverse", "newParent", "originalId", "placeholderOf", "push", "length", "pathObjCache", "Map", "path", "def", "cacheKey", "JSON", "stringify", "pathObj", "get", "makePathArray", "set", "val", "cursor", "pathPart", "e", "getFirstDefined", "i", "isFunction", "a", "arr", "key", "flat", "recurse", "expandRows", "rows", "manualExpandedKey", "expanded", "expandSubRows", "expandedRows", "handleRow", "addToExpandedRows", "isExpanded", "original", "canExpand", "subRows", "getFilterMethod", "filter", "userFilterTypes", "filterTypes", "text", "shouldAutoRemoveFilter", "autoRemove", "unpreparedAccessWarning", "passiveSupported", "passiveEventSupported", "supported", "options", "passive", "window", "addEventListener", "removeEventListener", "err", "reOpenBracket", "reCloseBracket", "flattenDeep", "String", "replace", "join", "newArr", "defaultGetTableProps", "role", "defaultGetTableBodyProps", "defaultGetHeaderProps", "colSpan", "totalVisibleHeaderCount", "defaultGetFooterProps", "defaultGetHeaderGroupProps", "index", "defaultGetFooterGroupProps", "defaultGetRowProps", "defaultGetCellProps", "cell", "makeDefaultPluginHooks", "useOptions", "stateReducers", "useControlledState", "columnsDeps", "allColumnsDeps", "accessValue", "materializedColumns", "materializedColumnsDeps", "useInstanceAfterData", "visibleColumns", "visibleColumnsDeps", "headerGroupsDeps", "useInstanceBeforeDimensions", "useInstance", "prepareRow", "getTableProps", "getTableBodyProps", "getHeaderGroupProps", "getFooterGroupProps", "getHeaderProps", "getFooterProps", "getRowProps", "getCellProps", "useFinalInstance", "resetHiddenColumns", "toggleHideColumn", "setHiddenColumns", "toggleHideAllColumns", "useColumnVisibility", "getToggleHiddenProps", "defaultGetToggleHiddenProps", "getToggleHideAllColumnsProps", "defaultGetToggleHideAllColumnsProps", "reducer", "state", "hiddenColumns", "onChange", "toggleHidden", "target", "checked", "isVisible", "title", "allColumnsHidden", "indeterminate", "action", "previousState", "initialState", "should", "columnId", "shouldAll", "isMountedRef", "handleColumn", "parentVisible", "subColumn", "subHeader", "flatHeaders", "dispatch", "getHooks", "autoResetHiddenColumns", "getInstance", "getAutoResetHiddenColumns", "defaultInitialState", "defaultColumnInstance", "defaultReducer", "prevState", "defaultGetSubRows", "defaultGetRowId", "defaultUseControlledState", "applyDefaults", "getSubRows", "getRowId", "stateReducer", "useTable", "instanceRef", "Boolean", "data", "userColumns", "getStateReducer", "s", "handler", "useReducer", "undefined", "reducerState", "useMemo", "flatRows", "rowsById", "allColumnsQueue", "shift", "accessRowsForColumn", "accessValueHooks", "initialRows", "find", "duplicateColumns", "all", "visibleColumnsDep", "sort", "calculateHeaderWidths", "totalColumnsMinWidth", "totalColumnsWidth", "totalColumnsMaxWidth", "render", "footerGroups", "allCells", "values", "cells", "left", "sumTotalMinWidth", "sumTotalWidth", "sumTotalMaxWidth", "sumTotalFlexWidth", "header", "subHeaders", "totalLeft", "totalMinWidth", "totalWidth", "totalMaxWidth", "totalFlexWidth", "Math", "min", "max", "canResize", "accessRow", "originalRow", "rowIndex", "parentRows", "originalSubRows", "resetExpanded", "toggleRowExpanded", "toggleAllRowsExpanded", "useExpanded", "getToggleAllRowsExpandedProps", "defaultGetToggleAllRowsExpandedProps", "getToggleRowExpandedProps", "defaultGetToggleRowExpandedProps", "onClick", "isAllRowsExpanded", "keys", "expandAll", "rowId", "setExpanded", "exists", "shouldExist", "_", "paginateExpandedRows", "autoResetExpanded", "getAutoResetExpanded", "expandedDepth", "findExpandedDepth", "preExpandedRows", "maxDepth", "splitId", "ids", "filterValue", "rowValue", "toLowerCase", "exactText", "exactTextCase", "includesAll", "every", "includesSome", "includesValue", "exact", "equals", "between", "Infinity", "temp", "resetFilters", "setFilter", "setAllFilters", "useFilters", "filters", "filterMethod", "previousfilter", "newFilter", "manualFilters", "defaultCanFilter", "disableFilters", "autoResetFilters", "columnDefaultCanFilter", "columnDisableFilters", "canFilter", "found", "filteredFlatRows", "filteredRowsById", "filterRows", "filteredRows", "filteredSoFar", "preFilteredRows", "warn", "nonFilteredColumns", "getAutoResetFilters", "preFilteredFlatRows", "preFilteredRowsById", "resetGlobalFilter", "setGlobalFilter", "useGlobalFilter", "globalFilter", "stateWithoutGlobalFilter", "manualGlobalFilter", "globalFilterValue", "autoResetGlobalFilter", "disableGlobalFilter", "columnDisableGlobalFilter", "filterableColumns", "c", "globalFilteredRows", "globalFilteredFlatRows", "globalFilteredRowsById", "getAutoResetGlobalFilter", "preGlobalFilteredRows", "preGlobalFilteredFlatRows", "preGlobalFilteredRowsById", "sum", "aggregatedValues", "minMax", "average", "median", "mid", "floor", "nums", "b", "unique", "from", "Set", "uniqueCount", "size", "count", "emptyArray", "emptyObject", "resetGroupBy", "setGroupBy", "toggleGroupBy", "useGroupBy", "getGroupByToggleProps", "defaultGetGroupByToggleProps", "groupBy", "canGroupBy", "persist", "resolvedGroupBy", "groupByColumns", "g", "col", "nonGroupByColumns", "isGrouped", "groupedIndex", "indexOf", "defaultUserAggregations", "groupByFn", "defaultGroupByFn", "manualGroupBy", "aggregations", "userAggregations", "autoResetGroupBy", "disableGroupBy", "defaultCanGroupBy", "defaultColumnGroupBy", "defaultGroupBy", "columnDisableGroupBy", "Aggregated", "existingGroupBy", "aggregateRowsToValues", "leafRows", "groupedRows", "aggregateFn", "aggregate", "groupedValues", "leafValues", "columnValue", "aggregateValue", "aggregateValueFn", "groupedFlatRows", "groupedRowsById", "onlyGroupedFlatRows", "onlyGroupedRowsById", "nonGroupedFlatRows", "nonGroupedRowsById", "groupUpRecursively", "parentId", "rowGroupsMap", "aggregatedGroupedRows", "entries", "groupByVal", "groupByID", "subRow", "getAutoResetGroupBy", "preGroupedRows", "preGroupedFlatRow", "preGroupedRowsById", "isPlaceholder", "isAggregated", "resKey", "reSplitAlphaNumeric", "alphanumeric", "rowA", "rowB", "getRowValuesByColumnID", "toString", "aa", "bb", "an", "parseInt", "bn", "combo", "isNaN", "datetime", "getTime", "compareBasic", "basic", "string", "alower", "blower", "number", "replaceNonNumeric", "row1", "row2", "resetSortBy", "setSortBy", "toggleSortBy", "clearSortBy", "sortType", "sortDescFirst", "useSortBy", "getSortByToggleProps", "defaultGetSortByToggleProps", "isMultiSortEvent", "shiftKey", "canSort", "disableMultiSort", "sortBy", "newSortBy", "desc", "multi", "disableSortRemove", "disableMultiRemove", "maxMultiSortColCount", "existingSortBy", "existingIndex", "hasDescDefined", "sortAction", "splice", "orderByFn", "defaultOrderByFn", "userSortTypes", "sortTypes", "manualSortBy", "defaultCanSort", "disableSortBy", "autoResetSortBy", "defaultColumnCanSort", "columnDisableSortBy", "columnSort", "isSorted", "sortedIndex", "isSortedDesc", "sortedFlatRows", "availableSortBy", "sortData", "sortedData", "sortMethod", "sortInverted", "sortedRows", "getAutoResetSortBy", "preSortedRows", "preSortedFlatRows", "funcs", "dirs", "sortFn", "sortInt", "resetPage", "gotoPage", "setPageSize", "usePagination", "pageSize", "pageIndex", "pageCount", "page", "newPageIndex", "canNavigate", "topRowIndex", "autoResetPage", "userPageCount", "manualPagination", "getAutoResetPage", "ceil", "pageOptions", "fill", "pageStart", "pageEnd", "slice", "canPreviousPage", "canNextPage", "previousPage", "nextPage", "resetPivot", "togglePivot", "_UNSTABLE_usePivotColumns", "getPivotToggleProps", "defaultGetPivotToggleProps", "defaultPivotColumns", "canPivot", "pivotColumns", "setPivot", "resolvedPivot", "isPivotSource", "uniqueValues", "add", "materialized", "sourceColumns", "buildPivotColumns", "pivotFilters", "pivotColumn", "sourceColumn", "isPivoted", "uniqueValue", "columnGroup", "PivotHeader", "isPivotGroup", "pivotValue", "newMaterialized", "autoResetPivot", "manaulPivot", "disablePivot", "defaultCanPivot", "defaultColumnPivot", "defaultPivot", "columnDisablePivot", "getAutoResetPivot", "resetSelectedRows", "toggleAllRowsSelected", "toggleRowSelected", "toggleAllPageRowsSelected", "useRowSelect", "getToggleRowSelectedProps", "defaultGetToggleRowSelectedProps", "getToggleAllRowsSelectedProps", "defaultGetToggleAllRowsSelectedProps", "getToggleAllPageRowsSelectedProps", "defaultGetToggleAllPageRowsSelectedProps", "manualRowSelectedKey", "isSelected", "isSomeSelected", "isAllRowsSelected", "selectedRowIds", "isAllPageRowsSelected", "setSelected", "selectAll", "selectSubRows", "newSelectedRowIds", "handleRowById", "autoResetSelectedRows", "selectedFlatRows", "getRowIsSelected", "getAutoResetSelectedRows", "allChildrenSelected", "someSelected", "defaultInitialRowStateAccessor", "defaultInitialCellStateAccessor", "setRowState", "setCellState", "resetRowState", "useRowState", "initialRowStateAccessor", "initialCellStateAccessor", "rowState", "oldRowState", "oldCellState", "cellState", "autoResetRowState", "getAutoResetRowState", "setState", "resetColumnOrder", "setColumnOrder", "useColumnOrder", "columnOrder", "columnOrderCopy", "columnsCopy", "columnsInOrder", "targetColumnId", "foundIndex", "columnStartResizing", "columnResizing", "columnDoneResizing", "resetResize", "useResizeColumns", "getResizerProps", "defaultGetResizerProps", "position", "onResizeStart", "isTouchEvent", "touches", "headersToResize", "getLeafHeaders", "headerIdWidths", "clientX", "round", "raf", "mostRecentClientX", "dispatchEnd", "cancelAnimationFrame", "dispatchMove", "scheduleDispatchMoveOnNextAnimationFrame", "clientXPos", "requestAnimationFrame", "handlersAndEvents", "mouse", "moveEvent", "moveHandler", "upEvent", "upHandler", "touch", "cancelable", "preventDefault", "stopPropagation", "events", "passiveIfSupported", "columnWidth", "onMouseDown", "onTouchStart", "draggable", "columnWidths", "startX", "isResizingColumn", "deltaX", "percentageDeltaX", "newColumnWidths", "headerId", "headerWidth", "disableResizing", "isResizing", "autoResetResize", "getAutoResetResize", "resetResizing", "leafHeaders", "recurseHeader", "cellStyles", "top", "useAbsoluteLayout", "getRowStyles", "display", "boxSizing", "useBlockLayout", "useFlexLayout", "flex", "useGridLayout", "gridTemplateColumns", "gridLayout", "startWidths", "gridColumn", "getElementWidth", "acc", "minWidths", "maxWidths", "headerIdGridWidths", "getElementById", "offsetWidth"]
}
