{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/@react-aria+visually-hidden@3.5.0_react@17.0.2/node_modules/@react-aria/visually-hidden/dist/packages/@react-aria/visually-hidden/src/index.ts", "../../../../../node_modules/.pnpm/@react-aria+visually-hidden@3.5.0_react@17.0.2/node_modules/@react-aria/visually-hidden/dist/packages/@react-aria/visually-hidden/src/VisuallyHidden.tsx"],
  "sourcesContent": ["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport {useVisuallyHidden, VisuallyHidden} from './VisuallyHidden';\nexport type {VisuallyHiddenAria, VisuallyHiddenProps} from './VisuallyHidden';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {CSSProperties, JSXElementConstructor, ReactNode, useMemo, useState} from 'react';\nimport {useFocusWithin} from '@react-aria/interactions';\n\nexport interface VisuallyHiddenProps extends DOMAttributes {\n  /** The content to visually hide. */\n  children?: ReactNode,\n\n  /**\n   * The element type for the container.\n   * @default 'div'\n   */\n  elementType?: string | JSXElementConstructor<any>,\n\n  /** Whether the element should become visible on focus, for example skip links. */\n  isFocusable?: boolean\n}\n\nconst styles: CSSProperties = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(50%)',\n  height: 1,\n  margin: '0 -1px -1px 0',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'absolute',\n  width: 1,\n  whiteSpace: 'nowrap'\n};\n\nexport interface VisuallyHiddenAria {\n  visuallyHiddenProps: DOMAttributes\n}\n\n/**\n * Provides props for an element that hides its children visually\n * but keeps content visible to assistive technology.\n */\nexport function useVisuallyHidden(props: VisuallyHiddenProps = {}): VisuallyHiddenAria {\n  let {\n    style,\n    isFocusable\n  } = props;\n\n  let [isFocused, setFocused] = useState(false);\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !isFocusable,\n    onFocusWithinChange: (val) => setFocused(val)\n  });\n\n  // If focused, don't hide the element.\n  let combinedStyles = useMemo(() => {\n    if (isFocused) {\n      return style;\n    } else if (style) {\n      return {...styles, ...style};\n    } else {\n      return styles;\n    }\n  }, [isFocused]);\n\n  return {\n    visuallyHiddenProps: {\n      ...focusWithinProps,\n      style: combinedStyles\n    }\n  };\n}\n\n/**\n * VisuallyHidden hides its children visually, while keeping content visible\n * to screen readers.\n */\nexport function VisuallyHidden(props: VisuallyHiddenProps) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let {children, elementType: Element = 'div', isFocusable, style, ...otherProps} = props;\n  let {visuallyHiddenProps} = useVisuallyHidden(props);\n\n  return (\n    <Element {...mergeProps(otherProps, visuallyHiddenProps)}>\n      {children}\n    </Element>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;AC+BA,IAAM,+BAAwB;EAC5B,QAAQ;EACR,MAAM;EACN,UAAU;EACV,QAAQ;EACR,QAAQ;EACR,UAAU;EACV,SAAS;EACT,UAAU;EACV,OAAO;EACP,YAAY;AACd;SAUgB,0CAAkB,QAA6B,CAAC,GAAuB;AACrF,MAAI,EAAC,OACE,YAEP,IAAI;AAEJ,MAAG,CAAE,WAAW,UAAU,QAAI,aAAAA,UAAS,KAAK;AAC5C,MAAI,EAAC,iBAAgB,IAAI,0CAAe;IACtC,YAAU,CAAG;IACb,qBAAmB,CAAG,QAAQ,WAAW,GAAG;EAC9C,CAAC;AAGD,MAAI,qBAAiB,aAAAC,SAAO,MAAO;AACjC,QAAI;AACF,aAAO;aACE;AACT,aAAO;WAAI;WAAW;MAAK;;AAE3B,aAAO;EAEX,GAAG;IAAC;EAAS,CAAC;AAEd,SAAO;IACL,qBAAqB;SAChB;MACH,OAAO;IACT;EACF;AACF;SAMgB,0CAAe,OAA4B;AAEzD,MAAI,EAAC,UAAU,aAAa,UAAU,OAAK,aAAa,UAAY,WAAU,IAAI;AAClF,MAAI,EAAC,oBAAmB,IAAI,0CAAkB,KAAK;AAEnD,SAAM,aAAAC,QAAA,cACH,SAAY,0CAAW,YAAY,mBAAmB,GACpD,QAAQ;AAGf;",
  "names": ["$9BxnE$useState", "$9BxnE$useMemo", "$9BxnE$react"]
}
