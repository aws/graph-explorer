{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/@react-aria+radio@3.4.0_react@17.0.2/node_modules/@react-aria/radio/dist/packages/@react-aria/radio/src/index.ts", "../../../../../node_modules/.pnpm/@react-aria+radio@3.4.0_react@17.0.2/node_modules/@react-aria/radio/dist/packages/@react-aria/radio/src/useRadio.ts", "../../../../../node_modules/.pnpm/@react-aria+radio@3.4.0_react@17.0.2/node_modules/@react-aria/radio/dist/packages/@react-aria/radio/src/utils.ts", "../../../../../node_modules/.pnpm/@react-aria+radio@3.4.0_react@17.0.2/node_modules/@react-aria/radio/dist/packages/@react-aria/radio/src/useRadioGroup.ts"],
  "sourcesContent": ["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport {useRadio} from './useRadio';\nexport {useRadioGroup} from './useRadioGroup';\nexport type {AriaRadioGroupProps, AriaRadioProps} from '@react-types/radio';\nexport type {RadioAria} from './useRadio';\nexport type {RadioGroupAria} from './useRadioGroup';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaRadioProps} from '@react-types/radio';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {InputHTMLAttributes, RefObject} from 'react';\nimport {radioGroupDescriptionIds, radioGroupErrorMessageIds, radioGroupNames} from './utils';\nimport {RadioGroupState} from '@react-stately/radio';\nimport {useFocusable} from '@react-aria/focus';\nimport {usePress} from '@react-aria/interactions';\n\nexport interface RadioAria {\n  /** Props for the input element. */\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n  /** Whether the radio is disabled. */\n  isDisabled: boolean,\n  /** Whether the radio is currently selected. */\n  isSelected: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for an individual\n * radio button in a radio group.\n * @param props - Props for the radio.\n * @param state - State for the radio group, as returned by `useRadioGroupState`.\n * @param ref - Ref to the HTML input element.\n */\nexport function useRadio(props: AriaRadioProps, state: RadioGroupState, ref: RefObject<HTMLInputElement>): RadioAria {\n  let {\n    value,\n    children,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby\n  } = props;\n\n  const isDisabled = props.isDisabled || state.isDisabled;\n\n  let hasChildren = children != null;\n  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) {\n    console.warn('If you do not provide children, you must specify an aria-label for accessibility');\n  }\n\n  let checked = state.selectedValue === value;\n\n  let onChange = (e) => {\n    e.stopPropagation();\n    state.setSelectedValue(value);\n  };\n\n  let {pressProps} = usePress({\n    isDisabled\n  });\n\n  let {focusableProps} = useFocusable(mergeProps(props, {\n    onFocus: () => state.setLastFocusedValue(value)\n  }), ref);\n  let interactions = mergeProps(pressProps, focusableProps);\n  let domProps = filterDOMProps(props, {labelable: true});\n  let tabIndex = state.lastFocusedValue === value || state.lastFocusedValue == null ? 0 : -1;\n  if (isDisabled) {\n    tabIndex = undefined;\n  }\n\n  return {\n    inputProps: mergeProps(domProps, {\n      ...interactions,\n      type: 'radio',\n      name: radioGroupNames.get(state),\n      tabIndex,\n      disabled: isDisabled,\n      checked,\n      value,\n      onChange,\n      'aria-describedby': [\n        state.validationState === 'invalid' ? radioGroupErrorMessageIds.get(state) : null,\n        radioGroupDescriptionIds.get(state)\n      ].filter(Boolean).join(' ') || undefined\n    }),\n    isDisabled,\n    isSelected: checked\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RadioGroupState} from '@react-stately/radio';\n\nexport const radioGroupNames = new WeakMap<RadioGroupState, string>();\nexport const radioGroupDescriptionIds = new WeakMap<RadioGroupState, string>();\nexport const radioGroupErrorMessageIds = new WeakMap<RadioGroupState, string>();\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaRadioGroupProps} from '@react-types/radio';\nimport {DOMAttributes} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, useId} from '@react-aria/utils';\nimport {getFocusableTreeWalker} from '@react-aria/focus';\nimport {radioGroupDescriptionIds, radioGroupErrorMessageIds, radioGroupNames} from './utils';\nimport {RadioGroupState} from '@react-stately/radio';\nimport {useField} from '@react-aria/label';\nimport {useFocusWithin} from '@react-aria/interactions';\nimport {useLocale} from '@react-aria/i18n';\n\nexport interface RadioGroupAria {\n  /** Props for the radio group wrapper element. */\n  radioGroupProps: DOMAttributes,\n  /** Props for the radio group's visible label (if any). */\n  labelProps: DOMAttributes,\n  /** Props for the radio group description element, if any. */\n  descriptionProps: DOMAttributes,\n  /** Props for the radio group error message element, if any. */\n  errorMessageProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a radio group component.\n * Radio groups allow users to select a single item from a list of mutually exclusive options.\n * @param props - Props for the radio group.\n * @param state - State for the radio group, as returned by `useRadioGroupState`.\n */\nexport function useRadioGroup(props: AriaRadioGroupProps, state: RadioGroupState): RadioGroupAria {\n  let {\n    name,\n    validationState,\n    isReadOnly,\n    isRequired,\n    isDisabled,\n    orientation = 'vertical'\n  } = props;\n  let {direction} = useLocale();\n\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField({\n    ...props,\n    // Radio group is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: 'span'\n  });\n  radioGroupDescriptionIds.set(state, descriptionProps.id);\n  radioGroupErrorMessageIds.set(state, errorMessageProps.id);\n\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  // When the radio group loses focus, reset the focusable radio to null if\n  // there is no selection. This allows tabbing into the group from either\n  // direction to go to the first or last radio.\n  let {focusWithinProps} = useFocusWithin({\n    onBlurWithin() {\n      if (!state.selectedValue) {\n        state.setLastFocusedValue(null);\n      }\n    }\n  });\n\n  let onKeyDown = (e) => {\n    let nextDir;\n    switch (e.key) {\n      case 'ArrowRight':\n        if (direction === 'rtl' && orientation !== 'vertical') {\n          nextDir = 'prev';\n        } else {\n          nextDir = 'next';\n        }\n        break;\n      case 'ArrowLeft':\n        if (direction === 'rtl' && orientation !== 'vertical') {\n          nextDir = 'next';\n        } else {\n          nextDir = 'prev';\n        }\n        break;\n      case 'ArrowDown':\n        nextDir = 'next';\n        break;\n      case 'ArrowUp':\n        nextDir = 'prev';\n        break;\n      default:\n        return;\n    }\n    e.preventDefault();\n    let walker = getFocusableTreeWalker(e.currentTarget, {from: e.target});\n    let nextElem;\n    if (nextDir === 'next') {\n      nextElem = walker.nextNode();\n      if (!nextElem) {\n        walker.currentNode = e.currentTarget;\n        nextElem = walker.firstChild();\n      }\n    } else {\n      nextElem = walker.previousNode();\n      if (!nextElem) {\n        walker.currentNode = e.currentTarget;\n        nextElem = walker.lastChild();\n      }\n    }\n    if (nextElem) {\n      // Call focus on nextElem so that keyboard navigation scrolls the radio into view\n      nextElem.focus();\n      state.setSelectedValue(nextElem.value);\n    }\n  };\n\n  let groupName = useId(name);\n  radioGroupNames.set(state, groupName);\n\n  return {\n    radioGroupProps: mergeProps(domProps, {\n      // https://www.w3.org/TR/wai-aria-1.2/#radiogroup\n      role: 'radiogroup',\n      onKeyDown,\n      'aria-invalid': validationState === 'invalid' || undefined,\n      'aria-errormessage': props['aria-errormessage'],\n      'aria-readonly': isReadOnly || undefined,\n      'aria-required': isRequired || undefined,\n      'aria-disabled': isDisabled || undefined,\n      'aria-orientation': orientation,\n      ...fieldProps,\n      ...focusWithinProps\n    }),\n    labelProps,\n    descriptionProps,\n    errorMessageProps\n  };\n}\n"],
  "mappings": "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",
  "names": []
}
