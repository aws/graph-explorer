{"mappings":"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","sources":["packages/@react-aria/interactions/src/index.ts","packages/@react-aria/interactions/src/Pressable.tsx","packages/@react-aria/interactions/src/usePress.ts","packages/@react-aria/interactions/src/textSelection.ts","packages/@react-aria/interactions/src/context.ts","packages/@react-aria/interactions/src/PressResponder.tsx","packages/@react-aria/interactions/src/useFocus.ts","packages/@react-aria/interactions/src/utils.ts","packages/@react-aria/interactions/src/useFocusVisible.ts","packages/@react-aria/interactions/src/useFocusWithin.ts","packages/@react-aria/interactions/src/useHover.ts","packages/@react-aria/interactions/src/useInteractOutside.ts","packages/@react-aria/interactions/src/useKeyboard.ts","packages/@react-aria/interactions/src/createEventHandler.ts","packages/@react-aria/interactions/src/useMove.ts","packages/@react-aria/interactions/src/useScrollWheel.ts","packages/@react-aria/interactions/src/useLongPress.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {Pressable} from './Pressable';\nexport {PressResponder} from './PressResponder';\nexport {useFocus} from './useFocus';\nexport {\n  isFocusVisible,\n  getInteractionModality,\n  setInteractionModality,\n  useInteractionModality,\n  useFocusVisible,\n  useFocusVisibleListener\n} from './useFocusVisible';\nexport {useFocusWithin} from './useFocusWithin';\nexport {useHover} from './useHover';\nexport {useInteractOutside} from './useInteractOutside';\nexport {useKeyboard} from './useKeyboard';\nexport {useMove} from './useMove';\nexport {usePress} from './usePress';\nexport {useScrollWheel} from './useScrollWheel';\nexport {useLongPress} from './useLongPress';\n\nexport type {FocusProps, FocusResult} from './useFocus';\nexport type {FocusVisibleHandler, FocusVisibleResult, Modality} from './useFocusVisible';\nexport type {FocusWithinProps, FocusWithinResult} from './useFocusWithin';\nexport type {HoverProps, HoverResult} from './useHover';\nexport type {InteractOutsideProps} from './useInteractOutside';\nexport type {KeyboardProps, KeyboardResult} from './useKeyboard';\nexport type {PressProps, PressHookProps, PressResult} from './usePress';\nexport type {MoveEvents} from '@react-types/shared';\nexport type {MoveResult} from './useMove';\nexport type {LongPressProps, LongPressResult} from './useLongPress';\nexport type {ScrollWheelProps} from './useScrollWheel';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport {PressProps, usePress} from './usePress';\nimport React, {ReactElement, RefObject, useRef} from 'react';\n\ninterface PressableProps extends PressProps {\n  children: ReactElement<DOMAttributes, string>\n}\n\nexport const Pressable = React.forwardRef(({children, ...props}: PressableProps, ref: RefObject<Element>) => {\n  let newRef = useRef();\n  ref = ref ?? newRef;\n  let {pressProps} = usePress({...props, ref});\n  let child = React.Children.only(children);\n  return React.cloneElement(\n    child,\n    // @ts-ignore\n    {ref, ...mergeProps(child.props, pressProps)}\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {disableTextSelection, restoreTextSelection} from './textSelection';\nimport {DOMAttributes, FocusableElement, PointerType, PressEvents} from '@react-types/shared';\nimport {focusWithoutScrolling, isVirtualClick, isVirtualPointerEvent, mergeProps, useGlobalListeners, useSyncRef} from '@react-aria/utils';\nimport {PressResponderContext} from './context';\nimport {RefObject, useContext, useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface PressProps extends PressEvents {\n  /** Whether the target is in a controlled press state (e.g. an overlay it triggers is open). */\n  isPressed?: boolean,\n  /** Whether the press events should be disabled. */\n  isDisabled?: boolean,\n  /** Whether the target should not receive focus on press. */\n  preventFocusOnPress?: boolean,\n  /**\n   * Whether press events should be canceled when the pointer leaves the target while pressed.\n   * By default, this is `false`, which means if the pointer returns back over the target while\n   * still pressed, onPressStart will be fired again. If set to `true`, the press is canceled\n   * when the pointer leaves the target and onPressStart will not be fired if the pointer returns.\n   */\n  shouldCancelOnPointerExit?: boolean,\n  /** Whether text selection should be enabled on the pressable element. */\n  allowTextSelectionOnPress?: boolean\n}\n\nexport interface PressHookProps extends PressProps {\n  /** A ref to the target element. */\n  ref?: RefObject<Element>\n}\n\ninterface PressState {\n  isPressed: boolean,\n  ignoreEmulatedMouseEvents: boolean,\n  ignoreClickAfterPress: boolean,\n  didFirePressStart: boolean,\n  activePointerId: any,\n  target: FocusableElement | null,\n  isOverTarget: boolean,\n  pointerType: PointerType,\n  userSelect?: string\n}\n\ninterface EventBase {\n  currentTarget: EventTarget,\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean,\n  altKey: boolean\n}\n\nexport interface PressResult {\n  /** Whether the target is currently pressed. */\n  isPressed: boolean,\n  /** Props to spread on the target element. */\n  pressProps: DOMAttributes\n}\n\nfunction usePressResponderContext(props: PressHookProps): PressHookProps {\n  // Consume context from <PressResponder> and merge with props.\n  let context = useContext(PressResponderContext);\n  if (context) {\n    let {register, ...contextProps} = context;\n    props = mergeProps(contextProps, props) as PressHookProps;\n    register();\n  }\n  useSyncRef(context, props.ref);\n\n  return props;\n}\n\n/**\n * Handles press interactions across mouse, touch, keyboard, and screen readers.\n * It normalizes behavior across browsers and platforms, and handles many nuances\n * of dealing with pointer and keyboard events.\n */\nexport function usePress(props: PressHookProps): PressResult {\n  let {\n    onPress,\n    onPressChange,\n    onPressStart,\n    onPressEnd,\n    onPressUp,\n    isDisabled,\n    isPressed: isPressedProp,\n    preventFocusOnPress,\n    shouldCancelOnPointerExit,\n    allowTextSelectionOnPress,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref: _, // Removing `ref` from `domProps` because TypeScript is dumb\n    ...domProps\n  } = usePressResponderContext(props);\n  let propsRef = useRef<PressHookProps>(null);\n  propsRef.current = {onPress, onPressChange, onPressStart, onPressEnd, onPressUp, isDisabled, shouldCancelOnPointerExit};\n\n  let [isPressed, setPressed] = useState(false);\n  let ref = useRef<PressState>({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    didFirePressStart: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false,\n    pointerType: null\n  });\n\n  let {addGlobalListener, removeAllGlobalListeners} = useGlobalListeners();\n\n  let pressProps = useMemo(() => {\n    let state = ref.current;\n    let triggerPressStart = (originalEvent: EventBase, pointerType: PointerType) => {\n      let {onPressStart, onPressChange, isDisabled} = propsRef.current;\n      if (isDisabled || state.didFirePressStart) {\n        return;\n      }\n\n      if (onPressStart) {\n        onPressStart({\n          type: 'pressstart',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(true);\n      }\n\n      state.didFirePressStart = true;\n      setPressed(true);\n    };\n\n    let triggerPressEnd = (originalEvent: EventBase, pointerType: PointerType, wasPressed = true) => {\n      let {onPressEnd, onPressChange, onPress, isDisabled} = propsRef.current;\n      if (!state.didFirePressStart) {\n        return;\n      }\n\n      state.ignoreClickAfterPress = true;\n      state.didFirePressStart = false;\n\n      if (onPressEnd) {\n        onPressEnd({\n          type: 'pressend',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(false);\n      }\n\n      setPressed(false);\n\n      if (onPress && wasPressed && !isDisabled) {\n        onPress({\n          type: 'press',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    let triggerPressUp = (originalEvent: EventBase, pointerType: PointerType) => {\n      let {onPressUp, isDisabled} = propsRef.current;\n      if (isDisabled) {\n        return;\n      }\n\n      if (onPressUp) {\n        onPressUp({\n          type: 'pressup',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    let cancel = (e: EventBase) => {\n      if (state.isPressed) {\n        if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n        state.isPressed = false;\n        state.isOverTarget = false;\n        state.activePointerId = null;\n        state.pointerType = null;\n        removeAllGlobalListeners();\n        if (!allowTextSelectionOnPress) {\n          restoreTextSelection(state.target);\n        }\n      }\n    };\n\n    let pressProps: DOMAttributes = {\n      onKeyDown(e) {\n        if (isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && e.currentTarget.contains(e.target as Element)) {\n          if (shouldPreventDefaultKeyboard(e.target as Element, e.key)) {\n            e.preventDefault();\n          }\n          e.stopPropagation();\n\n          // If the event is repeating, it may have started on a different element\n          // after which focus moved to the current element. Ignore these events and\n          // only handle the first key down event.\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget;\n            state.isPressed = true;\n            triggerPressStart(e, 'keyboard');\n\n            // Focus may move before the key up event, so register the event on the document\n            // instead of the same element where the key down event occurred.\n            addGlobalListener(document, 'keyup', onKeyUp, false);\n          }\n        } else if (e.key === 'Enter' && isHTMLAnchorLink(e.currentTarget)) {\n          // If the target is a link, we won't have handled this above because we want the default\n          // browser behavior to open the link when pressing Enter. But we still need to prevent\n          // default so that elements above do not also handle it (e.g. table row).\n          e.stopPropagation();\n        }\n      },\n      onKeyUp(e) {\n        if (isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && !e.repeat && e.currentTarget.contains(e.target as Element)) {\n          triggerPressUp(createEvent(state.target, e), 'keyboard');\n        }\n      },\n      onClick(e) {\n        if (e && !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (e && e.button === 0) {\n          e.stopPropagation();\n          if (isDisabled) {\n            e.preventDefault();\n          }\n\n          // If triggered from a screen reader or by using element.click(),\n          // trigger as if it were a keyboard click.\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === 'virtual' || isVirtualClick(e.nativeEvent))) {\n            // Ensure the element receives focus (VoiceOver on iOS does not do this)\n            if (!isDisabled && !preventFocusOnPress) {\n              focusWithoutScrolling(e.currentTarget);\n            }\n\n            triggerPressStart(e, 'virtual');\n            triggerPressUp(e, 'virtual');\n            triggerPressEnd(e, 'virtual');\n          }\n\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n        }\n      }\n    };\n\n    let onKeyUp = (e: KeyboardEvent) => {\n      if (state.isPressed && isValidKeyboardEvent(e, state.target)) {\n        if (shouldPreventDefaultKeyboard(e.target as Element, e.key)) {\n          e.preventDefault();\n        }\n        e.stopPropagation();\n\n        state.isPressed = false;\n        let target = e.target as Element;\n        triggerPressEnd(createEvent(state.target, e), 'keyboard', state.target.contains(target));\n        removeAllGlobalListeners();\n\n        // If the target is a link, trigger the click method to open the URL,\n        // but defer triggering pressEnd until onClick event handler.\n        if (state.target instanceof HTMLElement && state.target.contains(target) && (isHTMLAnchorLink(state.target) || state.target.getAttribute('role') === 'link')) {\n          state.target.click();\n        }\n      }\n    };\n\n    if (typeof PointerEvent !== 'undefined') {\n      pressProps.onPointerDown = (e) => {\n        // Only handle left clicks, and ignore events that bubbled through portals.\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // iOS safari fires pointer events from VoiceOver with incorrect coordinates/target.\n        // Ignore and let the onClick handler take care of it instead.\n        // https://bugs.webkit.org/show_bug.cgi?id=222627\n        // https://bugs.webkit.org/show_bug.cgi?id=223202\n        if (isVirtualPointerEvent(e.nativeEvent)) {\n          state.pointerType = 'virtual';\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on pointer down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.currentTarget as Element)) {\n          e.preventDefault();\n        }\n\n        state.pointerType = e.pointerType;\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n\n          if (!isDisabled && !preventFocusOnPress) {\n            focusWithoutScrolling(e.currentTarget);\n          }\n\n          if (!allowTextSelectionOnPress) {\n            disableTextSelection(state.target);\n          }\n\n          triggerPressStart(e, state.pointerType);\n\n          addGlobalListener(document, 'pointermove', onPointerMove, false);\n          addGlobalListener(document, 'pointerup', onPointerUp, false);\n          addGlobalListener(document, 'pointercancel', onPointerCancel, false);\n        }\n      };\n\n      pressProps.onMouseDown = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (e.button === 0) {\n          // Chrome and Firefox on touch Windows devices require mouse down events\n          // to be canceled in addition to pointer events, or an extra asynchronous\n          // focus event will be fired.\n          if (shouldPreventDefault(e.currentTarget as Element)) {\n            e.preventDefault();\n          }\n\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onPointerUp = (e) => {\n        // iOS fires pointerup with zero width and height, so check the pointerType recorded during pointerdown.\n        if (!e.currentTarget.contains(e.target as Element) || state.pointerType === 'virtual') {\n          return;\n        }\n\n        // Only handle left clicks\n        // Safari on iOS sometimes fires pointerup events, even\n        // when the touch isn't over the target, so double check.\n        if (e.button === 0 && isOverTarget(e, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType || e.pointerType);\n        }\n      };\n\n      // Safari on iOS < 13.2 does not implement pointerenter/pointerleave events correctly.\n      // Use pointer move events instead to implement our own hit testing.\n      // See https://bugs.webkit.org/show_bug.cgi?id=199803\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId !== state.activePointerId) {\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(createEvent(state.target, e), state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {\n          if (isOverTarget(e, state.target)) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType);\n          } else if (state.isOverTarget) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          }\n\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          state.pointerType = null;\n          removeAllGlobalListeners();\n          if (!allowTextSelectionOnPress) {\n            restoreTextSelection(state.target);\n          }\n        }\n      };\n\n      let onPointerCancel = (e: PointerEvent) => {\n        cancel(e);\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // Safari does not call onPointerCancel when a drag starts, whereas Chrome and Firefox do.\n        cancel(e);\n      };\n    } else {\n      pressProps.onMouseDown = (e) => {\n        // Only handle left clicks\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on mouse down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.currentTarget)) {\n          e.preventDefault();\n        }\n\n        e.stopPropagation();\n        if (state.ignoreEmulatedMouseEvents) {\n          return;\n        }\n\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n        state.pointerType = isVirtualClick(e.nativeEvent) ? 'virtual' : 'mouse';\n\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        triggerPressStart(e, state.pointerType);\n\n        addGlobalListener(document, 'mouseup', onMouseUp, false);\n      };\n\n      pressProps.onMouseEnter = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = true;\n          triggerPressStart(e, state.pointerType);\n        }\n      };\n\n      pressProps.onMouseLeave = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      pressProps.onMouseUp = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) {\n          triggerPressUp(e, state.pointerType);\n        }\n      };\n\n      let onMouseUp = (e: MouseEvent) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        state.isPressed = false;\n        removeAllGlobalListeners();\n\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n\n        state.isOverTarget = false;\n      };\n\n      pressProps.onTouchStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        let touch = getTouchFromEvent(e.nativeEvent);\n        if (!touch) {\n          return;\n        }\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n        state.pointerType = 'touch';\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent default\n        // on the emulated mouse event and handle focusing the pressable element ourselves.\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        if (!allowTextSelectionOnPress) {\n          disableTextSelection(state.target);\n        }\n\n        triggerPressStart(e, state.pointerType);\n\n        addGlobalListener(window, 'scroll', onScroll, true);\n      };\n\n      pressProps.onTouchMove = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(e, state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      pressProps.onTouchEnd = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType);\n          triggerPressEnd(e, state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(e, state.pointerType, false);\n        }\n\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        if (!allowTextSelectionOnPress) {\n          restoreTextSelection(state.target);\n        }\n        removeAllGlobalListeners();\n      };\n\n      pressProps.onTouchCancel = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed) {\n          cancel(e);\n        }\n      };\n\n      let onScroll = (e: Event) => {\n        if (state.isPressed && (e.target as Element).contains(state.target)) {\n          cancel({\n            currentTarget: state.target,\n            shiftKey: false,\n            ctrlKey: false,\n            metaKey: false,\n            altKey: false\n          });\n        }\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        cancel(e);\n      };\n    }\n\n    return pressProps;\n  }, [addGlobalListener, isDisabled, preventFocusOnPress, removeAllGlobalListeners, allowTextSelectionOnPress]);\n\n  // Remove user-select: none in case component unmounts immediately after pressStart\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      if (!allowTextSelectionOnPress) {\n        restoreTextSelection(ref.current.target);\n      }\n    };\n  }, [allowTextSelectionOnPress]);\n\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: mergeProps(domProps, pressProps)\n  };\n}\n\nfunction isHTMLAnchorLink(target: Element): boolean {\n  return target.tagName === 'A' && target.hasAttribute('href');\n}\n\nfunction isValidKeyboardEvent(event: KeyboardEvent, currentTarget: Element): boolean {\n  const {key, code} = event;\n  const element = currentTarget as HTMLElement;\n  const role = element.getAttribute('role');\n  // Accessibility for keyboards. Space and Enter only.\n  // \"Spacebar\" is for IE 11\n  return (\n    (key === 'Enter' || key === ' ' || key === 'Spacebar' || code === 'Space') &&\n    !((element instanceof HTMLInputElement && !isValidInputKey(element, key)) ||\n      element instanceof HTMLTextAreaElement ||\n      element.isContentEditable) &&\n    // A link with a valid href should be handled natively,\n    // unless it also has role='button' and was triggered using Space.\n    (!isHTMLAnchorLink(element) || (role === 'button' && key !== 'Enter')) &&\n    // An element with role='link' should only trigger with Enter key\n    !(role === 'link' && key !== 'Enter')\n  );\n}\n\nfunction getTouchFromEvent(event: TouchEvent): Touch | null {\n  const {targetTouches} = event;\n  if (targetTouches.length > 0) {\n    return targetTouches[0];\n  }\n  return null;\n}\n\nfunction getTouchById(\n  event: TouchEvent,\n  pointerId: null | number\n): null | Touch {\n  const changedTouches = event.changedTouches;\n  for (let i = 0; i < changedTouches.length; i++) {\n    const touch = changedTouches[i];\n    if (touch.identifier === pointerId) {\n      return touch;\n    }\n  }\n  return null;\n}\n\nfunction createEvent(target: FocusableElement, e: EventBase): EventBase {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey,\n    altKey: e.altKey\n  };\n}\n\ninterface Rect {\n  top: number,\n  right: number,\n  bottom: number,\n  left: number\n}\n\ninterface EventPoint {\n  clientX: number,\n  clientY: number,\n  width?: number,\n  height?: number,\n  radiusX?: number,\n  radiusY?: number\n}\n\nfunction getPointClientRect(point: EventPoint): Rect {\n  let offsetX = (point.width / 2) || point.radiusX || 0;\n  let offsetY = (point.height / 2) || point.radiusY || 0;\n\n  return {\n    top: point.clientY - offsetY,\n    right: point.clientX + offsetX,\n    bottom: point.clientY + offsetY,\n    left: point.clientX - offsetX\n  };\n}\n\nfunction areRectanglesOverlapping(a: Rect, b: Rect) {\n  // check if they cannot overlap on x axis\n  if (a.left > b.right || b.left > a.right) {\n    return false;\n  }\n  // check if they cannot overlap on y axis\n  if (a.top > b.bottom || b.top > a.bottom) {\n    return false;\n  }\n  return true;\n}\n\nfunction isOverTarget(point: EventPoint, target: Element) {\n  let rect = target.getBoundingClientRect();\n  let pointRect = getPointClientRect(point);\n  return areRectanglesOverlapping(rect, pointRect);\n}\n\nfunction shouldPreventDefault(target: Element) {\n  // We cannot prevent default if the target is a draggable element.\n  return !(target instanceof HTMLElement) || !target.draggable;\n}\n\nfunction shouldPreventDefaultKeyboard(target: Element, key: string) {\n  if (target instanceof HTMLInputElement) {\n    return !isValidInputKey(target, key);\n  }\n\n  if (target instanceof HTMLButtonElement) {\n    return target.type !== 'submit';\n  }\n\n  return true;\n}\n\nconst nonTextInputTypes = new Set([\n  'checkbox',\n  'radio',\n  'range',\n  'color',\n  'file',\n  'image',\n  'button',\n  'submit',\n  'reset'\n]);\n\nfunction isValidInputKey(target: HTMLInputElement, key: string) {\n  // Only space should toggle checkboxes and radios, not enter.\n  return target.type === 'checkbox' || target.type === 'radio'\n    ? key === ' '\n    : nonTextInputTypes.has(target.type);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isIOS, runAfterTransition} from '@react-aria/utils';\n\n// Safari on iOS starts selecting text on long press. The only way to avoid this, it seems,\n// is to add user-select: none to the entire page. Adding it to the pressable element prevents\n// that element from being selected, but nearby elements may still receive selection. We add\n// user-select: none on touch start, and remove it again on touch end to prevent this.\n// This must be implemented using global state to avoid race conditions between multiple elements.\n\n// There are three possible states due to the delay before removing user-select: none after\n// pointer up. The 'default' state always transitions to the 'disabled' state, which transitions\n// to 'restoring'. The 'restoring' state can either transition back to 'disabled' or 'default'.\n\n// For non-iOS devices, we apply user-select: none to the pressed element instead to avoid possible\n// performance issues that arise from applying and removing user-select: none to the entire page\n// (see https://github.com/adobe/react-spectrum/issues/1609).\ntype State = 'default' | 'disabled' | 'restoring';\n\n// Note that state only matters here for iOS. Non-iOS gets user-select: none applied to the target element\n// rather than at the document level so we just need to apply/remove user-select: none for each pressed element individually\nlet state: State = 'default';\nlet savedUserSelect = '';\nlet modifiedElementMap = new WeakMap<Element, string>();\n\nexport function disableTextSelection(target?: Element) {\n  if (isIOS()) {\n    if (state === 'default') {\n      savedUserSelect = document.documentElement.style.webkitUserSelect;\n      document.documentElement.style.webkitUserSelect = 'none';\n    }\n\n    state = 'disabled';\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    // If not iOS, store the target's original user-select and change to user-select: none\n    // Ignore state since it doesn't apply for non iOS\n    modifiedElementMap.set(target, target.style.userSelect);\n    target.style.userSelect = 'none';\n  }\n}\n\nexport function restoreTextSelection(target?: Element) {\n  if (isIOS()) {\n    // If the state is already default, there's nothing to do.\n    // If it is restoring, then there's no need to queue a second restore.\n    if (state !== 'disabled') {\n      return;\n    }\n\n    state = 'restoring';\n\n    // There appears to be a delay on iOS where selection still might occur\n    // after pointer up, so wait a bit before removing user-select.\n    setTimeout(() => {\n      // Wait for any CSS transitions to complete so we don't recompute style\n      // for the whole page in the middle of the animation and cause jank.\n      runAfterTransition(() => {\n        // Avoid race conditions\n        if (state === 'restoring') {\n          if (document.documentElement.style.webkitUserSelect === 'none') {\n            document.documentElement.style.webkitUserSelect = savedUserSelect || '';\n          }\n\n          savedUserSelect = '';\n          state = 'default';\n        }\n      });\n    }, 300);\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    // If not iOS, restore the target's original user-select if any\n    // Ignore state since it doesn't apply for non iOS\n    if (target && modifiedElementMap.has(target)) {\n      let targetOldUserSelect = modifiedElementMap.get(target);\n\n      if (target.style.userSelect === 'none') {\n        target.style.userSelect = targetOldUserSelect;\n      }\n\n      if (target.getAttribute('style') === '') {\n        target.removeAttribute('style');\n      }\n      modifiedElementMap.delete(target);\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {PressProps} from './usePress';\nimport React, {MutableRefObject} from 'react';\n\ninterface IPressResponderContext extends PressProps {\n  register(): void,\n  ref?: MutableRefObject<FocusableElement>\n}\n\nexport const PressResponderContext = React.createContext<IPressResponderContext>(null);\nPressResponderContext.displayName = 'PressResponderContext';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {mergeProps, useSyncRef} from '@react-aria/utils';\nimport {PressProps} from './usePress';\nimport {PressResponderContext} from './context';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\n\ninterface PressResponderProps extends PressProps {\n  children: ReactNode\n}\n\nexport const PressResponder = React.forwardRef(({children, ...props}: PressResponderProps, ref: RefObject<FocusableElement>) => {\n  let isRegistered = useRef(false);\n  let prevContext = useContext(PressResponderContext);\n  let context = mergeProps(prevContext || {}, {\n    ...props,\n    ref: ref || prevContext?.ref,\n    register() {\n      isRegistered.current = true;\n      if (prevContext) {\n        prevContext.register();\n      }\n    }\n  });\n\n  useSyncRef(prevContext, ref);\n\n  useEffect(() => {\n    if (!isRegistered.current) {\n      console.warn(\n        'A PressResponder was rendered without a pressable child. ' +\n        'Either call the usePress hook, or wrap your DOM node with <Pressable> component.'\n      );\n    }\n  }, []);\n\n  return (\n    <PressResponderContext.Provider value={context}>\n      {children}\n    </PressResponderContext.Provider>\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes, FocusEvents} from '@react-types/shared';\nimport {FocusEvent, useCallback} from 'react';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusProps extends FocusEvents {\n  /** Whether the focus events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface FocusResult {\n  /** Props to spread onto the target element. */\n  focusProps: DOMAttributes\n}\n\n/**\n * Handles focus events for the immediate target.\n * Focus events on child elements will be ignored.\n */\nexport function useFocus(props: FocusProps): FocusResult {\n  let {\n    isDisabled,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    onFocusChange\n  } = props;\n\n  const onBlur: FocusProps['onBlur'] = useCallback((e: FocusEvent) => {\n    if (e.target === e.currentTarget) {\n      if (onBlurProp) {\n        onBlurProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(false);\n      }\n\n      return true;\n    }\n  }, [onBlurProp, onFocusChange]);\n\n\n  const onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n\n  const onFocus: FocusProps['onFocus'] = useCallback((e: FocusEvent) => {\n    if (e.target === e.currentTarget) {\n      if (onFocusProp) {\n        onFocusProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(true);\n      }\n\n      onSyntheticFocus(e);\n    }\n  }, [onFocusChange, onFocusProp, onSyntheticFocus]);\n\n  return {\n    focusProps: {\n      onFocus: (!isDisabled && (onFocusProp || onFocusChange || onBlurProp)) ? onFocus : undefined,\n      onBlur: (!isDisabled && (onBlurProp || onFocusChange)) ? onBlur : null\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusEvent as ReactFocusEvent, useCallback, useRef} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\nexport class SyntheticFocusEvent implements ReactFocusEvent {\n  nativeEvent: FocusEvent;\n  target: Element;\n  currentTarget: Element;\n  relatedTarget: Element;\n  bubbles: boolean;\n  cancelable: boolean;\n  defaultPrevented: boolean;\n  eventPhase: number;\n  isTrusted: boolean;\n  timeStamp: number;\n  type: string;\n\n  constructor(type: string, nativeEvent: FocusEvent) {\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEvent.target as Element;\n    this.currentTarget = nativeEvent.currentTarget as Element;\n    this.relatedTarget = nativeEvent.relatedTarget as Element;\n    this.bubbles = nativeEvent.bubbles;\n    this.cancelable = nativeEvent.cancelable;\n    this.defaultPrevented = nativeEvent.defaultPrevented;\n    this.eventPhase = nativeEvent.eventPhase;\n    this.isTrusted = nativeEvent.isTrusted;\n    this.timeStamp = nativeEvent.timeStamp;\n    this.type = type;\n  }\n\n  isDefaultPrevented(): boolean {\n    return this.nativeEvent.defaultPrevented;\n  }\n\n  preventDefault(): void {\n    this.defaultPrevented = true;\n    this.nativeEvent.preventDefault();\n  }\n\n  stopPropagation(): void {\n    this.nativeEvent.stopPropagation();\n    this.isPropagationStopped = () => true;\n  }\n\n  isPropagationStopped(): boolean {\n    return false;\n  }\n\n  persist() {}\n}\n\nexport function useSyntheticBlurEvent(onBlur: (e: ReactFocusEvent) => void) {\n  let stateRef = useRef({\n    isFocused: false,\n    onBlur,\n    observer: null as MutationObserver\n  });\n  stateRef.current.onBlur = onBlur;\n\n  // Clean up MutationObserver on unmount. See below.\n  // eslint-disable-next-line arrow-body-style\n  useLayoutEffect(() => {\n    const state = stateRef.current;\n    return () => {\n      if (state.observer) {\n        state.observer.disconnect();\n        state.observer = null;\n      }\n    };\n  }, []);\n\n  // This function is called during a React onFocus event.\n  return useCallback((e: ReactFocusEvent) => {\n    // React does not fire onBlur when an element is disabled. https://github.com/facebook/react/issues/9142\n    // Most browsers fire a native focusout event in this case, except for Firefox. In that case, we use a\n    // MutationObserver to watch for the disabled attribute, and dispatch these events ourselves.\n    // For browsers that do, focusout fires before the MutationObserver, so onBlur should not fire twice.\n    if (\n      e.target instanceof HTMLButtonElement ||\n      e.target instanceof HTMLInputElement ||\n      e.target instanceof HTMLTextAreaElement ||\n      e.target instanceof HTMLSelectElement\n    ) {\n      stateRef.current.isFocused = true;\n\n      let target = e.target;\n      let onBlurHandler = (e: FocusEvent) => {\n        stateRef.current.isFocused = false;\n\n        if (target.disabled) {\n          // For backward compatibility, dispatch a (fake) React synthetic event.\n          stateRef.current.onBlur?.(new SyntheticFocusEvent('blur', e));\n        }\n\n        // We no longer need the MutationObserver once the target is blurred.\n        if (stateRef.current.observer) {\n          stateRef.current.observer.disconnect();\n          stateRef.current.observer = null;\n        }\n      };\n\n      target.addEventListener('focusout', onBlurHandler, {once: true});\n\n      stateRef.current.observer = new MutationObserver(() => {\n        if (stateRef.current.isFocused && target.disabled) {\n          stateRef.current.observer.disconnect();\n          target.dispatchEvent(new FocusEvent('blur'));\n          target.dispatchEvent(new FocusEvent('focusout', {bubbles: true}));\n        }\n      });\n\n      stateRef.current.observer.observe(target, {attributes: true, attributeFilter: ['disabled']});\n    }\n  }, []);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {isMac, isVirtualClick} from '@react-aria/utils';\nimport {useEffect, useState} from 'react';\n\nexport type Modality = 'keyboard' | 'pointer' | 'virtual';\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent;\ntype Handler = (modality: Modality, e: HandlerEvent) => void;\nexport type FocusVisibleHandler = (isFocusVisible: boolean) => void;\ninterface FocusVisibleProps {\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusVisibleResult {\n  /** Whether keyboard focus is visible globally. */\n  isFocusVisible: boolean\n}\n\nlet currentModality = null;\nlet changeHandlers = new Set<Handler>();\nlet hasSetupGlobalListeners = false;\nlet hasEventBeforeFocus = false;\nlet hasBlurredWindowRecently = false;\n\n// Only Tab or Esc keys will make focus visible on text input elements\nconst FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\n\nfunction triggerChangeHandlers(modality: Modality, e: HandlerEvent) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\n\n/**\n * Helper function to determine if a KeyboardEvent is unmodified and could make keyboard focus styles visible.\n */\nfunction isValidKey(e: KeyboardEvent) {\n  // Control and Shift keys trigger when navigating back to the tab with keyboard.\n  return !(e.metaKey || (!isMac() && e.altKey) || e.ctrlKey || e.key === 'Control' || e.key === 'Shift' || e.key === 'Meta');\n}\n\n\nfunction handleKeyboardEvent(e: KeyboardEvent) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = 'keyboard';\n    triggerChangeHandlers('keyboard', e);\n  }\n}\n\nfunction handlePointerEvent(e: PointerEvent | MouseEvent) {\n  currentModality = 'pointer';\n  if (e.type === 'mousedown' || e.type === 'pointerdown') {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers('pointer', e);\n  }\n}\n\nfunction handleClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = 'virtual';\n  }\n}\n\nfunction handleFocusEvent(e: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (e.target === window || e.target === document) {\n    return;\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to virtual modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    currentModality = 'virtual';\n    triggerChangeHandlers('virtual', e);\n  }\n\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\n\nfunction handleWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\n\n/**\n * Setup global event listeners to control when keyboard focus style should be visible.\n */\nfunction setupGlobalFocusEvents() {\n  if (typeof window === 'undefined' || hasSetupGlobalListeners) {\n    return;\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  let focus = HTMLElement.prototype.focus;\n  HTMLElement.prototype.focus = function () {\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n\n  document.addEventListener('keydown', handleKeyboardEvent, true);\n  document.addEventListener('keyup', handleKeyboardEvent, true);\n  document.addEventListener('click', handleClickEvent, true);\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener('focus', handleFocusEvent, true);\n  window.addEventListener('blur', handleWindowBlur, false);\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerdown', handlePointerEvent, true);\n    document.addEventListener('pointermove', handlePointerEvent, true);\n    document.addEventListener('pointerup', handlePointerEvent, true);\n  } else {\n    document.addEventListener('mousedown', handlePointerEvent, true);\n    document.addEventListener('mousemove', handlePointerEvent, true);\n    document.addEventListener('mouseup', handlePointerEvent, true);\n  }\n\n  hasSetupGlobalListeners = true;\n}\n\nif (typeof document !== 'undefined') {\n  if (document.readyState !== 'loading') {\n    setupGlobalFocusEvents();\n  } else {\n    document.addEventListener('DOMContentLoaded', setupGlobalFocusEvents);\n  }\n}\n\n/**\n * If true, keyboard focus is visible.\n */\nexport function isFocusVisible(): boolean {\n  return currentModality !== 'pointer';\n}\n\nexport function getInteractionModality(): Modality {\n  return currentModality;\n}\n\nexport function setInteractionModality(modality: Modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\n\n/**\n * Keeps state of the current modality.\n */\nexport function useInteractionModality(): Modality {\n  setupGlobalFocusEvents();\n\n  let [modality, setModality] = useState(currentModality);\n  useEffect(() => {\n    let handler = () => {\n      setModality(currentModality);\n    };\n\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, []);\n\n  return modality;\n}\n\n/**\n * If this is attached to text input component, return if the event is a focus event (Tab/Escape keys pressed) so that\n * focus visible style can be properly set.\n */\nfunction isKeyboardFocusEvent(isTextInput: boolean, modality: Modality, e: HandlerEvent) {\n  return !(isTextInput && modality === 'keyboard' && e instanceof KeyboardEvent && !FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\n\n/**\n * Manages focus visible state for the page, and subscribes individual components for updates.\n */\nexport function useFocusVisible(props: FocusVisibleProps = {}): FocusVisibleResult {\n  let {isTextInput, autoFocus} = props;\n  let [isFocusVisibleState, setFocusVisible] = useState(autoFocus || isFocusVisible());\n  useFocusVisibleListener((isFocusVisible) => {\n    setFocusVisible(isFocusVisible);\n  }, [isTextInput], {isTextInput});\n\n  return {isFocusVisible: isFocusVisibleState};\n}\n\n/**\n * Listens for trigger change and reports if focus is visible (i.e., modality is not pointer).\n */\nexport function useFocusVisibleListener(fn: FocusVisibleHandler, deps: ReadonlyArray<any>, opts?: {isTextInput?: boolean}): void {\n  setupGlobalFocusEvents();\n\n  useEffect(() => {\n    let handler = (modality: Modality, e: HandlerEvent) => {\n      if (!isKeyboardFocusEvent(opts?.isTextInput, modality, e)) {\n        return;\n      }\n      fn(isFocusVisible());\n    };\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, deps);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {FocusEvent, useCallback, useRef} from 'react';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusWithinProps {\n  /** Whether the focus within events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when the target element or a descendant receives focus. */\n  onFocusWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the target element and all descendants lose focus. */\n  onBlurWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the the focus within state changes. */\n  onFocusWithinChange?: (isFocusWithin: boolean) => void\n}\n\nexport interface FocusWithinResult {\n  /** Props to spread onto the target element. */\n  focusWithinProps: DOMAttributes\n}\n\n/**\n * Handles focus events for the target and its descendants.\n */\nexport function useFocusWithin(props: FocusWithinProps): FocusWithinResult {\n  let {\n    isDisabled,\n    onBlurWithin,\n    onFocusWithin,\n    onFocusWithinChange\n  } = props;\n  let state = useRef({\n    isFocusWithin: false\n  });\n\n  let onBlur = useCallback((e: FocusEvent) => {\n    // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n    // when moving focus inside the element. Only trigger if the currentTarget doesn't\n    // include the relatedTarget (where focus is moving).\n    if (state.current.isFocusWithin && !(e.currentTarget as Element).contains(e.relatedTarget as Element)) {\n      state.current.isFocusWithin = false;\n\n      if (onBlurWithin) {\n        onBlurWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(false);\n      }\n    }\n  }, [onBlurWithin, onFocusWithinChange, state]);\n\n  let onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n  let onFocus = useCallback((e: FocusEvent) => {\n    if (!state.current.isFocusWithin) {\n      if (onFocusWithin) {\n        onFocusWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(true);\n      }\n\n      state.current.isFocusWithin = true;\n      onSyntheticFocus(e);\n    }\n  }, [onFocusWithin, onFocusWithinChange, onSyntheticFocus]);\n\n  if (isDisabled) {\n    return {\n      focusWithinProps: {\n        onFocus: null,\n        onBlur: null\n      }\n    };\n  }\n\n  return {\n    focusWithinProps: {\n      onFocus,\n      onBlur\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {HoverEvents} from '@react-types/shared';\nimport {useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface HoverProps extends HoverEvents {\n  /** Whether the hover events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface HoverResult {\n  /** Props to spread on the target element. */\n  hoverProps: DOMAttributes,\n  isHovered: boolean\n}\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nlet globalIgnoreEmulatedMouseEvents = false;\nlet hoverCount = 0;\n\nfunction setGlobalIgnoreEmulatedMouseEvents() {\n  globalIgnoreEmulatedMouseEvents = true;\n\n  // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n  // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n  // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n  // the distant future because a user previously touched the element.\n  setTimeout(() => {\n    globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\n\nfunction handleGlobalPointerEvent(e) {\n  if (e.pointerType === 'touch') {\n    setGlobalIgnoreEmulatedMouseEvents();\n  }\n}\n\nfunction setupGlobalTouchEvents() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerup', handleGlobalPointerEvent);\n  } else {\n    document.addEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n  }\n\n  hoverCount++;\n  return () => {\n    hoverCount--;\n    if (hoverCount > 0) {\n      return;\n    }\n\n    if (typeof PointerEvent !== 'undefined') {\n      document.removeEventListener('pointerup', handleGlobalPointerEvent);\n    } else {\n      document.removeEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n    }\n  };\n}\n\n/**\n * Handles pointer hover interactions for an element. Normalizes behavior\n * across browsers and platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useHover(props: HoverProps): HoverResult {\n  let {\n    onHoverStart,\n    onHoverChange,\n    onHoverEnd,\n    isDisabled\n  } = props;\n\n  let [isHovered, setHovered] = useState(false);\n  let state = useRef({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: '',\n    target: null\n  }).current;\n\n  useEffect(setupGlobalTouchEvents, []);\n\n  let {hoverProps, triggerHoverEnd} = useMemo(() => {\n    let triggerHoverStart = (event, pointerType) => {\n      state.pointerType = pointerType;\n      if (isDisabled || pointerType === 'touch' || state.isHovered || !event.currentTarget.contains(event.target)) {\n        return;\n      }\n\n      state.isHovered = true;\n      let target = event.currentTarget;\n      state.target = target;\n\n      if (onHoverStart) {\n        onHoverStart({\n          type: 'hoverstart',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(true);\n      }\n\n      setHovered(true);\n    };\n\n    let triggerHoverEnd = (event, pointerType) => {\n      state.pointerType = '';\n      state.target = null;\n\n      if (pointerType === 'touch' || !state.isHovered) {\n        return;\n      }\n\n      state.isHovered = false;\n      let target = event.currentTarget;\n      if (onHoverEnd) {\n        onHoverEnd({\n          type: 'hoverend',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(false);\n      }\n\n      setHovered(false);\n    };\n\n    let hoverProps: DOMAttributes = {};\n\n    if (typeof PointerEvent !== 'undefined') {\n      hoverProps.onPointerEnter = (e) => {\n        if (globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') {\n          return;\n        }\n\n        triggerHoverStart(e, e.pointerType);\n      };\n\n      hoverProps.onPointerLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, e.pointerType);\n        }\n      };\n    } else {\n      hoverProps.onTouchStart = () => {\n        state.ignoreEmulatedMouseEvents = true;\n      };\n\n      hoverProps.onMouseEnter = (e) => {\n        if (!state.ignoreEmulatedMouseEvents && !globalIgnoreEmulatedMouseEvents) {\n          triggerHoverStart(e, 'mouse');\n        }\n\n        state.ignoreEmulatedMouseEvents = false;\n      };\n\n      hoverProps.onMouseLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, 'mouse');\n        }\n      };\n    }\n    return {hoverProps, triggerHoverEnd};\n  }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]);\n\n  useEffect(() => {\n    // Call the triggerHoverEnd as soon as isDisabled changes to true\n    // Safe to call triggerHoverEnd, it will early return if we aren't currently hovering\n    if (isDisabled) {\n      triggerHoverEnd({currentTarget: state.target}, state.pointerType);\n    }\n  }, [isDisabled]);\n\n  return {\n    hoverProps,\n    isHovered\n  };\n}\n\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {RefObject, SyntheticEvent, useEffect, useRef} from 'react';\n\nexport interface InteractOutsideProps {\n  ref: RefObject<Element>,\n  onInteractOutside?: (e: SyntheticEvent) => void,\n  onInteractOutsideStart?: (e: SyntheticEvent) => void,\n  /** Whether the interact outside events should be disabled. */\n  isDisabled?: boolean\n}\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useInteractOutside(props: InteractOutsideProps) {\n  let {ref, onInteractOutside, isDisabled, onInteractOutsideStart} = props;\n  let stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n    onInteractOutside,\n    onInteractOutsideStart\n  });\n  let state = stateRef.current;\n  state.onInteractOutside = onInteractOutside;\n  state.onInteractOutsideStart = onInteractOutsideStart;\n\n  useEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    let onPointerDown = (e) => {\n      if (isValidEvent(e, ref) && state.onInteractOutside) {\n        if (state.onInteractOutsideStart) {\n          state.onInteractOutsideStart(e);\n        }\n        state.isPointerDown = true;\n      }\n    };\n\n    // Use pointer events if available. Otherwise, fall back to mouse and touch events.\n    if (typeof PointerEvent !== 'undefined') {\n      let onPointerUp = (e) => {\n        if (state.isPointerDown && state.onInteractOutside && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n\n      // changing these to capture phase fixed combobox\n      document.addEventListener('pointerdown', onPointerDown, true);\n      document.addEventListener('pointerup', onPointerUp, true);\n\n      return () => {\n        document.removeEventListener('pointerdown', onPointerDown, true);\n        document.removeEventListener('pointerup', onPointerUp, true);\n      };\n    } else {\n      let onMouseUp = (e) => {\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n        } else if (state.isPointerDown && state.onInteractOutside && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n\n      let onTouchEnd = (e) => {\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.onInteractOutside && state.isPointerDown && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n\n      document.addEventListener('mousedown', onPointerDown, true);\n      document.addEventListener('mouseup', onMouseUp, true);\n      document.addEventListener('touchstart', onPointerDown, true);\n      document.addEventListener('touchend', onTouchEnd, true);\n\n      return () => {\n        document.removeEventListener('mousedown', onPointerDown, true);\n        document.removeEventListener('mouseup', onMouseUp, true);\n        document.removeEventListener('touchstart', onPointerDown, true);\n        document.removeEventListener('touchend', onTouchEnd, true);\n      };\n    }\n  }, [ref, state, isDisabled]);\n}\n\nfunction isValidEvent(event, ref) {\n  if (event.button > 0) {\n    return false;\n  }\n\n  // if the event target is no longer in the document\n  if (event.target) {\n    const ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) {\n      return false;\n    }\n  }\n\n  return ref.current && !ref.current.contains(event.target);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {createEventHandler} from './createEventHandler';\nimport {DOMAttributes, KeyboardEvents} from '@react-types/shared';\n\nexport interface KeyboardProps extends KeyboardEvents {\n  /** Whether the keyboard events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface KeyboardResult {\n  /** Props to spread onto the target element. */\n  keyboardProps: DOMAttributes\n}\n\n/**\n * Handles keyboard interactions for a focusable element.\n */\nexport function useKeyboard(props: KeyboardProps): KeyboardResult {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: createEventHandler(props.onKeyDown),\n      onKeyUp: createEventHandler(props.onKeyUp)\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BaseEvent} from '@react-types/shared';\nimport {SyntheticEvent} from 'react';\n\n/**\n * This function wraps a React event handler to make stopPropagation the default, and support continuePropagation instead.\n */\nexport function createEventHandler<T extends SyntheticEvent>(handler: (e: BaseEvent<T>) => void): (e: T) => void {\n  if (!handler) {\n    return;\n  }\n\n  let shouldStopPropagation = true;\n  return (e: T) => {\n    let event: BaseEvent<T> = {\n      ...e,\n      preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation() {\n        console.error('stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.');\n      },\n      continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    };\n\n    handler(event);\n\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {disableTextSelection, restoreTextSelection}  from './textSelection';\nimport {DOMAttributes, MoveEvents, PointerType} from '@react-types/shared';\nimport React, {useMemo, useRef} from 'react';\nimport {useGlobalListeners} from '@react-aria/utils';\n\nexport interface MoveResult {\n  /** Props to spread on the target element. */\n  moveProps: DOMAttributes\n}\n\ninterface EventBase {\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean,\n  altKey: boolean\n}\n\n/**\n * Handles move interactions across mouse, touch, and keyboard, including dragging with\n * the mouse or touch, and using the arrow keys. Normalizes behavior across browsers and\n * platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useMove(props: MoveEvents): MoveResult {\n  let {onMoveStart, onMove, onMoveEnd} = props;\n\n  let state = useRef<{\n    didMove: boolean,\n    lastPosition: {pageX: number, pageY: number} | null,\n    id: number | null\n  }>({didMove: false, lastPosition: null, id: null});\n\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let moveProps = useMemo(() => {\n    let moveProps: DOMAttributes = {};\n\n    let start = () => {\n      disableTextSelection();\n      state.current.didMove = false;\n    };\n    let move = (originalEvent: EventBase, pointerType: PointerType, deltaX: number, deltaY: number) => {\n      if (deltaX === 0 && deltaY === 0) {\n        return;\n      }\n\n      if (!state.current.didMove) {\n        state.current.didMove = true;\n        onMoveStart?.({\n          type: 'movestart',\n          pointerType,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n      onMove({\n        type: 'move',\n        pointerType,\n        deltaX: deltaX,\n        deltaY: deltaY,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n    let end = (originalEvent: EventBase, pointerType: PointerType) => {\n      restoreTextSelection();\n      if (state.current.didMove) {\n        onMoveEnd?.({\n          type: 'moveend',\n          pointerType,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    if (typeof PointerEvent === 'undefined') {\n      let onMouseMove = (e: MouseEvent) => {\n        if (e.button === 0) {\n          move(e, 'mouse', e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n      let onMouseUp = (e: MouseEvent) => {\n        if (e.button === 0) {\n          end(e, 'mouse');\n          removeGlobalListener(window, 'mousemove', onMouseMove, false);\n          removeGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = (e: React.MouseEvent) => {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          addGlobalListener(window, 'mousemove', onMouseMove, false);\n          addGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n\n      let onTouchMove = (e: TouchEvent) => {\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          let {pageX, pageY} = e.changedTouches[touch];\n          move(e, 'touch', pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX, pageY};\n        }\n      };\n      let onTouchEnd = (e: TouchEvent) => {\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          end(e, 'touch');\n          state.current.id = null;\n          removeGlobalListener(window, 'touchmove', onTouchMove);\n          removeGlobalListener(window, 'touchend', onTouchEnd);\n          removeGlobalListener(window, 'touchcancel', onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = (e: React.TouchEvent) => {\n        if (e.changedTouches.length === 0 || state.current.id != null) {\n          return;\n        }\n\n        let {pageX, pageY, identifier} = e.changedTouches[0];\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {pageX, pageY};\n        state.current.id = identifier;\n        addGlobalListener(window, 'touchmove', onTouchMove, false);\n        addGlobalListener(window, 'touchend', onTouchEnd, false);\n        addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n      };\n    } else {\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          let pointerType = (e.pointerType || 'mouse') as PointerType;\n\n          // Problems with PointerEvent#movementX/movementY:\n          // 1. it is always 0 on macOS Safari.\n          // 2. On Chrome Android, it's scaled by devicePixelRatio, but not on Chrome macOS\n          move(e, pointerType, e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          let pointerType = (e.pointerType || 'mouse') as PointerType;\n          end(e, pointerType);\n          state.current.id = null;\n          removeGlobalListener(window, 'pointermove', onPointerMove, false);\n          removeGlobalListener(window, 'pointerup', onPointerUp, false);\n          removeGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n\n      moveProps.onPointerDown = (e: React.PointerEvent) => {\n        if (e.button === 0 && state.current.id == null) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          state.current.id = e.pointerId;\n          addGlobalListener(window, 'pointermove', onPointerMove, false);\n          addGlobalListener(window, 'pointerup', onPointerUp, false);\n          addGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n    }\n\n    let triggerKeyboardMove = (e: EventBase, deltaX: number, deltaY: number) => {\n      start();\n      move(e, 'keyboard', deltaX, deltaY);\n      end(e, 'keyboard');\n    };\n\n    moveProps.onKeyDown = (e) => {\n      switch (e.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, -1, 0);\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 1, 0);\n          break;\n        case 'Up':\n        case 'ArrowUp':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, -1);\n          break;\n        case 'Down':\n        case 'ArrowDown':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, 1);\n          break;\n      }\n    };\n\n    return moveProps;\n  }, [state, onMoveStart, onMove, onMoveEnd, addGlobalListener, removeGlobalListener]);\n\n  return {moveProps};\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, useCallback} from 'react';\nimport {ScrollEvents} from '@react-types/shared';\nimport {useEvent} from '@react-aria/utils';\n\nexport interface ScrollWheelProps extends ScrollEvents {\n  /** Whether the scroll listener should be disabled. */\n  isDisabled?: boolean\n}\n\n// scroll wheel needs to be added not passively so it's cancelable, small helper hook to remember that\nexport function useScrollWheel(props: ScrollWheelProps, ref: RefObject<HTMLElement>): void {\n  let {onScroll, isDisabled} = props;\n  let onScrollHandler = useCallback((e) => {\n    // If the ctrlKey is pressed, this is a zoom event, do nothing.\n    if (e.ctrlKey) {\n      return;\n    }\n\n    // stop scrolling the page\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (onScroll) {\n      onScroll({deltaX: e.deltaX, deltaY: e.deltaY});\n    }\n  }, [onScroll]);\n\n  useEvent(ref, 'wheel', isDisabled ? null : onScrollHandler);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, LongPressEvent} from '@react-types/shared';\nimport {mergeProps, useDescription, useGlobalListeners} from '@react-aria/utils';\nimport {usePress} from './usePress';\nimport {useRef} from 'react';\n\nexport interface LongPressProps {\n  /** Whether long press events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when a long press interaction starts. */\n  onLongPressStart?: (e: LongPressEvent) => void,\n  /**\n   * Handler that is called when a long press interaction ends, either\n   * over the target or when the pointer leaves the target.\n   */\n  onLongPressEnd?: (e: LongPressEvent) => void,\n  /**\n   * Handler that is called when the threshold time is met while\n   * the press is over the target.\n   */\n  onLongPress?: (e: LongPressEvent) => void,\n  /**\n   * The amount of time in milliseconds to wait before triggering a long press.\n   * @default 500ms\n   */\n  threshold?: number,\n  /**\n   * A description for assistive techology users indicating that a long press\n   * action is available, e.g. \"Long press to open menu\".\n   */\n  accessibilityDescription?: string\n}\n\nexport interface LongPressResult {\n  /** Props to spread on the target element. */\n  longPressProps: DOMAttributes\n}\n\nconst DEFAULT_THRESHOLD = 500;\n\n/**\n * Handles long press interactions across mouse and touch devices. Supports a customizable time threshold,\n * accessibility description, and normalizes behavior across browsers and devices.\n */\nexport function useLongPress(props: LongPressProps): LongPressResult {\n  let {\n    isDisabled,\n    onLongPressStart,\n    onLongPressEnd,\n    onLongPress,\n    threshold = DEFAULT_THRESHOLD,\n    accessibilityDescription\n  } = props;\n\n  const timeRef = useRef(null);\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let {pressProps} = usePress({\n    isDisabled,\n    onPressStart(e) {\n      if (e.pointerType === 'mouse' || e.pointerType === 'touch') {\n        if (onLongPressStart) {\n          onLongPressStart({\n            ...e,\n            type: 'longpressstart'\n          });\n        }\n\n        timeRef.current = setTimeout(() => {\n          // Prevent other usePress handlers from also handling this event.\n          e.target.dispatchEvent(new PointerEvent('pointercancel', {bubbles: true}));\n          if (onLongPress) {\n            onLongPress({\n              ...e,\n              type: 'longpress'\n            });\n          }\n          timeRef.current = null;\n        }, threshold);\n\n        // Prevent context menu, which may be opened on long press on touch devices\n        if (e.pointerType === 'touch') {\n          let onContextMenu = e => {\n            e.preventDefault();\n          };\n\n          addGlobalListener(e.target, 'contextmenu', onContextMenu, {once: true});\n          addGlobalListener(window, 'pointerup', () => {\n            // If no contextmenu event is fired quickly after pointerup, remove the handler\n            // so future context menu events outside a long press are not prevented.\n            setTimeout(() => {\n              removeGlobalListener(e.target, 'contextmenu', onContextMenu);\n            }, 30);\n          }, {once: true});\n        }\n      }\n    },\n    onPressEnd(e) {\n      if (timeRef.current) {\n        clearTimeout(timeRef.current);\n      }\n\n      if (onLongPressEnd && (e.pointerType === 'mouse' || e.pointerType === 'touch')) {\n        onLongPressEnd({\n          ...e,\n          type: 'longpressend'\n        });\n      }\n    }\n  });\n\n  let descriptionProps = useDescription(onLongPress && !isDisabled ? accessibilityDescription : null);\n\n  return {\n    longPressProps: mergeProps(pressProps, descriptionProps)\n  };\n}\n"],"names":[],"version":3,"file":"main.js.map"}