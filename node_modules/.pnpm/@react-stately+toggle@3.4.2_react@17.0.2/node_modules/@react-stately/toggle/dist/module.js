import {useControlledState as $bOkae$useControlledState} from "@react-stately/utils";


function $3017fa7ffdddec74$export$8042c6c013fd5226(props = {
}) {
    let { isReadOnly: isReadOnly  } = props;
    // have to provide an empty function so useControlledState doesn't throw a fit
    // can't use useControlledState's prop calling because we need the event object from the change
    let [isSelected, setSelected] = $bOkae$useControlledState(props.isSelected, props.defaultSelected || false, props.onChange);
    function updateSelected(value) {
        if (!isReadOnly) setSelected(value);
    }
    function toggleState() {
        if (!isReadOnly) setSelected(!isSelected);
    }
    return {
        isSelected: isSelected,
        setSelected: updateSelected,
        toggle: toggleState
    };
}




export {$3017fa7ffdddec74$export$8042c6c013fd5226 as useToggleState};
//# sourceMappingURL=module.js.map
