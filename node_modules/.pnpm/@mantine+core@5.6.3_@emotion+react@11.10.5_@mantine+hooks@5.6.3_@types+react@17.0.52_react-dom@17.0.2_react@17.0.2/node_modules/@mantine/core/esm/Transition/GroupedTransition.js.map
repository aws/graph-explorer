{"version":3,"file":"GroupedTransition.js","sources":["../../src/Transition/GroupedTransition.tsx"],"sourcesContent":["import React from 'react';\nimport { getTransitionStyles } from './get-transition-styles/get-transition-styles';\nimport { useTransition } from './use-transition';\nimport { MantineTransition } from './transitions';\n\ninterface GroupedTransitionItem {\n  duration: number;\n  timingFunction?: React.CSSProperties['transitionTimingFunction'];\n  transition: MantineTransition;\n}\n\nexport interface GroupedTransitionProps {\n  /** Transitions group */\n  transitions: Record<string, GroupedTransitionItem>;\n\n  /** Render function with transition group styles argument */\n  children(styles: Record<string, React.CSSProperties>): React.ReactElement<any, any>;\n\n  /** Enter transition duration in ms */\n  duration?: number;\n\n  /** Exit transition duration in ms */\n  exitDuration?: number;\n\n  /** Transition timing function, defaults to theme.transitionTimingFunction */\n  timingFunction?: string;\n\n  /** When true, component will be mounted */\n  mounted: boolean;\n\n  /** Calls when exit transition ends */\n  onExited?: () => void;\n\n  /** Calls when exit transition starts */\n  onExit?: () => void;\n\n  /** Calls when enter transition starts */\n  onEnter?: () => void;\n\n  /** Calls when enter transition ends */\n  onEntered?: () => void;\n}\n\nexport function GroupedTransition({\n  transitions,\n  duration = 250,\n  exitDuration = duration,\n  mounted,\n  children,\n  timingFunction,\n  onExit,\n  onEntered,\n  onEnter,\n  onExited,\n}: GroupedTransitionProps) {\n  const { transitionDuration, transitionStatus, transitionTimingFunction } = useTransition({\n    mounted,\n    duration,\n    exitDuration,\n    timingFunction,\n    onExit,\n    onEntered,\n    onEnter,\n    onExited,\n  });\n\n  if (transitionDuration === 0) {\n    return mounted ? <>{children({})}</> : null;\n  }\n\n  if (transitionStatus === 'exited') {\n    return null;\n  }\n\n  const transitionsStyles = Object.keys(transitions).reduce((acc, transition) => {\n    acc[transition] = getTransitionStyles({\n      duration: transitions[transition].duration,\n      transition: transitions[transition].transition,\n      timingFunction: transitions[transition].timingFunction || transitionTimingFunction,\n      state: transitionStatus,\n    });\n\n    return acc;\n  }, {});\n\n  return <>{children(transitionsStyles)}</>;\n}\n\nGroupedTransition.displayName = '@mantine/core/GroupedTransition';\n"],"names":[],"mappings":";;;;AAGO,SAAS,iBAAiB,CAAC;AAClC,EAAE,WAAW;AACb,EAAE,QAAQ,GAAG,GAAG;AAChB,EAAE,YAAY,GAAG,QAAQ;AACzB,EAAE,OAAO;AACT,EAAE,QAAQ;AACV,EAAE,cAAc;AAChB,EAAE,MAAM;AACR,EAAE,SAAS;AACX,EAAE,OAAO;AACT,EAAE,QAAQ;AACV,CAAC,EAAE;AACH,EAAE,MAAM,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,wBAAwB,EAAE,GAAG,aAAa,CAAC;AAC3F,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,YAAY;AAChB,IAAI,cAAc;AAClB,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,GAAG,CAAC,CAAC;AACL,EAAE,IAAI,kBAAkB,KAAK,CAAC,EAAE;AAChC,IAAI,OAAO,OAAO,mBAAmB,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;AACpG,GAAG;AACH,EAAE,IAAI,gBAAgB,KAAK,QAAQ,EAAE;AACrC,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,MAAM,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,UAAU,KAAK;AACjF,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,mBAAmB,CAAC;AAC1C,MAAM,QAAQ,EAAE,WAAW,CAAC,UAAU,CAAC,CAAC,QAAQ;AAChD,MAAM,UAAU,EAAE,WAAW,CAAC,UAAU,CAAC,CAAC,UAAU;AACpD,MAAM,cAAc,EAAE,WAAW,CAAC,UAAU,CAAC,CAAC,cAAc,IAAI,wBAAwB;AACxF,MAAM,KAAK,EAAE,gBAAgB;AAC7B,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,GAAG,CAAC;AACf,GAAG,EAAE,EAAE,CAAC,CAAC;AACT,EAAE,uBAAuB,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAChG,CAAC;AACD,iBAAiB,CAAC,WAAW,GAAG,iCAAiC;;;;"}