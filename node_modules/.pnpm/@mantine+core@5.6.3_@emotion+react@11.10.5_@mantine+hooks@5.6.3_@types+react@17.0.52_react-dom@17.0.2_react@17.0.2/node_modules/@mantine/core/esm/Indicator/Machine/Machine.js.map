{"version":3,"file":"Machine.js","sources":["../../../src/Indicator/Machine/Machine.tsx"],"sourcesContent":["import React, { useState, forwardRef, useMemo, useEffect } from 'react';\nimport { usePrevious } from '@mantine/hooks';\nimport { MachineNumber } from './MachineNumber';\nimport useStyles from './Machine.styles';\n\ninterface MachineNumberProps {\n  value: number | string;\n  max: number;\n}\n\nexport const Machine = forwardRef<HTMLDivElement, MachineNumberProps>(({ value = 0, max }, ref) => {\n  const [oldValue, setOldValue] = useState<number>();\n  const [newValue, setNewValue] = useState<number>();\n  const prevValueRef = usePrevious(value);\n\n  useEffect(() => {\n    if (typeof value === 'string') {\n      setOldValue(undefined);\n      setNewValue(undefined);\n    } else if (typeof prevValueRef === 'string') {\n      setOldValue(undefined);\n      setNewValue(value);\n    } else {\n      setOldValue(prevValueRef);\n      setNewValue(value);\n    }\n  }, [value, prevValueRef]);\n\n  const numbers = useMemo(() => {\n    if (typeof value === 'string') {\n      return [];\n    }\n\n    if (value < 1) {\n      return [0];\n    }\n\n    const result: number[] = [];\n    let currentValue = value;\n\n    if (typeof max === 'number') {\n      currentValue = Math.min(max, currentValue);\n    }\n\n    while (currentValue >= 1) {\n      result.push(currentValue % 10);\n      currentValue /= 10;\n      currentValue = Math.floor(currentValue);\n    }\n\n    result.reverse();\n    return result;\n  }, [value, max]);\n\n  const { classes } = useStyles(null, { name: 'machine' });\n\n  return typeof value === 'string' ? (\n    <span ref={ref}>{value}</span>\n  ) : (\n    <span ref={ref} className={classes.base}>\n      {numbers.map((number, i) => (\n        <MachineNumber\n          key={numbers.length - i - 1}\n          value={number}\n          oldOriginalNumber={oldValue}\n          newOriginalNumber={newValue}\n        />\n      ))}\n      {typeof max === 'number' && value > max && <span>+</span>}\n    </span>\n  );\n});\n"],"names":[],"mappings":"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"}