import { DefaultProps } from '@mantine/styles';
import { InputWrapperBaseProps } from './InputWrapper/InputWrapper';
import { InputSharedProps } from './Input';
interface BaseProps extends InputWrapperBaseProps, InputSharedProps, DefaultProps {
    __staticSelector?: string;
    id?: string;
}
export declare function useInputProps<T extends BaseProps, U extends Partial<T>>(component: string, defaultProps: U, props: T): Omit<import("@mantine/styles").MantineStyleSystemProps & Omit<[never] extends [keyof T] ? T : { [Key in Exclude<keyof T, never>]: T[Key]; } & { [Key_1 in Extract<keyof T, never>]-?: {}[Key_1] & T[Key_1]; }, "className" | "style" | "sx" | "classNames" | "styles" | "unstyled" | "label" | "id" | "required" | "size" | "description" | "__staticSelector" | "error" | "withAsterisk" | "labelProps" | "descriptionProps" | "errorProps" | "inputContainer" | "inputWrapperOrder" | "wrapperProps">, "m" | "my" | "mx" | "mt" | "mb" | "ml" | "mr" | "p" | "py" | "px" | "pt" | "pb" | "pl" | "pr"> & {
    classNames: Partial<Record<never, string>> | T["classNames"];
    styles: import("@mantine/styles").Styles<never, Record<string, any>> | T["styles"];
    unstyled: boolean | T["unstyled"];
    wrapperProps: {
        m: (string & {}) | import("@mantine/styles").MantineNumberSize;
        mx: (string & {}) | import("@mantine/styles").MantineNumberSize;
        my: (string & {}) | import("@mantine/styles").MantineNumberSize;
        mt: (string & {}) | import("@mantine/styles").MantineNumberSize;
        mb: (string & {}) | import("@mantine/styles").MantineNumberSize;
        ml: (string & {}) | import("@mantine/styles").MantineNumberSize;
        mr: (string & {}) | import("@mantine/styles").MantineNumberSize;
        p: (string & {}) | import("@mantine/styles").MantineNumberSize;
        px: (string & {}) | import("@mantine/styles").MantineNumberSize;
        py: (string & {}) | import("@mantine/styles").MantineNumberSize;
        pt: (string & {}) | import("@mantine/styles").MantineNumberSize;
        pb: (string & {}) | import("@mantine/styles").MantineNumberSize;
        pl: (string & {}) | import("@mantine/styles").MantineNumberSize;
        pr: (string & {}) | import("@mantine/styles").MantineNumberSize;
        label: import("react").ReactNode | T["label"];
        description: import("react").ReactNode | T["description"];
        error: import("react").ReactNode | T["error"];
        required: boolean | T["required"];
        classNames: Partial<Record<never, string>> | T["classNames"];
        className: string | T["className"];
        __staticSelector: string | T["__staticSelector"];
        sx: import("@mantine/styles").Sx | import("@mantine/styles").Sx[] | T["sx"];
        errorProps: Record<string, any> | T["errorProps"];
        labelProps: Record<string, any> | T["labelProps"];
        descriptionProps: Record<string, any> | T["descriptionProps"];
        unstyled: boolean | T["unstyled"];
        styles: import("@mantine/styles").Styles<never, Record<string, any>> | T["styles"];
        id: string;
        size: import("@mantine/styles").MantineSize | T["size"];
        style: import("react").CSSProperties | T["style"];
        inputContainer: ((children: import("react").ReactNode) => import("react").ReactNode) | T["inputContainer"];
        inputWrapperOrder: ("input" | "label" | "description" | "error")[] | T["inputWrapperOrder"];
        withAsterisk: boolean | T["withAsterisk"];
    } | ({
        label: import("react").ReactNode | T["label"];
        description: import("react").ReactNode | T["description"];
        error: import("react").ReactNode | T["error"];
        required: boolean | T["required"];
        classNames: Partial<Record<never, string>> | T["classNames"];
        className: string | T["className"];
        __staticSelector: string | T["__staticSelector"];
        sx: import("@mantine/styles").Sx | import("@mantine/styles").Sx[] | T["sx"];
        errorProps: Record<string, any> | T["errorProps"];
        labelProps: Record<string, any> | T["labelProps"];
        descriptionProps: Record<string, any> | T["descriptionProps"];
        unstyled: boolean | T["unstyled"];
        styles: import("@mantine/styles").Styles<never, Record<string, any>> | T["styles"];
        id: string;
        size: import("@mantine/styles").MantineSize | T["size"];
        style: import("react").CSSProperties | T["style"];
        inputContainer: ((children: import("react").ReactNode) => import("react").ReactNode) | T["inputContainer"];
        inputWrapperOrder: ("input" | "label" | "description" | "error")[] | T["inputWrapperOrder"];
        withAsterisk: boolean | T["withAsterisk"];
    } & T["wrapperProps"] & {
        m: (string & {}) | import("@mantine/styles").MantineNumberSize;
        mx: (string & {}) | import("@mantine/styles").MantineNumberSize;
        my: (string & {}) | import("@mantine/styles").MantineNumberSize;
        mt: (string & {}) | import("@mantine/styles").MantineNumberSize;
        mb: (string & {}) | import("@mantine/styles").MantineNumberSize;
        ml: (string & {}) | import("@mantine/styles").MantineNumberSize;
        mr: (string & {}) | import("@mantine/styles").MantineNumberSize;
        p: (string & {}) | import("@mantine/styles").MantineNumberSize;
        px: (string & {}) | import("@mantine/styles").MantineNumberSize;
        py: (string & {}) | import("@mantine/styles").MantineNumberSize;
        pt: (string & {}) | import("@mantine/styles").MantineNumberSize;
        pb: (string & {}) | import("@mantine/styles").MantineNumberSize;
        pl: (string & {}) | import("@mantine/styles").MantineNumberSize;
        pr: (string & {}) | import("@mantine/styles").MantineNumberSize;
    });
    inputProps: {
        required: boolean | T["required"];
        classNames: Partial<Record<never, string>> | T["classNames"];
        styles: import("@mantine/styles").Styles<never, Record<string, any>> | T["styles"];
        unstyled: boolean | T["unstyled"];
        id: string;
        size: import("@mantine/styles").MantineSize | T["size"];
        __staticSelector: string | T["__staticSelector"];
        invalid: boolean;
    };
};
export {};
//# sourceMappingURL=use-input-props.d.ts.map