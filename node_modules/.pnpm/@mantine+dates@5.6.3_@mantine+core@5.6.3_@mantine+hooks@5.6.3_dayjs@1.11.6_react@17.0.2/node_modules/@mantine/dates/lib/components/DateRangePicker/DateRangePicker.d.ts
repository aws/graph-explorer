import React from 'react';
import { FirstDayOfWeek } from '../../types';
import { CalendarSharedProps } from '../CalendarBase/CalendarBase';
import { DatePickerBaseSharedProps } from '../DatePickerBase/DatePickerBase';
export declare type DateRangePickerValue = [Date | null, Date | null];
export interface DateRangePickerProps extends Omit<DatePickerBaseSharedProps, 'value' | 'onChange' | 'fixOnBlur'>, Omit<CalendarSharedProps, 'size' | 'styles' | 'classNames' | 'value' | 'onChange' | 'onMonthChange' | 'onMonthChange' | 'onChange' | 'isDateInRange' | 'isDateFirstInRange' | 'isDateLastInRange' | 'month'> {
    /** Selected date, required with controlled input */
    value?: DateRangePickerValue;
    /** Called when date range changes */
    onChange?(value: DateRangePickerValue): void;
    /** Default value for uncontrolled input */
    defaultValue?: DateRangePickerValue;
    /** Set to false to force dropdown to stay open after date was selected */
    closeCalendarOnChange?: boolean;
    /** Set to true to open dropdown on clear */
    openDropdownOnClear?: boolean;
    /** dayjs input format */
    inputFormat?: string;
    /** Control initial dropdown opened state */
    initiallyOpened?: boolean;
    /** Input name, useful fon uncontrolled variant to capture data with native form */
    name?: string;
    /** Separator between dates */
    labelSeparator?: string;
    /** Set first day of the week */
    firstDayOfWeek?: FirstDayOfWeek;
    /** Allow one date to be selected as range */
    allowSingleDateInRange?: boolean;
    /** Allows to show multiple months */
    amountOfMonths?: number;
    /** Render day based on the date */
    renderDay?(date: Date): React.ReactNode;
}
export declare const DateRangePicker: React.ForwardRefExoticComponent<DateRangePickerProps & React.RefAttributes<HTMLInputElement>>;
//# sourceMappingURL=DateRangePicker.d.ts.map