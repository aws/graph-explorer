'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var core = require('@mantine/core');
var CalendarBase = require('../CalendarBase/CalendarBase.js');
require('dayjs');
var isSameDate = require('../../utils/is-same-date/is-same-date.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e['default'] : e; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const defaultProps = {
  __staticSelector: "Calendar"
};
function Calendar(props) {
  const _a = core.useComponentDefaultProps("Calendar", defaultProps, props), {
    __staticSelector = "Calendar",
    multiple,
    value,
    onChange
  } = _a, others = __objRest(_a, [
    "__staticSelector",
    "multiple",
    "value",
    "onChange"
  ]);
  const handleChange = (date) => {
    if (!multiple) {
      return onChange(date);
    }
    const isSelected = value.some((val) => isSameDate.isSameDate(val, date));
    return onChange(isSelected ? value.filter((val) => !isSameDate.isSameDate(val, date)) : [...value, date]);
  };
  return /* @__PURE__ */ React__default.createElement(CalendarBase.CalendarBase, __spreadValues({
    __staticSelector,
    onChange: handleChange,
    value
  }, others));
}
Calendar.displayName = "@mantine/dates/Calendar";

exports.Calendar = Calendar;
//# sourceMappingURL=Calendar.js.map
