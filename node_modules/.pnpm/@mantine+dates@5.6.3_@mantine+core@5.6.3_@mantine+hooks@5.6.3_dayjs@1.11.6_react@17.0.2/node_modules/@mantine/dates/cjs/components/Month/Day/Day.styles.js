'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var core = require('@mantine/core');

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const sizes = {
  xs: 34,
  sm: 38,
  md: 46,
  lg: 58,
  xl: 66
};
var useStyles = core.createStyles((theme, { size, fullWidth, hideOutsideDates }) => ({
  day: __spreadProps(__spreadValues(__spreadProps(__spreadValues(__spreadValues({}, theme.fn.fontStyles()), theme.fn.focusStyles()), {
    position: "relative",
    WebkitTapHighlightColor: "transparent",
    backgroundColor: "transparent",
    width: fullWidth ? "100%" : theme.fn.size({ size, sizes }),
    height: theme.fn.size({ size, sizes }),
    lineHeight: `${theme.fn.size({ size, sizes })}px`,
    fontSize: theme.fn.size({ size, sizes: theme.fontSizes }),
    padding: 0,
    borderRadius: theme.radius.sm,
    border: "none",
    cursor: "pointer",
    userSelect: "none",
    color: theme.colorScheme === "dark" ? theme.colors.dark[0] : theme.colors.gray[7],
    "&:disabled": {
      pointerEvents: "none",
      color: theme.colorScheme === "dark" ? theme.colors.dark[3] : theme.colors.gray[4]
    }
  }), theme.fn.hover({
    backgroundColor: theme.colorScheme === "dark" ? theme.colors.dark[5] : theme.colors.gray[0]
  })), {
    "&[data-weekend]": {
      color: theme.colorScheme === "dark" ? theme.colors.red[5] : theme.colors.red[7]
    },
    "&[data-outside]": {
      display: hideOutsideDates ? "none" : void 0,
      color: `${theme.colorScheme === "dark" ? theme.colors.dark[3] : theme.colors.gray[4]}`
    },
    "&[data-in-range]": {
      backgroundColor: theme.fn.variant({ variant: "light" }).background,
      borderRadius: 0
    },
    "&[data-selected]": {
      backgroundColor: theme.fn.variant({ variant: "filled" }).background,
      color: theme.white
    },
    "&[data-first-in-range]": {
      borderTopLeftRadius: theme.radius.sm,
      borderBottomLeftRadius: theme.radius.sm
    },
    "&[data-last-in-range]": {
      borderTopRightRadius: theme.radius.sm,
      borderBottomRightRadius: theme.radius.sm
    }
  })
}));

exports.default = useStyles;
exports.sizes = sizes;
//# sourceMappingURL=Day.styles.js.map
